# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: topos/locations/v1/locations.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='topos/locations/v1/locations.proto',
  package='topos.locations.v1',
  syntax='proto3',
  serialized_options=_b('Z\034topos/locations/v1;locations'),
  serialized_pb=_b('\n\"topos/locations/v1/locations.proto\x12\x12topos.locations.v1\x1a\x1cgoogle/api/annotations.proto\"\x1a\n\nRegionType\x12\x0c\n\x04name\x18\x01 \x01(\t\"(\n\x06Region\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08geometry\x18\x02 \x01(\x0c\" \n\x10GetRegionRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"q\n\x14SearchRegionsRequest\x12\x11\n\tpage_size\x18\x01 \x01(\x05\x12\x12\n\npage_token\x18\x02 \x01(\t\x12\x13\n\x0bregion_type\x18\x03 \x01(\t\x12\x1d\n\x15intersecting_geometry\x18\x04 \x01(\x0c\"]\n\x15SearchRegionsResponse\x12+\n\x07regions\x18\x01 \x03(\x0b\x32\x1a.topos.locations.v1.Region\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t2\xa5\x02\n\tLocations\x12y\n\tGetRegion\x12$.topos.locations.v1.GetRegionRequest\x1a\x1a.topos.locations.v1.Region\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/{name=regionTypes/*/regions/*}\x12\x9c\x01\n\rSearchRegions\x12(.topos.locations.v1.SearchRegionsRequest\x1a).topos.locations.v1.SearchRegionsResponse\"6\x82\xd3\xe4\x93\x02\x30\x12./v1/{region_type=regionTypes/*}/regions:searchB\x1eZ\x1ctopos/locations/v1;locationsb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,])




_REGIONTYPE = _descriptor.Descriptor(
  name='RegionType',
  full_name='topos.locations.v1.RegionType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='topos.locations.v1.RegionType.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=114,
)


_REGION = _descriptor.Descriptor(
  name='Region',
  full_name='topos.locations.v1.Region',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='topos.locations.v1.Region.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='geometry', full_name='topos.locations.v1.Region.geometry', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=156,
)


_GETREGIONREQUEST = _descriptor.Descriptor(
  name='GetRegionRequest',
  full_name='topos.locations.v1.GetRegionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='topos.locations.v1.GetRegionRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=190,
)


_SEARCHREGIONSREQUEST = _descriptor.Descriptor(
  name='SearchRegionsRequest',
  full_name='topos.locations.v1.SearchRegionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='page_size', full_name='topos.locations.v1.SearchRegionsRequest.page_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='topos.locations.v1.SearchRegionsRequest.page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='region_type', full_name='topos.locations.v1.SearchRegionsRequest.region_type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='intersecting_geometry', full_name='topos.locations.v1.SearchRegionsRequest.intersecting_geometry', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=192,
  serialized_end=305,
)


_SEARCHREGIONSRESPONSE = _descriptor.Descriptor(
  name='SearchRegionsResponse',
  full_name='topos.locations.v1.SearchRegionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regions', full_name='topos.locations.v1.SearchRegionsResponse.regions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='topos.locations.v1.SearchRegionsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=307,
  serialized_end=400,
)

_SEARCHREGIONSRESPONSE.fields_by_name['regions'].message_type = _REGION
DESCRIPTOR.message_types_by_name['RegionType'] = _REGIONTYPE
DESCRIPTOR.message_types_by_name['Region'] = _REGION
DESCRIPTOR.message_types_by_name['GetRegionRequest'] = _GETREGIONREQUEST
DESCRIPTOR.message_types_by_name['SearchRegionsRequest'] = _SEARCHREGIONSREQUEST
DESCRIPTOR.message_types_by_name['SearchRegionsResponse'] = _SEARCHREGIONSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RegionType = _reflection.GeneratedProtocolMessageType('RegionType', (_message.Message,), dict(
  DESCRIPTOR = _REGIONTYPE,
  __module__ = 'topos.locations.v1.locations_pb2'
  # @@protoc_insertion_point(class_scope:topos.locations.v1.RegionType)
  ))
_sym_db.RegisterMessage(RegionType)

Region = _reflection.GeneratedProtocolMessageType('Region', (_message.Message,), dict(
  DESCRIPTOR = _REGION,
  __module__ = 'topos.locations.v1.locations_pb2'
  # @@protoc_insertion_point(class_scope:topos.locations.v1.Region)
  ))
_sym_db.RegisterMessage(Region)

GetRegionRequest = _reflection.GeneratedProtocolMessageType('GetRegionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREGIONREQUEST,
  __module__ = 'topos.locations.v1.locations_pb2'
  # @@protoc_insertion_point(class_scope:topos.locations.v1.GetRegionRequest)
  ))
_sym_db.RegisterMessage(GetRegionRequest)

SearchRegionsRequest = _reflection.GeneratedProtocolMessageType('SearchRegionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREGIONSREQUEST,
  __module__ = 'topos.locations.v1.locations_pb2'
  # @@protoc_insertion_point(class_scope:topos.locations.v1.SearchRegionsRequest)
  ))
_sym_db.RegisterMessage(SearchRegionsRequest)

SearchRegionsResponse = _reflection.GeneratedProtocolMessageType('SearchRegionsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREGIONSRESPONSE,
  __module__ = 'topos.locations.v1.locations_pb2'
  # @@protoc_insertion_point(class_scope:topos.locations.v1.SearchRegionsResponse)
  ))
_sym_db.RegisterMessage(SearchRegionsResponse)


DESCRIPTOR._options = None

_LOCATIONS = _descriptor.ServiceDescriptor(
  name='Locations',
  full_name='topos.locations.v1.Locations',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=403,
  serialized_end=696,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRegion',
    full_name='topos.locations.v1.Locations.GetRegion',
    index=0,
    containing_service=None,
    input_type=_GETREGIONREQUEST,
    output_type=_REGION,
    serialized_options=_b('\202\323\344\223\002$\022\"/v1/{name=regionTypes/*/regions/*}'),
  ),
  _descriptor.MethodDescriptor(
    name='SearchRegions',
    full_name='topos.locations.v1.Locations.SearchRegions',
    index=1,
    containing_service=None,
    input_type=_SEARCHREGIONSREQUEST,
    output_type=_SEARCHREGIONSRESPONSE,
    serialized_options=_b('\202\323\344\223\0020\022./v1/{region_type=regionTypes/*}/regions:search'),
  ),
])
_sym_db.RegisterServiceDescriptor(_LOCATIONS)

DESCRIPTOR.services_by_name['Locations'] = _LOCATIONS

# @@protoc_insertion_point(module_scope)
