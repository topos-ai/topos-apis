// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/topiary/v1/topiary.proto

package topiary

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListIDsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous search request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDsRequest) Reset()         { *m = ListIDsRequest{} }
func (m *ListIDsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIDsRequest) ProtoMessage()    {}
func (*ListIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{0}
}

func (m *ListIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDsRequest.Unmarshal(m, b)
}
func (m *ListIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDsRequest.Marshal(b, m, deterministic)
}
func (m *ListIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDsRequest.Merge(m, src)
}
func (m *ListIDsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIDsRequest.Size(m)
}
func (m *ListIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDsRequest proto.InternalMessageInfo

func (m *ListIDsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListIDsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListIDsResponse struct {
	Ids [][]byte `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDsResponse) Reset()         { *m = ListIDsResponse{} }
func (m *ListIDsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIDsResponse) ProtoMessage()    {}
func (*ListIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{1}
}

func (m *ListIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDsResponse.Unmarshal(m, b)
}
func (m *ListIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDsResponse.Marshal(b, m, deterministic)
}
func (m *ListIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDsResponse.Merge(m, src)
}
func (m *ListIDsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIDsResponse.Size(m)
}
func (m *ListIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDsResponse proto.InternalMessageInfo

func (m *ListIDsResponse) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ListIDsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetIDPositionRequest struct {
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An S2 leaf cell ID.
	Position             uint64   `protobuf:"fixed64,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIDPositionRequest) Reset()         { *m = SetIDPositionRequest{} }
func (m *SetIDPositionRequest) String() string { return proto.CompactTextString(m) }
func (*SetIDPositionRequest) ProtoMessage()    {}
func (*SetIDPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{2}
}

func (m *SetIDPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIDPositionRequest.Unmarshal(m, b)
}
func (m *SetIDPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIDPositionRequest.Marshal(b, m, deterministic)
}
func (m *SetIDPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIDPositionRequest.Merge(m, src)
}
func (m *SetIDPositionRequest) XXX_Size() int {
	return xxx_messageInfo_SetIDPositionRequest.Size(m)
}
func (m *SetIDPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIDPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetIDPositionRequest proto.InternalMessageInfo

func (m *SetIDPositionRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SetIDPositionRequest) GetPosition() uint64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type SetIDPositionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIDPositionResponse) Reset()         { *m = SetIDPositionResponse{} }
func (m *SetIDPositionResponse) String() string { return proto.CompactTextString(m) }
func (*SetIDPositionResponse) ProtoMessage()    {}
func (*SetIDPositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{3}
}

func (m *SetIDPositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIDPositionResponse.Unmarshal(m, b)
}
func (m *SetIDPositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIDPositionResponse.Marshal(b, m, deterministic)
}
func (m *SetIDPositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIDPositionResponse.Merge(m, src)
}
func (m *SetIDPositionResponse) XXX_Size() int {
	return xxx_messageInfo_SetIDPositionResponse.Size(m)
}
func (m *SetIDPositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIDPositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetIDPositionResponse proto.InternalMessageInfo

type DeleteIDRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIDRequest) Reset()         { *m = DeleteIDRequest{} }
func (m *DeleteIDRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIDRequest) ProtoMessage()    {}
func (*DeleteIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{4}
}

func (m *DeleteIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIDRequest.Unmarshal(m, b)
}
func (m *DeleteIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIDRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIDRequest.Merge(m, src)
}
func (m *DeleteIDRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIDRequest.Size(m)
}
func (m *DeleteIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIDRequest proto.InternalMessageInfo

func (m *DeleteIDRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type DeleteIDResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIDResponse) Reset()         { *m = DeleteIDResponse{} }
func (m *DeleteIDResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIDResponse) ProtoMessage()    {}
func (*DeleteIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{5}
}

func (m *DeleteIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIDResponse.Unmarshal(m, b)
}
func (m *DeleteIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIDResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIDResponse.Merge(m, src)
}
func (m *DeleteIDResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIDResponse.Size(m)
}
func (m *DeleteIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIDResponse proto.InternalMessageInfo

type GetIDKeyValuesRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIDKeyValuesRequest) Reset()         { *m = GetIDKeyValuesRequest{} }
func (m *GetIDKeyValuesRequest) String() string { return proto.CompactTextString(m) }
func (*GetIDKeyValuesRequest) ProtoMessage()    {}
func (*GetIDKeyValuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{6}
}

func (m *GetIDKeyValuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIDKeyValuesRequest.Unmarshal(m, b)
}
func (m *GetIDKeyValuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIDKeyValuesRequest.Marshal(b, m, deterministic)
}
func (m *GetIDKeyValuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIDKeyValuesRequest.Merge(m, src)
}
func (m *GetIDKeyValuesRequest) XXX_Size() int {
	return xxx_messageInfo_GetIDKeyValuesRequest.Size(m)
}
func (m *GetIDKeyValuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIDKeyValuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIDKeyValuesRequest proto.InternalMessageInfo

func (m *GetIDKeyValuesRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetIDKeyValuesRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetIDKeyValuesResponse struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIDKeyValuesResponse) Reset()         { *m = GetIDKeyValuesResponse{} }
func (m *GetIDKeyValuesResponse) String() string { return proto.CompactTextString(m) }
func (*GetIDKeyValuesResponse) ProtoMessage()    {}
func (*GetIDKeyValuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{7}
}

func (m *GetIDKeyValuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIDKeyValuesResponse.Unmarshal(m, b)
}
func (m *GetIDKeyValuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIDKeyValuesResponse.Marshal(b, m, deterministic)
}
func (m *GetIDKeyValuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIDKeyValuesResponse.Merge(m, src)
}
func (m *GetIDKeyValuesResponse) XXX_Size() int {
	return xxx_messageInfo_GetIDKeyValuesResponse.Size(m)
}
func (m *GetIDKeyValuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIDKeyValuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIDKeyValuesResponse proto.InternalMessageInfo

func (m *GetIDKeyValuesResponse) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SetIDKeyValueRequest struct {
	Id     []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key    string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	// Remove all other values for the given ID and key.
	Clear                bool     `protobuf:"varint,4,opt,name=clear,proto3" json:"clear,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIDKeyValueRequest) Reset()         { *m = SetIDKeyValueRequest{} }
func (m *SetIDKeyValueRequest) String() string { return proto.CompactTextString(m) }
func (*SetIDKeyValueRequest) ProtoMessage()    {}
func (*SetIDKeyValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{8}
}

func (m *SetIDKeyValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIDKeyValueRequest.Unmarshal(m, b)
}
func (m *SetIDKeyValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIDKeyValueRequest.Marshal(b, m, deterministic)
}
func (m *SetIDKeyValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIDKeyValueRequest.Merge(m, src)
}
func (m *SetIDKeyValueRequest) XXX_Size() int {
	return xxx_messageInfo_SetIDKeyValueRequest.Size(m)
}
func (m *SetIDKeyValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIDKeyValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetIDKeyValueRequest proto.InternalMessageInfo

func (m *SetIDKeyValueRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SetIDKeyValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetIDKeyValueRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SetIDKeyValueRequest) GetClear() bool {
	if m != nil {
		return m.Clear
	}
	return false
}

type SetIDKeyValueResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIDKeyValueResponse) Reset()         { *m = SetIDKeyValueResponse{} }
func (m *SetIDKeyValueResponse) String() string { return proto.CompactTextString(m) }
func (*SetIDKeyValueResponse) ProtoMessage()    {}
func (*SetIDKeyValueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{9}
}

func (m *SetIDKeyValueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIDKeyValueResponse.Unmarshal(m, b)
}
func (m *SetIDKeyValueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIDKeyValueResponse.Marshal(b, m, deterministic)
}
func (m *SetIDKeyValueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIDKeyValueResponse.Merge(m, src)
}
func (m *SetIDKeyValueResponse) XXX_Size() int {
	return xxx_messageInfo_SetIDKeyValueResponse.Size(m)
}
func (m *SetIDKeyValueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIDKeyValueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetIDKeyValueResponse proto.InternalMessageInfo

type KeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{10}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SearchIDsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The key/value pairs to search by.
	KeyValuePairs []*KeyValuePair `protobuf:"bytes,3,rep,name=key_value_pairs,json=keyValuePairs,proto3" json:"key_value_pairs,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,4,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIDsRequest) Reset()         { *m = SearchIDsRequest{} }
func (m *SearchIDsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchIDsRequest) ProtoMessage()    {}
func (*SearchIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{11}
}

func (m *SearchIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIDsRequest.Unmarshal(m, b)
}
func (m *SearchIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIDsRequest.Marshal(b, m, deterministic)
}
func (m *SearchIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIDsRequest.Merge(m, src)
}
func (m *SearchIDsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchIDsRequest.Size(m)
}
func (m *SearchIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIDsRequest proto.InternalMessageInfo

func (m *SearchIDsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchIDsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchIDsRequest) GetKeyValuePairs() []*KeyValuePair {
	if m != nil {
		return m.KeyValuePairs
	}
	return nil
}

func (m *SearchIDsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type SearchIDsResponse struct {
	Ids [][]byte `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIDsResponse) Reset()         { *m = SearchIDsResponse{} }
func (m *SearchIDsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIDsResponse) ProtoMessage()    {}
func (*SearchIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{12}
}

func (m *SearchIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIDsResponse.Unmarshal(m, b)
}
func (m *SearchIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIDsResponse.Marshal(b, m, deterministic)
}
func (m *SearchIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIDsResponse.Merge(m, src)
}
func (m *SearchIDsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchIDsResponse.Size(m)
}
func (m *SearchIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIDsResponse proto.InternalMessageInfo

func (m *SearchIDsResponse) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SearchIDsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CountIDsRequest struct {
	// The key to count value IDs for.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Key values to count IDs for. If none are specified, all values for the
	// given key will be counted.
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,3,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountIDsRequest) Reset()         { *m = CountIDsRequest{} }
func (m *CountIDsRequest) String() string { return proto.CompactTextString(m) }
func (*CountIDsRequest) ProtoMessage()    {}
func (*CountIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{13}
}

func (m *CountIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountIDsRequest.Unmarshal(m, b)
}
func (m *CountIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountIDsRequest.Marshal(b, m, deterministic)
}
func (m *CountIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountIDsRequest.Merge(m, src)
}
func (m *CountIDsRequest) XXX_Size() int {
	return xxx_messageInfo_CountIDsRequest.Size(m)
}
func (m *CountIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountIDsRequest proto.InternalMessageInfo

func (m *CountIDsRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CountIDsRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *CountIDsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type CountIDsResponse struct {
	ValueCounts          map[string]int64 `protobuf:"bytes,1,rep,name=value_counts,json=valueCounts,proto3" json:"value_counts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountIDsResponse) Reset()         { *m = CountIDsResponse{} }
func (m *CountIDsResponse) String() string { return proto.CompactTextString(m) }
func (*CountIDsResponse) ProtoMessage()    {}
func (*CountIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c77b224a3441eb1, []int{14}
}

func (m *CountIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountIDsResponse.Unmarshal(m, b)
}
func (m *CountIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountIDsResponse.Marshal(b, m, deterministic)
}
func (m *CountIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountIDsResponse.Merge(m, src)
}
func (m *CountIDsResponse) XXX_Size() int {
	return xxx_messageInfo_CountIDsResponse.Size(m)
}
func (m *CountIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountIDsResponse proto.InternalMessageInfo

func (m *CountIDsResponse) GetValueCounts() map[string]int64 {
	if m != nil {
		return m.ValueCounts
	}
	return nil
}

func init() {
	proto.RegisterType((*ListIDsRequest)(nil), "topos.topiary.v1.ListIDsRequest")
	proto.RegisterType((*ListIDsResponse)(nil), "topos.topiary.v1.ListIDsResponse")
	proto.RegisterType((*SetIDPositionRequest)(nil), "topos.topiary.v1.SetIDPositionRequest")
	proto.RegisterType((*SetIDPositionResponse)(nil), "topos.topiary.v1.SetIDPositionResponse")
	proto.RegisterType((*DeleteIDRequest)(nil), "topos.topiary.v1.DeleteIDRequest")
	proto.RegisterType((*DeleteIDResponse)(nil), "topos.topiary.v1.DeleteIDResponse")
	proto.RegisterType((*GetIDKeyValuesRequest)(nil), "topos.topiary.v1.GetIDKeyValuesRequest")
	proto.RegisterType((*GetIDKeyValuesResponse)(nil), "topos.topiary.v1.GetIDKeyValuesResponse")
	proto.RegisterType((*SetIDKeyValueRequest)(nil), "topos.topiary.v1.SetIDKeyValueRequest")
	proto.RegisterType((*SetIDKeyValueResponse)(nil), "topos.topiary.v1.SetIDKeyValueResponse")
	proto.RegisterType((*KeyValuePair)(nil), "topos.topiary.v1.KeyValuePair")
	proto.RegisterType((*SearchIDsRequest)(nil), "topos.topiary.v1.SearchIDsRequest")
	proto.RegisterType((*SearchIDsResponse)(nil), "topos.topiary.v1.SearchIDsResponse")
	proto.RegisterType((*CountIDsRequest)(nil), "topos.topiary.v1.CountIDsRequest")
	proto.RegisterType((*CountIDsResponse)(nil), "topos.topiary.v1.CountIDsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.topiary.v1.CountIDsResponse.ValueCountsEntry")
}

func init() { proto.RegisterFile("topos/topiary/v1/topiary.proto", fileDescriptor_0c77b224a3441eb1) }

var fileDescriptor_0c77b224a3441eb1 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xda, 0x30,
	0x14, 0x5e, 0xc8, 0x68, 0xe1, 0x34, 0x40, 0x66, 0xd1, 0x0e, 0x65, 0x5a, 0x45, 0x53, 0xa9, 0xcb,
	0x15, 0x5d, 0xa9, 0x34, 0xed, 0x47, 0xda, 0x45, 0xcb, 0x36, 0xa1, 0x76, 0x12, 0x0a, 0x15, 0x17,
	0xbb, 0xa1, 0x19, 0x78, 0x6d, 0x04, 0x8a, 0xb3, 0x38, 0xa0, 0xa5, 0x0f, 0xb0, 0x87, 0xd9, 0x2b,
	0xec, 0xe5, 0xa6, 0x38, 0xce, 0x0f, 0x4e, 0x80, 0x49, 0xdb, 0x9d, 0x7d, 0x7c, 0xce, 0x77, 0x3e,
	0x7f, 0x39, 0xfe, 0x02, 0x87, 0x3e, 0x71, 0x09, 0x3d, 0xf5, 0x89, 0x6b, 0x5b, 0x5e, 0x70, 0xba,
	0x3c, 0x8b, 0x97, 0x1d, 0xd7, 0x23, 0x3e, 0x41, 0x2a, 0x3b, 0xef, 0xc4, 0xc1, 0xe5, 0x99, 0x7e,
	0x0d, 0xf5, 0x6b, 0x9b, 0xfa, 0xfd, 0x1e, 0x35, 0xf1, 0xf7, 0x05, 0xa6, 0x3e, 0x7a, 0x06, 0x55,
	0xd7, 0xba, 0xc3, 0x63, 0x6a, 0x3f, 0xe0, 0x96, 0xd4, 0x96, 0x8c, 0xb2, 0x59, 0x09, 0x03, 0x43,
	0xfb, 0x01, 0xa3, 0xe7, 0x00, 0xec, 0xd0, 0x27, 0x33, 0xec, 0xb4, 0x4a, 0x6d, 0xc9, 0xa8, 0x9a,
	0x2c, 0xfd, 0x26, 0x0c, 0xe8, 0x57, 0xd0, 0x48, 0xd0, 0xa8, 0x4b, 0x1c, 0x8a, 0x91, 0x0a, 0xb2,
	0x3d, 0xa5, 0x2d, 0xa9, 0x2d, 0x1b, 0x8a, 0x19, 0x2e, 0xd1, 0x09, 0x34, 0x1c, 0xfc, 0xc3, 0x1f,
	0xe7, 0x80, 0x6a, 0x61, 0x78, 0x90, 0x80, 0x5d, 0x40, 0x73, 0x88, 0xfd, 0x7e, 0x6f, 0x40, 0xa8,
	0xed, 0xdb, 0xc4, 0x89, 0x09, 0xd6, 0xa1, 0x64, 0x4f, 0x19, 0x33, 0xc5, 0x2c, 0xd9, 0x53, 0xa4,
	0x41, 0xc5, 0xe5, 0x29, 0x0c, 0x68, 0xc7, 0x4c, 0xf6, 0xfa, 0x53, 0xd8, 0x17, 0x30, 0x22, 0x5a,
	0xfa, 0x11, 0x34, 0x7a, 0x78, 0x8e, 0x7d, 0xdc, 0xef, 0xad, 0xc1, 0xd5, 0x11, 0xa8, 0x69, 0x0a,
	0x2f, 0x7b, 0x03, 0xfb, 0x9f, 0x42, 0xbc, 0x2b, 0x1c, 0x8c, 0xac, 0xf9, 0x02, 0xd3, 0x75, 0xa4,
	0x54, 0x90, 0x67, 0x38, 0xe0, 0x17, 0x0b, 0x97, 0xfa, 0x4b, 0x38, 0x10, 0x4b, 0xb9, 0x44, 0x07,
	0xb0, 0xb3, 0x64, 0x11, 0xa6, 0x52, 0xd5, 0xe4, 0x3b, 0xfd, 0x1b, 0x17, 0x20, 0xae, 0xf8, 0xeb,
	0x5e, 0x19, 0x44, 0x39, 0x8b, 0x88, 0x9a, 0x50, 0x9e, 0xcc, 0xb1, 0xe5, 0xb5, 0x1e, 0xb7, 0x25,
	0xa3, 0x62, 0x46, 0x9b, 0x44, 0xa4, 0xb4, 0x0f, 0xbf, 0xed, 0x2b, 0x50, 0xe2, 0xd8, 0xc0, 0xb2,
	0xbd, 0xb8, 0x91, 0x94, 0x36, 0x6a, 0x42, 0x99, 0x41, 0xf3, 0xe6, 0xd1, 0x46, 0xff, 0x2d, 0x81,
	0x3a, 0xc4, 0x96, 0x37, 0xb9, 0xff, 0x3f, 0x73, 0x85, 0x3e, 0x42, 0x63, 0x86, 0x83, 0x31, 0x43,
	0x1f, 0xbb, 0x96, 0xed, 0x45, 0x17, 0xdb, 0xeb, 0x1e, 0x76, 0xc4, 0x89, 0xee, 0x64, 0x19, 0x9b,
	0xb5, 0x59, 0x66, 0x47, 0xd1, 0x31, 0xd4, 0x5c, 0x32, 0x0f, 0xee, 0x88, 0x33, 0x9e, 0xdc, 0x2f,
	0x9c, 0x19, 0xd3, 0x41, 0x31, 0x15, 0x1e, 0xbc, 0x0c, 0x63, 0xfa, 0x67, 0x78, 0x92, 0x21, 0xff,
	0xcf, 0x63, 0x7c, 0x0b, 0x8d, 0x4b, 0xb2, 0x70, 0xb2, 0x4f, 0x2c, 0xaf, 0x63, 0xfa, 0xc1, 0x4a,
	0x2b, 0x1f, 0x2c, 0x47, 0x58, 0x2e, 0x20, 0xfc, 0x4b, 0x02, 0x35, 0x6d, 0xc1, 0x09, 0x8f, 0x40,
	0x89, 0xe4, 0x9a, 0x84, 0x27, 0x11, 0xf3, 0xbd, 0xee, 0x79, 0x5e, 0x2f, 0xb1, 0xb2, 0xc3, 0xf4,
	0x62, 0x51, 0xfa, 0xc1, 0xf1, 0xbd, 0xc0, 0xdc, 0x5b, 0xa6, 0x11, 0xed, 0x3d, 0xa8, 0x62, 0xc2,
	0xb6, 0xb9, 0x90, 0xf9, 0x5c, 0xbc, 0x2d, 0xbd, 0x96, 0xba, 0x3f, 0xcb, 0xb0, 0x7b, 0x13, 0x75,
	0x47, 0x03, 0xd8, 0xe5, 0x76, 0x81, 0xda, 0x79, 0x62, 0xab, 0xbe, 0xa4, 0x1d, 0x6d, 0xc8, 0xe0,
	0xf3, 0xfa, 0x08, 0xdd, 0x42, 0x6d, 0xe5, 0xbd, 0xa3, 0x93, 0x7c, 0x55, 0x91, 0xa9, 0x68, 0x2f,
	0xb6, 0xe6, 0x71, 0x5d, 0x87, 0x50, 0x89, 0x5d, 0x01, 0x15, 0x50, 0x12, 0x4c, 0x45, 0xd3, 0x37,
	0xa5, 0x24, 0xb4, 0x27, 0x50, 0x5f, 0xf5, 0x06, 0x54, 0xc0, 0xa7, 0xd0, 0x78, 0x34, 0x63, 0x7b,
	0x22, 0x67, 0x1e, 0x6b, 0x13, 0x9f, 0xac, 0xd5, 0x46, 0xf0, 0x9b, 0xb5, 0xda, 0x88, 0x7e, 0x81,
	0x46, 0x50, 0x4d, 0x5e, 0x0e, 0xd2, 0x8b, 0xaa, 0x56, 0x3d, 0x41, 0x3b, 0xde, 0x98, 0x13, 0xa1,
	0x1a, 0x52, 0xa8, 0x79, 0x3c, 0xa5, 0x45, 0x9a, 0x0b, 0xcf, 0xab, 0x48, 0x73, 0x71, 0xc8, 0x0d,
	0xe9, 0x42, 0xfb, 0xd2, 0x12, 0xff, 0x96, 0xef, 0xf8, 0xf2, 0xeb, 0x0e, 0xfb, 0x5d, 0x9e, 0xff,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x19, 0x85, 0x7c, 0x50, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TopiaryClient is the client API for Topiary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopiaryClient interface {
	// Lists IDs.
	ListIDs(ctx context.Context, in *ListIDsRequest, opts ...grpc.CallOption) (*ListIDsResponse, error)
	// Set a position key balue.
	SetIDPosition(ctx context.Context, in *SetIDPositionRequest, opts ...grpc.CallOption) (*SetIDPositionResponse, error)
	// Delete an ID.
	DeleteID(ctx context.Context, in *DeleteIDRequest, opts ...grpc.CallOption) (*DeleteIDResponse, error)
	// Set a position.
	GetIDKeyValues(ctx context.Context, in *GetIDKeyValuesRequest, opts ...grpc.CallOption) (*GetIDKeyValuesResponse, error)
	// Set a position.
	SetIDKeyValue(ctx context.Context, in *SetIDKeyValueRequest, opts ...grpc.CallOption) (*SetIDKeyValueResponse, error)
	// Searches IDs.
	SearchIDs(ctx context.Context, opts ...grpc.CallOption) (Topiary_SearchIDsClient, error)
	// Counts IDs.
	CountIDs(ctx context.Context, opts ...grpc.CallOption) (Topiary_CountIDsClient, error)
}

type topiaryClient struct {
	cc *grpc.ClientConn
}

func NewTopiaryClient(cc *grpc.ClientConn) TopiaryClient {
	return &topiaryClient{cc}
}

func (c *topiaryClient) ListIDs(ctx context.Context, in *ListIDsRequest, opts ...grpc.CallOption) (*ListIDsResponse, error) {
	out := new(ListIDsResponse)
	err := c.cc.Invoke(ctx, "/topos.topiary.v1.Topiary/ListIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topiaryClient) SetIDPosition(ctx context.Context, in *SetIDPositionRequest, opts ...grpc.CallOption) (*SetIDPositionResponse, error) {
	out := new(SetIDPositionResponse)
	err := c.cc.Invoke(ctx, "/topos.topiary.v1.Topiary/SetIDPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topiaryClient) DeleteID(ctx context.Context, in *DeleteIDRequest, opts ...grpc.CallOption) (*DeleteIDResponse, error) {
	out := new(DeleteIDResponse)
	err := c.cc.Invoke(ctx, "/topos.topiary.v1.Topiary/DeleteID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topiaryClient) GetIDKeyValues(ctx context.Context, in *GetIDKeyValuesRequest, opts ...grpc.CallOption) (*GetIDKeyValuesResponse, error) {
	out := new(GetIDKeyValuesResponse)
	err := c.cc.Invoke(ctx, "/topos.topiary.v1.Topiary/GetIDKeyValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topiaryClient) SetIDKeyValue(ctx context.Context, in *SetIDKeyValueRequest, opts ...grpc.CallOption) (*SetIDKeyValueResponse, error) {
	out := new(SetIDKeyValueResponse)
	err := c.cc.Invoke(ctx, "/topos.topiary.v1.Topiary/SetIDKeyValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topiaryClient) SearchIDs(ctx context.Context, opts ...grpc.CallOption) (Topiary_SearchIDsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Topiary_serviceDesc.Streams[0], "/topos.topiary.v1.Topiary/SearchIDs", opts...)
	if err != nil {
		return nil, err
	}
	x := &topiarySearchIDsClient{stream}
	return x, nil
}

type Topiary_SearchIDsClient interface {
	Send(*SearchIDsRequest) error
	CloseAndRecv() (*SearchIDsResponse, error)
	grpc.ClientStream
}

type topiarySearchIDsClient struct {
	grpc.ClientStream
}

func (x *topiarySearchIDsClient) Send(m *SearchIDsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *topiarySearchIDsClient) CloseAndRecv() (*SearchIDsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SearchIDsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *topiaryClient) CountIDs(ctx context.Context, opts ...grpc.CallOption) (Topiary_CountIDsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Topiary_serviceDesc.Streams[1], "/topos.topiary.v1.Topiary/CountIDs", opts...)
	if err != nil {
		return nil, err
	}
	x := &topiaryCountIDsClient{stream}
	return x, nil
}

type Topiary_CountIDsClient interface {
	Send(*CountIDsRequest) error
	CloseAndRecv() (*CountIDsResponse, error)
	grpc.ClientStream
}

type topiaryCountIDsClient struct {
	grpc.ClientStream
}

func (x *topiaryCountIDsClient) Send(m *CountIDsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *topiaryCountIDsClient) CloseAndRecv() (*CountIDsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CountIDsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TopiaryServer is the server API for Topiary service.
type TopiaryServer interface {
	// Lists IDs.
	ListIDs(context.Context, *ListIDsRequest) (*ListIDsResponse, error)
	// Set a position key balue.
	SetIDPosition(context.Context, *SetIDPositionRequest) (*SetIDPositionResponse, error)
	// Delete an ID.
	DeleteID(context.Context, *DeleteIDRequest) (*DeleteIDResponse, error)
	// Set a position.
	GetIDKeyValues(context.Context, *GetIDKeyValuesRequest) (*GetIDKeyValuesResponse, error)
	// Set a position.
	SetIDKeyValue(context.Context, *SetIDKeyValueRequest) (*SetIDKeyValueResponse, error)
	// Searches IDs.
	SearchIDs(Topiary_SearchIDsServer) error
	// Counts IDs.
	CountIDs(Topiary_CountIDsServer) error
}

// UnimplementedTopiaryServer can be embedded to have forward compatible implementations.
type UnimplementedTopiaryServer struct {
}

func (*UnimplementedTopiaryServer) ListIDs(ctx context.Context, req *ListIDsRequest) (*ListIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIDs not implemented")
}
func (*UnimplementedTopiaryServer) SetIDPosition(ctx context.Context, req *SetIDPositionRequest) (*SetIDPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetIDPosition not implemented")
}
func (*UnimplementedTopiaryServer) DeleteID(ctx context.Context, req *DeleteIDRequest) (*DeleteIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteID not implemented")
}
func (*UnimplementedTopiaryServer) GetIDKeyValues(ctx context.Context, req *GetIDKeyValuesRequest) (*GetIDKeyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIDKeyValues not implemented")
}
func (*UnimplementedTopiaryServer) SetIDKeyValue(ctx context.Context, req *SetIDKeyValueRequest) (*SetIDKeyValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetIDKeyValue not implemented")
}
func (*UnimplementedTopiaryServer) SearchIDs(srv Topiary_SearchIDsServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchIDs not implemented")
}
func (*UnimplementedTopiaryServer) CountIDs(srv Topiary_CountIDsServer) error {
	return status.Errorf(codes.Unimplemented, "method CountIDs not implemented")
}

func RegisterTopiaryServer(s *grpc.Server, srv TopiaryServer) {
	s.RegisterService(&_Topiary_serviceDesc, srv)
}

func _Topiary_ListIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopiaryServer).ListIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.topiary.v1.Topiary/ListIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopiaryServer).ListIDs(ctx, req.(*ListIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topiary_SetIDPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIDPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopiaryServer).SetIDPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.topiary.v1.Topiary/SetIDPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopiaryServer).SetIDPosition(ctx, req.(*SetIDPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topiary_DeleteID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopiaryServer).DeleteID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.topiary.v1.Topiary/DeleteID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopiaryServer).DeleteID(ctx, req.(*DeleteIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topiary_GetIDKeyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIDKeyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopiaryServer).GetIDKeyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.topiary.v1.Topiary/GetIDKeyValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopiaryServer).GetIDKeyValues(ctx, req.(*GetIDKeyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topiary_SetIDKeyValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIDKeyValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopiaryServer).SetIDKeyValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.topiary.v1.Topiary/SetIDKeyValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopiaryServer).SetIDKeyValue(ctx, req.(*SetIDKeyValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topiary_SearchIDs_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TopiaryServer).SearchIDs(&topiarySearchIDsServer{stream})
}

type Topiary_SearchIDsServer interface {
	SendAndClose(*SearchIDsResponse) error
	Recv() (*SearchIDsRequest, error)
	grpc.ServerStream
}

type topiarySearchIDsServer struct {
	grpc.ServerStream
}

func (x *topiarySearchIDsServer) SendAndClose(m *SearchIDsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *topiarySearchIDsServer) Recv() (*SearchIDsRequest, error) {
	m := new(SearchIDsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Topiary_CountIDs_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TopiaryServer).CountIDs(&topiaryCountIDsServer{stream})
}

type Topiary_CountIDsServer interface {
	SendAndClose(*CountIDsResponse) error
	Recv() (*CountIDsRequest, error)
	grpc.ServerStream
}

type topiaryCountIDsServer struct {
	grpc.ServerStream
}

func (x *topiaryCountIDsServer) SendAndClose(m *CountIDsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *topiaryCountIDsServer) Recv() (*CountIDsRequest, error) {
	m := new(CountIDsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Topiary_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.topiary.v1.Topiary",
	HandlerType: (*TopiaryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListIDs",
			Handler:    _Topiary_ListIDs_Handler,
		},
		{
			MethodName: "SetIDPosition",
			Handler:    _Topiary_SetIDPosition_Handler,
		},
		{
			MethodName: "DeleteID",
			Handler:    _Topiary_DeleteID_Handler,
		},
		{
			MethodName: "GetIDKeyValues",
			Handler:    _Topiary_GetIDKeyValues_Handler,
		},
		{
			MethodName: "SetIDKeyValue",
			Handler:    _Topiary_SetIDKeyValue_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchIDs",
			Handler:       _Topiary_SearchIDs_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "CountIDs",
			Handler:       _Topiary_CountIDs_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "topos/topiary/v1/topiary.proto",
}
