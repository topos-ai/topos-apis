// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/scores/v1/scores.proto

package scores

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Score struct {
	// The name of the score. It must have the format `"scores/{score}"`.
	// `{score}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex. It must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[\w-]+(/[\w-]+)*$`.
	VertexA string `protobuf:"bytes,2,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The resource name of the destination vertex. It must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[\w-]+(/[\w-]+)*$`.
	VertexB string `protobuf:"bytes,3,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	// The score value.
	Score float64 `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	// The creation timestamp of the score. Only set as a return value when
	// getting or setting an individual score.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of the score. Only set as a return value when
	// getting or setting an individual score.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Score) Reset()         { *m = Score{} }
func (m *Score) String() string { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()    {}
func (*Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{0}
}

func (m *Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Score.Unmarshal(m, b)
}
func (m *Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Score.Marshal(b, m, deterministic)
}
func (m *Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Score.Merge(m, src)
}
func (m *Score) XXX_Size() int {
	return xxx_messageInfo_Score.Size(m)
}
func (m *Score) XXX_DiscardUnknown() {
	xxx_messageInfo_Score.DiscardUnknown(m)
}

var xxx_messageInfo_Score proto.InternalMessageInfo

func (m *Score) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Score) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *Score) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

func (m *Score) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Score) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Score) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type GetScoreRequest struct {
	// The name of the score.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex.
	VertexA string `protobuf:"bytes,2,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The resource name of the destination vertex.
	VertexB              string   `protobuf:"bytes,3,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetScoreRequest) Reset()         { *m = GetScoreRequest{} }
func (m *GetScoreRequest) String() string { return proto.CompactTextString(m) }
func (*GetScoreRequest) ProtoMessage()    {}
func (*GetScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{1}
}

func (m *GetScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetScoreRequest.Unmarshal(m, b)
}
func (m *GetScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetScoreRequest.Marshal(b, m, deterministic)
}
func (m *GetScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetScoreRequest.Merge(m, src)
}
func (m *GetScoreRequest) XXX_Size() int {
	return xxx_messageInfo_GetScoreRequest.Size(m)
}
func (m *GetScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetScoreRequest proto.InternalMessageInfo

func (m *GetScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetScoreRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *GetScoreRequest) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

type SetScoreRequest struct {
	Score                *Score   `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetScoreRequest) Reset()         { *m = SetScoreRequest{} }
func (m *SetScoreRequest) String() string { return proto.CompactTextString(m) }
func (*SetScoreRequest) ProtoMessage()    {}
func (*SetScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{2}
}

func (m *SetScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetScoreRequest.Unmarshal(m, b)
}
func (m *SetScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetScoreRequest.Marshal(b, m, deterministic)
}
func (m *SetScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetScoreRequest.Merge(m, src)
}
func (m *SetScoreRequest) XXX_Size() int {
	return xxx_messageInfo_SetScoreRequest.Size(m)
}
func (m *SetScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetScoreRequest proto.InternalMessageInfo

func (m *SetScoreRequest) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

type BatchSetScoreRequest struct {
	// Scores to set.
	Scores               []*Score `protobuf:"bytes,2,rep,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSetScoreRequest) Reset()         { *m = BatchSetScoreRequest{} }
func (m *BatchSetScoreRequest) String() string { return proto.CompactTextString(m) }
func (*BatchSetScoreRequest) ProtoMessage()    {}
func (*BatchSetScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{3}
}

func (m *BatchSetScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetScoreRequest.Unmarshal(m, b)
}
func (m *BatchSetScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetScoreRequest.Marshal(b, m, deterministic)
}
func (m *BatchSetScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetScoreRequest.Merge(m, src)
}
func (m *BatchSetScoreRequest) XXX_Size() int {
	return xxx_messageInfo_BatchSetScoreRequest.Size(m)
}
func (m *BatchSetScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetScoreRequest proto.InternalMessageInfo

func (m *BatchSetScoreRequest) GetScores() []*Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

type BatchSetScoreResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSetScoreResponse) Reset()         { *m = BatchSetScoreResponse{} }
func (m *BatchSetScoreResponse) String() string { return proto.CompactTextString(m) }
func (*BatchSetScoreResponse) ProtoMessage()    {}
func (*BatchSetScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{4}
}

func (m *BatchSetScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetScoreResponse.Unmarshal(m, b)
}
func (m *BatchSetScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetScoreResponse.Marshal(b, m, deterministic)
}
func (m *BatchSetScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetScoreResponse.Merge(m, src)
}
func (m *BatchSetScoreResponse) XXX_Size() int {
	return xxx_messageInfo_BatchSetScoreResponse.Size(m)
}
func (m *BatchSetScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetScoreResponse proto.InternalMessageInfo

type DeleteScoreRequest struct {
	// The name of the score.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex.
	VertexA string `protobuf:"bytes,2,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The resource name of the destination vertex.
	VertexB              string   `protobuf:"bytes,3,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteScoreRequest) Reset()         { *m = DeleteScoreRequest{} }
func (m *DeleteScoreRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteScoreRequest) ProtoMessage()    {}
func (*DeleteScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{5}
}

func (m *DeleteScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteScoreRequest.Unmarshal(m, b)
}
func (m *DeleteScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteScoreRequest.Marshal(b, m, deterministic)
}
func (m *DeleteScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteScoreRequest.Merge(m, src)
}
func (m *DeleteScoreRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteScoreRequest.Size(m)
}
func (m *DeleteScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteScoreRequest proto.InternalMessageInfo

func (m *DeleteScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteScoreRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *DeleteScoreRequest) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

type TopScoresRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The name of the score.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex.
	VertexA              string   `protobuf:"bytes,3,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopScoresRequest) Reset()         { *m = TopScoresRequest{} }
func (m *TopScoresRequest) String() string { return proto.CompactTextString(m) }
func (*TopScoresRequest) ProtoMessage()    {}
func (*TopScoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{6}
}

func (m *TopScoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopScoresRequest.Unmarshal(m, b)
}
func (m *TopScoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopScoresRequest.Marshal(b, m, deterministic)
}
func (m *TopScoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopScoresRequest.Merge(m, src)
}
func (m *TopScoresRequest) XXX_Size() int {
	return xxx_messageInfo_TopScoresRequest.Size(m)
}
func (m *TopScoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TopScoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TopScoresRequest proto.InternalMessageInfo

func (m *TopScoresRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *TopScoresRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopScoresRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

type TopScoresResponse struct {
	// Scores in decending order by score value.
	Scores               []*Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopScoresResponse) Reset()         { *m = TopScoresResponse{} }
func (m *TopScoresResponse) String() string { return proto.CompactTextString(m) }
func (*TopScoresResponse) ProtoMessage()    {}
func (*TopScoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{7}
}

func (m *TopScoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopScoresResponse.Unmarshal(m, b)
}
func (m *TopScoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopScoresResponse.Marshal(b, m, deterministic)
}
func (m *TopScoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopScoresResponse.Merge(m, src)
}
func (m *TopScoresResponse) XXX_Size() int {
	return xxx_messageInfo_TopScoresResponse.Size(m)
}
func (m *TopScoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TopScoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TopScoresResponse proto.InternalMessageInfo

func (m *TopScoresResponse) GetScores() []*Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

func init() {
	proto.RegisterType((*Score)(nil), "topos.scores.v1.Score")
	proto.RegisterType((*GetScoreRequest)(nil), "topos.scores.v1.GetScoreRequest")
	proto.RegisterType((*SetScoreRequest)(nil), "topos.scores.v1.SetScoreRequest")
	proto.RegisterType((*BatchSetScoreRequest)(nil), "topos.scores.v1.BatchSetScoreRequest")
	proto.RegisterType((*BatchSetScoreResponse)(nil), "topos.scores.v1.BatchSetScoreResponse")
	proto.RegisterType((*DeleteScoreRequest)(nil), "topos.scores.v1.DeleteScoreRequest")
	proto.RegisterType((*TopScoresRequest)(nil), "topos.scores.v1.TopScoresRequest")
	proto.RegisterType((*TopScoresResponse)(nil), "topos.scores.v1.TopScoresResponse")
}

func init() { proto.RegisterFile("topos/scores/v1/scores.proto", fileDescriptor_05589be8939bdcb5) }

var fileDescriptor_05589be8939bdcb5 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0x56, 0xba, 0xb6, 0xbf, 0xf6, 0x54, 0x3f, 0x0a, 0xde, 0xd6, 0xa5, 0xe9, 0x60, 0x9d, 0x11,
	0x53, 0x55, 0x4d, 0xa9, 0x36, 0xee, 0x3a, 0x21, 0xb4, 0xf2, 0xef, 0x3e, 0xd9, 0x15, 0x48, 0xab,
	0xdc, 0x62, 0x4a, 0xa4, 0x25, 0x36, 0xb1, 0x5b, 0xc1, 0x10, 0x5c, 0xf0, 0x0a, 0x3c, 0x12, 0x8f,
	0xc0, 0x13, 0x20, 0xf1, 0x20, 0x28, 0xb6, 0xb3, 0xa5, 0xc9, 0xba, 0xed, 0x02, 0xee, 0xec, 0x73,
	0xbe, 0xf3, 0x7d, 0xe7, 0xd8, 0x9f, 0x0d, 0xdb, 0x92, 0x71, 0x26, 0x06, 0x62, 0xca, 0x62, 0x2a,
	0x06, 0x8b, 0x03, 0xb3, 0x72, 0x79, 0xcc, 0x24, 0x43, 0x4d, 0x95, 0x75, 0x4d, 0x6c, 0x71, 0xe0,
	0x6c, 0xcf, 0x18, 0x9b, 0x9d, 0xd1, 0x01, 0xe1, 0xc1, 0x80, 0x44, 0x11, 0x93, 0x44, 0x06, 0x2c,
	0x32, 0x70, 0xa7, 0x63, 0xb2, 0x6a, 0x37, 0x99, 0xbf, 0x1b, 0xd0, 0x90, 0xcb, 0x4f, 0x26, 0xb9,
	0x93, 0x4f, 0xca, 0x20, 0xa4, 0x42, 0x92, 0x90, 0x6b, 0x00, 0xfe, 0x65, 0x41, 0xc5, 0x4f, 0x94,
	0x10, 0x82, 0x72, 0x44, 0x42, 0x6a, 0x5b, 0x5d, 0xab, 0x57, 0xf7, 0xd4, 0x1a, 0xb5, 0xa1, 0xb6,
	0xa0, 0xb1, 0xa4, 0x1f, 0xc7, 0xc4, 0x2e, 0xa9, 0xf8, 0x7f, 0x7a, 0x7f, 0x9c, 0x49, 0x4d, 0xec,
	0xb5, 0x6c, 0x6a, 0x84, 0x36, 0xa0, 0xa2, 0x9a, 0xb7, 0xcb, 0x5d, 0xab, 0x67, 0x79, 0x7a, 0x83,
	0x8e, 0xa0, 0x31, 0x8d, 0x29, 0x91, 0x74, 0x9c, 0xf4, 0x60, 0xdf, 0xe9, 0x5a, 0xbd, 0xc6, 0xa1,
	0xe3, 0xea, 0x06, 0xdd, 0xb4, 0x41, 0xf7, 0x24, 0x6d, 0xd0, 0x03, 0x0d, 0x4f, 0x02, 0x49, 0xf1,
	0x9c, 0xbf, 0xbd, 0x28, 0x6e, 0xde, 0x5c, 0xac, 0xe1, 0x49, 0x00, 0xbf, 0x81, 0xe6, 0x2b, 0x2a,
	0xd5, 0x94, 0x1e, 0xfd, 0x30, 0xa7, 0x42, 0xfe, 0xbd, 0x61, 0xf1, 0x53, 0x68, 0xfa, 0x39, 0xf2,
	0xfd, 0x74, 0x7e, 0x4b, 0xb5, 0xd9, 0x72, 0x73, 0x17, 0xea, 0x6a, 0xb4, 0x06, 0xe1, 0x97, 0xb0,
	0x31, 0x22, 0x72, 0xfa, 0x3e, 0xcf, 0xe2, 0x42, 0x55, 0x57, 0xd8, 0xa5, 0xee, 0xda, 0x35, 0x34,
	0x06, 0x85, 0xb7, 0x60, 0x33, 0xc7, 0x23, 0x38, 0x8b, 0x04, 0xc5, 0xa7, 0x80, 0x9e, 0xd3, 0x33,
	0x2a, 0xe9, 0x3f, 0x3a, 0x81, 0x53, 0xb8, 0x7b, 0xc2, 0xb8, 0x22, 0x17, 0x29, 0x7b, 0x07, 0xea,
	0x9c, 0xcc, 0xe8, 0x58, 0x04, 0xe7, 0x5a, 0xa2, 0xe2, 0xd5, 0x92, 0x80, 0x1f, 0x9c, 0x5f, 0x3a,
	0xad, 0xb4, 0x42, 0x7a, 0x89, 0xff, 0x18, 0x3f, 0x83, 0x7b, 0x19, 0x7e, 0x3d, 0x54, 0xe6, 0x74,
	0xac, 0xdb, 0x9c, 0xce, 0xe1, 0x8f, 0x32, 0x54, 0x35, 0x05, 0x22, 0x50, 0x4b, 0xed, 0x80, 0xba,
	0x85, 0xb2, 0x9c, 0x53, 0x9c, 0x15, 0xc4, 0xb8, 0xf3, 0xed, 0xe7, 0xef, 0xef, 0xa5, 0x4d, 0xb4,
	0x9e, 0xbc, 0xdf, 0xcf, 0xc9, 0x0c, 0x4f, 0xcc, 0x7b, 0xee, 0x7f, 0x41, 0x31, 0xd4, 0xfc, 0xd5,
	0x12, 0xfe, 0x2d, 0x25, 0xf6, 0x95, 0xc4, 0x1e, 0xbe, 0xaf, 0x24, 0x54, 0xd6, 0x5d, 0x16, 0x1a,
	0x0a, 0x2a, 0x87, 0xe6, 0x7d, 0x7d, 0x85, 0xff, 0x97, 0xee, 0x1f, 0x3d, 0x2a, 0xd0, 0x5e, 0xe5,
	0x33, 0x67, 0xef, 0x26, 0x98, 0xb1, 0xd1, 0x03, 0xd5, 0x8d, 0x8d, 0xd7, 0x2f, 0x3f, 0xac, 0xe1,
	0xc4, 0x20, 0x87, 0x56, 0x1f, 0x85, 0xd0, 0xc8, 0xd8, 0x0c, 0x3d, 0x2c, 0xd0, 0x16, 0x4d, 0xe8,
	0xb4, 0x0a, 0x2f, 0xf8, 0x45, 0xf2, 0x79, 0xe1, 0x5d, 0xa5, 0xd5, 0xe9, 0xb7, 0x57, 0x4e, 0x8e,
	0x04, 0xd4, 0x2f, 0x5c, 0x81, 0x76, 0x0b, 0x62, 0x79, 0x47, 0x3a, 0xf8, 0x3a, 0x88, 0x19, 0x71,
	0x47, 0xc9, 0xb6, 0xd1, 0xd6, 0x15, 0x77, 0x3a, 0x94, 0x8c, 0x8f, 0xec, 0xd7, 0xad, 0xdc, 0xd7,
	0x7d, 0xa4, 0x57, 0x93, 0xaa, 0x9a, 0xe0, 0xf1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0xe0,
	0xa9, 0xb1, 0xdb, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScoresClient is the client API for Scores service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScoresClient interface {
	// Gets a score.
	GetScore(ctx context.Context, in *GetScoreRequest, opts ...grpc.CallOption) (*Score, error)
	// Sets a score.
	SetScore(ctx context.Context, in *SetScoreRequest, opts ...grpc.CallOption) (*Score, error)
	// Sets a batch of scores.
	BatchSetScore(ctx context.Context, in *BatchSetScoreRequest, opts ...grpc.CallOption) (*BatchSetScoreResponse, error)
	// Deletes a score.
	DeleteScore(ctx context.Context, in *DeleteScoreRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets scores in descending order by score value.
	TopScores(ctx context.Context, in *TopScoresRequest, opts ...grpc.CallOption) (*TopScoresResponse, error)
}

type scoresClient struct {
	cc *grpc.ClientConn
}

func NewScoresClient(cc *grpc.ClientConn) ScoresClient {
	return &scoresClient{cc}
}

func (c *scoresClient) GetScore(ctx context.Context, in *GetScoreRequest, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/GetScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) SetScore(ctx context.Context, in *SetScoreRequest, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/SetScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) BatchSetScore(ctx context.Context, in *BatchSetScoreRequest, opts ...grpc.CallOption) (*BatchSetScoreResponse, error) {
	out := new(BatchSetScoreResponse)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/BatchSetScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) DeleteScore(ctx context.Context, in *DeleteScoreRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/DeleteScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) TopScores(ctx context.Context, in *TopScoresRequest, opts ...grpc.CallOption) (*TopScoresResponse, error) {
	out := new(TopScoresResponse)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/TopScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScoresServer is the server API for Scores service.
type ScoresServer interface {
	// Gets a score.
	GetScore(context.Context, *GetScoreRequest) (*Score, error)
	// Sets a score.
	SetScore(context.Context, *SetScoreRequest) (*Score, error)
	// Sets a batch of scores.
	BatchSetScore(context.Context, *BatchSetScoreRequest) (*BatchSetScoreResponse, error)
	// Deletes a score.
	DeleteScore(context.Context, *DeleteScoreRequest) (*empty.Empty, error)
	// Gets scores in descending order by score value.
	TopScores(context.Context, *TopScoresRequest) (*TopScoresResponse, error)
}

func RegisterScoresServer(s *grpc.Server, srv ScoresServer) {
	s.RegisterService(&_Scores_serviceDesc, srv)
}

func _Scores_GetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).GetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/GetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).GetScore(ctx, req.(*GetScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_SetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).SetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/SetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).SetScore(ctx, req.(*SetScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_BatchSetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchSetScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).BatchSetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/BatchSetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).BatchSetScore(ctx, req.(*BatchSetScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_DeleteScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).DeleteScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/DeleteScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).DeleteScore(ctx, req.(*DeleteScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_TopScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).TopScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/TopScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).TopScores(ctx, req.(*TopScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scores_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.scores.v1.Scores",
	HandlerType: (*ScoresServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetScore",
			Handler:    _Scores_GetScore_Handler,
		},
		{
			MethodName: "SetScore",
			Handler:    _Scores_SetScore_Handler,
		},
		{
			MethodName: "BatchSetScore",
			Handler:    _Scores_BatchSetScore_Handler,
		},
		{
			MethodName: "DeleteScore",
			Handler:    _Scores_DeleteScore_Handler,
		},
		{
			MethodName: "TopScores",
			Handler:    _Scores_TopScores_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topos/scores/v1/scores.proto",
}
