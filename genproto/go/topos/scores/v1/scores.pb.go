// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/scores/v1/scores.proto

package scores

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Score struct {
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of
	// the origin vertex. It must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[\w-]+(/[\w-]+)*$`.
	VertexA string `protobuf:"bytes,1,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of
	// the destination vertex. It must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[\w-]+(/[\w-]+)*$`.
	VertexB string `protobuf:"bytes,2,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	// The score value.
	Score                float64  `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Score) Reset()         { *m = Score{} }
func (m *Score) String() string { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()    {}
func (*Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{0}
}

func (m *Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Score.Unmarshal(m, b)
}
func (m *Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Score.Marshal(b, m, deterministic)
}
func (m *Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Score.Merge(m, src)
}
func (m *Score) XXX_Size() int {
	return xxx_messageInfo_Score.Size(m)
}
func (m *Score) XXX_DiscardUnknown() {
	xxx_messageInfo_Score.DiscardUnknown(m)
}

var xxx_messageInfo_Score proto.InternalMessageInfo

func (m *Score) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *Score) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

func (m *Score) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ListGraphScoresRequest struct {
	// The name of the graph.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGraphScoresRequest) Reset()         { *m = ListGraphScoresRequest{} }
func (m *ListGraphScoresRequest) String() string { return proto.CompactTextString(m) }
func (*ListGraphScoresRequest) ProtoMessage()    {}
func (*ListGraphScoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{1}
}

func (m *ListGraphScoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGraphScoresRequest.Unmarshal(m, b)
}
func (m *ListGraphScoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGraphScoresRequest.Marshal(b, m, deterministic)
}
func (m *ListGraphScoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGraphScoresRequest.Merge(m, src)
}
func (m *ListGraphScoresRequest) XXX_Size() int {
	return xxx_messageInfo_ListGraphScoresRequest.Size(m)
}
func (m *ListGraphScoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGraphScoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGraphScoresRequest proto.InternalMessageInfo

func (m *ListGraphScoresRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListGraphScoresRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListGraphScoresRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListGraphScoresResponse struct {
	// The name of the score.
	Scores []*Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGraphScoresResponse) Reset()         { *m = ListGraphScoresResponse{} }
func (m *ListGraphScoresResponse) String() string { return proto.CompactTextString(m) }
func (*ListGraphScoresResponse) ProtoMessage()    {}
func (*ListGraphScoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{2}
}

func (m *ListGraphScoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGraphScoresResponse.Unmarshal(m, b)
}
func (m *ListGraphScoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGraphScoresResponse.Marshal(b, m, deterministic)
}
func (m *ListGraphScoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGraphScoresResponse.Merge(m, src)
}
func (m *ListGraphScoresResponse) XXX_Size() int {
	return xxx_messageInfo_ListGraphScoresResponse.Size(m)
}
func (m *ListGraphScoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGraphScoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGraphScoresResponse proto.InternalMessageInfo

func (m *ListGraphScoresResponse) GetScores() []*Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *ListGraphScoresResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetGraphScoreRequest struct {
	// The name of the graph.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex.
	VertexA string `protobuf:"bytes,2,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The resource name of the destination vertex.
	VertexB              string   `protobuf:"bytes,3,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGraphScoreRequest) Reset()         { *m = GetGraphScoreRequest{} }
func (m *GetGraphScoreRequest) String() string { return proto.CompactTextString(m) }
func (*GetGraphScoreRequest) ProtoMessage()    {}
func (*GetGraphScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{3}
}

func (m *GetGraphScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGraphScoreRequest.Unmarshal(m, b)
}
func (m *GetGraphScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGraphScoreRequest.Marshal(b, m, deterministic)
}
func (m *GetGraphScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGraphScoreRequest.Merge(m, src)
}
func (m *GetGraphScoreRequest) XXX_Size() int {
	return xxx_messageInfo_GetGraphScoreRequest.Size(m)
}
func (m *GetGraphScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGraphScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGraphScoreRequest proto.InternalMessageInfo

func (m *GetGraphScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetGraphScoreRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *GetGraphScoreRequest) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

type SetGraphScoreRequest struct {
	// The name of the graph. It must have the format `"graphs/{graph}"`.
	// `{graphs}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The score to set
	Score                *Score   `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGraphScoreRequest) Reset()         { *m = SetGraphScoreRequest{} }
func (m *SetGraphScoreRequest) String() string { return proto.CompactTextString(m) }
func (*SetGraphScoreRequest) ProtoMessage()    {}
func (*SetGraphScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{4}
}

func (m *SetGraphScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGraphScoreRequest.Unmarshal(m, b)
}
func (m *SetGraphScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGraphScoreRequest.Marshal(b, m, deterministic)
}
func (m *SetGraphScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGraphScoreRequest.Merge(m, src)
}
func (m *SetGraphScoreRequest) XXX_Size() int {
	return xxx_messageInfo_SetGraphScoreRequest.Size(m)
}
func (m *SetGraphScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGraphScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGraphScoreRequest proto.InternalMessageInfo

func (m *SetGraphScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetGraphScoreRequest) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

type BatchSetGraphScoreRequest struct {
	// The name of the graph. It must have the format `"graphs/{graph}"`.
	// `{graphs}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The scores to set.
	Score                []*Score `protobuf:"bytes,2,rep,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSetGraphScoreRequest) Reset()         { *m = BatchSetGraphScoreRequest{} }
func (m *BatchSetGraphScoreRequest) String() string { return proto.CompactTextString(m) }
func (*BatchSetGraphScoreRequest) ProtoMessage()    {}
func (*BatchSetGraphScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{5}
}

func (m *BatchSetGraphScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetGraphScoreRequest.Unmarshal(m, b)
}
func (m *BatchSetGraphScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetGraphScoreRequest.Marshal(b, m, deterministic)
}
func (m *BatchSetGraphScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetGraphScoreRequest.Merge(m, src)
}
func (m *BatchSetGraphScoreRequest) XXX_Size() int {
	return xxx_messageInfo_BatchSetGraphScoreRequest.Size(m)
}
func (m *BatchSetGraphScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetGraphScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetGraphScoreRequest proto.InternalMessageInfo

func (m *BatchSetGraphScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BatchSetGraphScoreRequest) GetScore() []*Score {
	if m != nil {
		return m.Score
	}
	return nil
}

type BatchSetGraphScoreResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSetGraphScoreResponse) Reset()         { *m = BatchSetGraphScoreResponse{} }
func (m *BatchSetGraphScoreResponse) String() string { return proto.CompactTextString(m) }
func (*BatchSetGraphScoreResponse) ProtoMessage()    {}
func (*BatchSetGraphScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{6}
}

func (m *BatchSetGraphScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetGraphScoreResponse.Unmarshal(m, b)
}
func (m *BatchSetGraphScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetGraphScoreResponse.Marshal(b, m, deterministic)
}
func (m *BatchSetGraphScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetGraphScoreResponse.Merge(m, src)
}
func (m *BatchSetGraphScoreResponse) XXX_Size() int {
	return xxx_messageInfo_BatchSetGraphScoreResponse.Size(m)
}
func (m *BatchSetGraphScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetGraphScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetGraphScoreResponse proto.InternalMessageInfo

type DeleteGraphRequest struct {
	// The name of the graph.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGraphRequest) Reset()         { *m = DeleteGraphRequest{} }
func (m *DeleteGraphRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGraphRequest) ProtoMessage()    {}
func (*DeleteGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{7}
}

func (m *DeleteGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGraphRequest.Unmarshal(m, b)
}
func (m *DeleteGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGraphRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGraphRequest.Merge(m, src)
}
func (m *DeleteGraphRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGraphRequest.Size(m)
}
func (m *DeleteGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGraphRequest proto.InternalMessageInfo

func (m *DeleteGraphRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteGraphScoreRequest struct {
	// The name of the graph.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the origin vertex.
	VertexA string `protobuf:"bytes,2,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	// The resource name of the destination vertex.
	VertexB              string   `protobuf:"bytes,3,opt,name=vertex_b,json=vertexB,proto3" json:"vertex_b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGraphScoreRequest) Reset()         { *m = DeleteGraphScoreRequest{} }
func (m *DeleteGraphScoreRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGraphScoreRequest) ProtoMessage()    {}
func (*DeleteGraphScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{8}
}

func (m *DeleteGraphScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGraphScoreRequest.Unmarshal(m, b)
}
func (m *DeleteGraphScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGraphScoreRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGraphScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGraphScoreRequest.Merge(m, src)
}
func (m *DeleteGraphScoreRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGraphScoreRequest.Size(m)
}
func (m *DeleteGraphScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGraphScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGraphScoreRequest proto.InternalMessageInfo

func (m *DeleteGraphScoreRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteGraphScoreRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

func (m *DeleteGraphScoreRequest) GetVertexB() string {
	if m != nil {
		return m.VertexB
	}
	return ""
}

type TopGraphScoresRequest struct {
	// The name of the graph.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The resource name of the origin vertex.
	VertexA              string   `protobuf:"bytes,3,opt,name=vertex_a,json=vertexA,proto3" json:"vertex_a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopGraphScoresRequest) Reset()         { *m = TopGraphScoresRequest{} }
func (m *TopGraphScoresRequest) String() string { return proto.CompactTextString(m) }
func (*TopGraphScoresRequest) ProtoMessage()    {}
func (*TopGraphScoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{9}
}

func (m *TopGraphScoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopGraphScoresRequest.Unmarshal(m, b)
}
func (m *TopGraphScoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopGraphScoresRequest.Marshal(b, m, deterministic)
}
func (m *TopGraphScoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopGraphScoresRequest.Merge(m, src)
}
func (m *TopGraphScoresRequest) XXX_Size() int {
	return xxx_messageInfo_TopGraphScoresRequest.Size(m)
}
func (m *TopGraphScoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TopGraphScoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TopGraphScoresRequest proto.InternalMessageInfo

func (m *TopGraphScoresRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopGraphScoresRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *TopGraphScoresRequest) GetVertexA() string {
	if m != nil {
		return m.VertexA
	}
	return ""
}

type TopGraphScoresResponse struct {
	// Scores in decending order by score value.
	Scores               []*Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopGraphScoresResponse) Reset()         { *m = TopGraphScoresResponse{} }
func (m *TopGraphScoresResponse) String() string { return proto.CompactTextString(m) }
func (*TopGraphScoresResponse) ProtoMessage()    {}
func (*TopGraphScoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05589be8939bdcb5, []int{10}
}

func (m *TopGraphScoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopGraphScoresResponse.Unmarshal(m, b)
}
func (m *TopGraphScoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopGraphScoresResponse.Marshal(b, m, deterministic)
}
func (m *TopGraphScoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopGraphScoresResponse.Merge(m, src)
}
func (m *TopGraphScoresResponse) XXX_Size() int {
	return xxx_messageInfo_TopGraphScoresResponse.Size(m)
}
func (m *TopGraphScoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TopGraphScoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TopGraphScoresResponse proto.InternalMessageInfo

func (m *TopGraphScoresResponse) GetScores() []*Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

func init() {
	proto.RegisterType((*Score)(nil), "topos.scores.v1.Score")
	proto.RegisterType((*ListGraphScoresRequest)(nil), "topos.scores.v1.ListGraphScoresRequest")
	proto.RegisterType((*ListGraphScoresResponse)(nil), "topos.scores.v1.ListGraphScoresResponse")
	proto.RegisterType((*GetGraphScoreRequest)(nil), "topos.scores.v1.GetGraphScoreRequest")
	proto.RegisterType((*SetGraphScoreRequest)(nil), "topos.scores.v1.SetGraphScoreRequest")
	proto.RegisterType((*BatchSetGraphScoreRequest)(nil), "topos.scores.v1.BatchSetGraphScoreRequest")
	proto.RegisterType((*BatchSetGraphScoreResponse)(nil), "topos.scores.v1.BatchSetGraphScoreResponse")
	proto.RegisterType((*DeleteGraphRequest)(nil), "topos.scores.v1.DeleteGraphRequest")
	proto.RegisterType((*DeleteGraphScoreRequest)(nil), "topos.scores.v1.DeleteGraphScoreRequest")
	proto.RegisterType((*TopGraphScoresRequest)(nil), "topos.scores.v1.TopGraphScoresRequest")
	proto.RegisterType((*TopGraphScoresResponse)(nil), "topos.scores.v1.TopGraphScoresResponse")
}

func init() { proto.RegisterFile("topos/scores/v1/scores.proto", fileDescriptor_05589be8939bdcb5) }

var fileDescriptor_05589be8939bdcb5 = []byte{
	// 605 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x95, 0x75, 0xeb, 0x9b, 0x4a, 0xd1, 0x5b, 0xd7, 0x75, 0x69, 0x41, 0x95, 0x27,
	0xda, 0xa8, 0x40, 0xa2, 0x8d, 0x5b, 0x11, 0x87, 0x55, 0xa0, 0x71, 0xe0, 0x80, 0x92, 0x1d, 0x10,
	0x12, 0x2a, 0x69, 0x65, 0xda, 0x8a, 0x2d, 0xce, 0x6a, 0xaf, 0x2a, 0x43, 0xbb, 0x70, 0x82, 0x33,
	0x12, 0x47, 0xfe, 0x29, 0xfe, 0x05, 0xfe, 0x10, 0x14, 0xc7, 0x43, 0x69, 0x92, 0xa6, 0x65, 0x82,
	0x5b, 0xec, 0xf7, 0xfc, 0xfd, 0xf8, 0xfd, 0x8a, 0xa1, 0x2e, 0x98, 0xcf, 0xb8, 0xc5, 0x07, 0x6c,
	0x42, 0xb9, 0x35, 0x3d, 0x50, 0x5f, 0xa6, 0x3f, 0x61, 0x82, 0x61, 0x49, 0x5a, 0x4d, 0xb5, 0x37,
	0x3d, 0xd0, 0xeb, 0x43, 0xc6, 0x86, 0xa7, 0xd4, 0x72, 0xfd, 0xb1, 0xe5, 0x7a, 0x1e, 0x13, 0xae,
	0x18, 0x33, 0x4f, 0xb9, 0xeb, 0x35, 0x65, 0x95, 0xab, 0xfe, 0xc5, 0x7b, 0x8b, 0x9e, 0xf9, 0xe2,
	0x63, 0x68, 0x24, 0x0e, 0xac, 0x3b, 0x81, 0x0e, 0xee, 0xc1, 0xe6, 0x94, 0x4e, 0x04, 0x9d, 0xf5,
	0xdc, 0xaa, 0xd6, 0xd0, 0x8c, 0x82, 0xbd, 0x11, 0xae, 0x8f, 0x22, 0xa6, 0x7e, 0x75, 0x2d, 0x6a,
	0xea, 0x62, 0x19, 0xd6, 0xe5, 0x35, 0xaa, 0xb9, 0x86, 0x66, 0x68, 0x76, 0xb8, 0x20, 0x23, 0xa8,
	0xbc, 0x1c, 0x73, 0x71, 0x3c, 0x71, 0xfd, 0x91, 0x54, 0xe7, 0x36, 0x3d, 0xbf, 0xa0, 0x5c, 0x20,
	0xc2, 0x2d, 0xcf, 0x3d, 0xa3, 0x8a, 0x20, 0xbf, 0xb1, 0x06, 0x05, 0xdf, 0x1d, 0xd2, 0x1e, 0x1f,
	0x5f, 0x52, 0xa9, 0xbf, 0x6e, 0x6f, 0x06, 0x1b, 0xce, 0xf8, 0x92, 0xe2, 0x5d, 0x00, 0x69, 0x14,
	0xec, 0x03, 0xf5, 0x24, 0xa5, 0x60, 0x4b, 0xf7, 0x93, 0x60, 0x83, 0x9c, 0xc3, 0x6e, 0x82, 0xc4,
	0x7d, 0xe6, 0x71, 0x8a, 0x26, 0xe4, 0xc3, 0x0c, 0x55, 0xb5, 0x46, 0xce, 0xd8, 0x3a, 0xac, 0x98,
	0xb1, 0xb4, 0x99, 0xf2, 0x80, 0xad, 0xbc, 0xb0, 0x09, 0x25, 0x8f, 0xce, 0x44, 0x2f, 0x82, 0x0b,
	0x83, 0x2d, 0x06, 0xdb, 0xaf, 0xfe, 0x20, 0xdf, 0x41, 0xf9, 0x98, 0x46, 0x88, 0x59, 0xa1, 0x45,
	0x93, 0xba, 0xb6, 0x38, 0xa9, 0xb9, 0xb9, 0xa4, 0x92, 0xd7, 0x50, 0x76, 0x56, 0x25, 0x3c, 0xbc,
	0x2e, 0x40, 0x20, 0xbf, 0x38, 0x48, 0x55, 0x98, 0xb7, 0xb0, 0xd7, 0x75, 0xc5, 0x60, 0x74, 0x13,
	0xf9, 0xdc, 0x72, 0xf9, 0x3a, 0xe8, 0x69, 0xf2, 0x61, 0x41, 0x88, 0x01, 0xf8, 0x8c, 0x9e, 0x52,
	0x41, 0xa5, 0x2d, 0x83, 0x4a, 0x06, 0xb0, 0x1b, 0xf1, 0xfc, 0x4f, 0x59, 0x1e, 0xc0, 0xce, 0x09,
	0xf3, 0xff, 0x45, 0x8f, 0x46, 0xf9, 0x73, 0x90, 0x23, 0xf2, 0x02, 0x2a, 0x71, 0xc8, 0xcd, 0xda,
	0xf3, 0xf0, 0xfb, 0x06, 0xe4, 0x43, 0x09, 0xfc, 0xa2, 0x41, 0x29, 0xd6, 0xf5, 0xd8, 0x4a, 0x1c,
	0x4f, 0x9f, 0x40, 0xdd, 0x58, 0xee, 0xa8, 0xea, 0x45, 0x3e, 0xff, 0xfc, 0xf5, 0x6d, 0xad, 0x8e,
	0x7a, 0xf0, 0x03, 0xfa, 0x14, 0xa4, 0xe1, 0xe9, 0x30, 0x70, 0xe3, 0x56, 0xfb, 0x4a, 0xfd, 0x90,
	0x70, 0x02, 0xc5, 0xb9, 0x61, 0xc0, 0xfb, 0x09, 0xf9, 0xb4, 0x61, 0xd1, 0x17, 0x44, 0xbb, 0x12,
	0xf3, 0x0a, 0x8a, 0xce, 0x12, 0xa6, 0xf3, 0x37, 0xcc, 0x47, 0x92, 0xd9, 0x22, 0xf7, 0x16, 0x33,
	0x3b, 0x9c, 0x8a, 0x4e, 0xd8, 0xe4, 0xf8, 0x43, 0x83, 0xed, 0x64, 0x97, 0x73, 0x6c, 0x27, 0xe4,
	0x17, 0x8e, 0x9a, 0xfe, 0x60, 0x25, 0x5f, 0x55, 0x07, 0x53, 0xde, 0xcf, 0x20, 0xfb, 0x19, 0xf7,
	0xeb, 0xab, 0xe3, 0x1d, 0xad, 0x8d, 0x43, 0xd8, 0x8a, 0x4c, 0x0f, 0xee, 0x27, 0x58, 0xc9, 0x29,
	0xd4, 0x2b, 0x66, 0xf8, 0x48, 0x98, 0xd7, 0x8f, 0x84, 0xf9, 0x3c, 0x78, 0x24, 0x48, 0x4d, 0xb2,
	0x77, 0xda, 0xdb, 0x29, 0x6c, 0x9c, 0xc1, 0x9d, 0xf8, 0x98, 0xa2, 0x91, 0x45, 0x8b, 0x95, 0x23,
	0x1d, 0xa9, 0x5a, 0xa0, 0x9d, 0xd5, 0x02, 0x5f, 0x35, 0xb8, 0x3d, 0x3f, 0x57, 0xd8, 0x4c, 0x80,
	0x53, 0xa7, 0x5b, 0x6f, 0x2d, 0xf5, 0x53, 0x69, 0x6f, 0xca, 0x7b, 0x34, 0x30, 0xab, 0x2d, 0x04,
	0xf3, 0xbb, 0xd5, 0x37, 0x95, 0xd8, 0x6b, 0xfd, 0x24, 0xfc, 0xea, 0xe7, 0x65, 0x64, 0x8f, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x98, 0x92, 0xdd, 0x7b, 0xce, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScoresClient is the client API for Scores service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScoresClient interface {
	// Lists a graph's scores.
	ListGraphScores(ctx context.Context, in *ListGraphScoresRequest, opts ...grpc.CallOption) (*ListGraphScoresResponse, error)
	// Gets a graph score.
	GetGraphScore(ctx context.Context, in *GetGraphScoreRequest, opts ...grpc.CallOption) (*Score, error)
	// Sets a graph score.
	SetGraphScore(ctx context.Context, in *SetGraphScoreRequest, opts ...grpc.CallOption) (*Score, error)
	// Sets a batch of graph scores.
	BatchSetGraphScores(ctx context.Context, in *BatchSetGraphScoreRequest, opts ...grpc.CallOption) (*BatchSetGraphScoreResponse, error)
	// Deletes a graph.
	DeleteGraph(ctx context.Context, in *DeleteGraphRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Deletes a score.
	DeleteGraphScore(ctx context.Context, in *DeleteGraphScoreRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets graph scores in descending order by score value.
	TopGraphScores(ctx context.Context, in *TopGraphScoresRequest, opts ...grpc.CallOption) (*TopGraphScoresResponse, error)
}

type scoresClient struct {
	cc *grpc.ClientConn
}

func NewScoresClient(cc *grpc.ClientConn) ScoresClient {
	return &scoresClient{cc}
}

func (c *scoresClient) ListGraphScores(ctx context.Context, in *ListGraphScoresRequest, opts ...grpc.CallOption) (*ListGraphScoresResponse, error) {
	out := new(ListGraphScoresResponse)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/ListGraphScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) GetGraphScore(ctx context.Context, in *GetGraphScoreRequest, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/GetGraphScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) SetGraphScore(ctx context.Context, in *SetGraphScoreRequest, opts ...grpc.CallOption) (*Score, error) {
	out := new(Score)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/SetGraphScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) BatchSetGraphScores(ctx context.Context, in *BatchSetGraphScoreRequest, opts ...grpc.CallOption) (*BatchSetGraphScoreResponse, error) {
	out := new(BatchSetGraphScoreResponse)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/BatchSetGraphScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) DeleteGraph(ctx context.Context, in *DeleteGraphRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/DeleteGraph", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) DeleteGraphScore(ctx context.Context, in *DeleteGraphScoreRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/DeleteGraphScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoresClient) TopGraphScores(ctx context.Context, in *TopGraphScoresRequest, opts ...grpc.CallOption) (*TopGraphScoresResponse, error) {
	out := new(TopGraphScoresResponse)
	err := c.cc.Invoke(ctx, "/topos.scores.v1.Scores/TopGraphScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScoresServer is the server API for Scores service.
type ScoresServer interface {
	// Lists a graph's scores.
	ListGraphScores(context.Context, *ListGraphScoresRequest) (*ListGraphScoresResponse, error)
	// Gets a graph score.
	GetGraphScore(context.Context, *GetGraphScoreRequest) (*Score, error)
	// Sets a graph score.
	SetGraphScore(context.Context, *SetGraphScoreRequest) (*Score, error)
	// Sets a batch of graph scores.
	BatchSetGraphScores(context.Context, *BatchSetGraphScoreRequest) (*BatchSetGraphScoreResponse, error)
	// Deletes a graph.
	DeleteGraph(context.Context, *DeleteGraphRequest) (*empty.Empty, error)
	// Deletes a score.
	DeleteGraphScore(context.Context, *DeleteGraphScoreRequest) (*empty.Empty, error)
	// Gets graph scores in descending order by score value.
	TopGraphScores(context.Context, *TopGraphScoresRequest) (*TopGraphScoresResponse, error)
}

func RegisterScoresServer(s *grpc.Server, srv ScoresServer) {
	s.RegisterService(&_Scores_serviceDesc, srv)
}

func _Scores_ListGraphScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGraphScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).ListGraphScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/ListGraphScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).ListGraphScores(ctx, req.(*ListGraphScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_GetGraphScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGraphScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).GetGraphScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/GetGraphScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).GetGraphScore(ctx, req.(*GetGraphScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_SetGraphScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGraphScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).SetGraphScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/SetGraphScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).SetGraphScore(ctx, req.(*SetGraphScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_BatchSetGraphScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchSetGraphScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).BatchSetGraphScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/BatchSetGraphScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).BatchSetGraphScores(ctx, req.(*BatchSetGraphScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_DeleteGraph_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGraphRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).DeleteGraph(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/DeleteGraph",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).DeleteGraph(ctx, req.(*DeleteGraphRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_DeleteGraphScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGraphScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).DeleteGraphScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/DeleteGraphScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).DeleteGraphScore(ctx, req.(*DeleteGraphScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scores_TopGraphScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopGraphScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoresServer).TopGraphScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.scores.v1.Scores/TopGraphScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoresServer).TopGraphScores(ctx, req.(*TopGraphScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scores_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.scores.v1.Scores",
	HandlerType: (*ScoresServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGraphScores",
			Handler:    _Scores_ListGraphScores_Handler,
		},
		{
			MethodName: "GetGraphScore",
			Handler:    _Scores_GetGraphScore_Handler,
		},
		{
			MethodName: "SetGraphScore",
			Handler:    _Scores_SetGraphScore_Handler,
		},
		{
			MethodName: "BatchSetGraphScores",
			Handler:    _Scores_BatchSetGraphScores_Handler,
		},
		{
			MethodName: "DeleteGraph",
			Handler:    _Scores_DeleteGraph_Handler,
		},
		{
			MethodName: "DeleteGraphScore",
			Handler:    _Scores_DeleteGraphScore_Handler,
		},
		{
			MethodName: "TopGraphScores",
			Handler:    _Scores_TopGraphScores_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topos/scores/v1/scores.proto",
}
