// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/ontology/v1/ontology.proto

package topos_ontology_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeatureStats struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float64  `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Average              float64  `protobuf:"fixed64,3,opt,name=average,proto3" json:"average,omitempty"`
	Median               float64  `protobuf:"fixed64,4,opt,name=median,proto3" json:"median,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureStats) Reset()         { *m = FeatureStats{} }
func (m *FeatureStats) String() string { return proto.CompactTextString(m) }
func (*FeatureStats) ProtoMessage()    {}
func (*FeatureStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{0}
}

func (m *FeatureStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats.Unmarshal(m, b)
}
func (m *FeatureStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats.Marshal(b, m, deterministic)
}
func (m *FeatureStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats.Merge(m, src)
}
func (m *FeatureStats) XXX_Size() int {
	return xxx_messageInfo_FeatureStats.Size(m)
}
func (m *FeatureStats) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats proto.InternalMessageInfo

func (m *FeatureStats) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *FeatureStats) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *FeatureStats) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *FeatureStats) GetMedian() float64 {
	if m != nil {
		return m.Median
	}
	return 0
}

type Brand struct {
	// The name of the point brand. It must have the format `"brands/{brand}"`.
	// `{brand}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the brand.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address of the brand's headquarters.
	FormattedAddress string `protobuf:"bytes,3,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The email of the brand.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// The realestate email of the brand.
	RealestateEmail string `protobuf:"bytes,5,opt,name=realestate_email,json=realestateEmail,proto3" json:"realestate_email,omitempty"`
	// The phone number of the brand.
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The contacts for the brand.
	Contacts []*Brand_Contact `protobuf:"bytes,7,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// The [2017 NAICS
	// code](https://www.census.gov/cgi-bin/sssd/naics/naicsrch?chart=2017) of the
	// brand.
	Naics string `protobuf:"bytes,8,opt,name=naics,proto3" json:"naics,omitempty"`
	// The postal code of the brand's headquarters.
	PostalCode string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// The feature set statistics for this brand's locations.
	FeatureSetFeatureStats map[string]*FeatureStats `protobuf:"bytes,10,rep,name=feature_set_feature_stats,json=featureSetFeatureStats,proto3" json:"feature_set_feature_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The brand's location preferences by region.
	RegionPreferences map[string]*Brand_Preferences `protobuf:"bytes,11,rep,name=region_preferences,json=regionPreferences,proto3" json:"region_preferences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A list of brand tags.
	Tags []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	// Exclude the brand from results.
	Exclude bool `protobuf:"varint,13,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The creation timestamp of the brand.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand.
	UpdateTime        *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TotalLocations    int64                `protobuf:"varint,16,opt,name=total_locations,json=totalLocations,proto3" json:"total_locations,omitempty"`
	StatesOfExpansion []string             `protobuf:"bytes,17,rep,name=states_of_expansion,json=statesOfExpansion,proto3" json:"states_of_expansion,omitempty"`
	StatesOfOperation []string             `protobuf:"bytes,18,rep,name=states_of_operation,json=statesOfOperation,proto3" json:"states_of_operation,omitempty"`
	Website           string               `protobuf:"bytes,19,opt,name=website,proto3" json:"website,omitempty"`
	// The name of a parent brand, if existing
	ParentName string `protobuf:"bytes,20,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`
	// Preferred cotenants for a particular brand
	PreferredCotenants []string `protobuf:"bytes,21,rep,name=preferred_cotenants,json=preferredCotenants,proto3" json:"preferred_cotenants,omitempty"`
	// Preferred road types for a brand
	PreferredRoadType []int64 `protobuf:"varint,22,rep,packed,name=preferred_road_type,json=preferredRoadType,proto3" json:"preferred_road_type,omitempty"`
	// Preferred location type for a brand
	LocationTypesConsidered []string `protobuf:"bytes,23,rep,name=location_types_considered,json=locationTypesConsidered,proto3" json:"location_types_considered,omitempty"`
	// Pricepoint for a brand
	Pricing string `protobuf:"bytes,24,opt,name=pricing,proto3" json:"pricing,omitempty"`
	// "Vibes" of a brand
	Attributes []string `protobuf:"bytes,25,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// description of a brand
	Description string `protobuf:"bytes,26,opt,name=description,proto3" json:"description,omitempty"`
	// neighborhood correlations for a brand
	NeighborhoodCorrelations []string `protobuf:"bytes,27,rep,name=neighborhood_correlations,json=neighborhoodCorrelations,proto3" json:"neighborhood_correlations,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{1}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Brand) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Brand) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Brand) GetRealestateEmail() string {
	if m != nil {
		return m.RealestateEmail
	}
	return ""
}

func (m *Brand) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Brand) GetContacts() []*Brand_Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Brand) GetNaics() string {
	if m != nil {
		return m.Naics
	}
	return ""
}

func (m *Brand) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Brand) GetFeatureSetFeatureStats() map[string]*FeatureStats {
	if m != nil {
		return m.FeatureSetFeatureStats
	}
	return nil
}

func (m *Brand) GetRegionPreferences() map[string]*Brand_Preferences {
	if m != nil {
		return m.RegionPreferences
	}
	return nil
}

func (m *Brand) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Brand) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Brand) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Brand) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Brand) GetTotalLocations() int64 {
	if m != nil {
		return m.TotalLocations
	}
	return 0
}

func (m *Brand) GetStatesOfExpansion() []string {
	if m != nil {
		return m.StatesOfExpansion
	}
	return nil
}

func (m *Brand) GetStatesOfOperation() []string {
	if m != nil {
		return m.StatesOfOperation
	}
	return nil
}

func (m *Brand) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Brand) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *Brand) GetPreferredCotenants() []string {
	if m != nil {
		return m.PreferredCotenants
	}
	return nil
}

func (m *Brand) GetPreferredRoadType() []int64 {
	if m != nil {
		return m.PreferredRoadType
	}
	return nil
}

func (m *Brand) GetLocationTypesConsidered() []string {
	if m != nil {
		return m.LocationTypesConsidered
	}
	return nil
}

func (m *Brand) GetPricing() string {
	if m != nil {
		return m.Pricing
	}
	return ""
}

func (m *Brand) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Brand) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Brand) GetNeighborhoodCorrelations() []string {
	if m != nil {
		return m.NeighborhoodCorrelations
	}
	return nil
}

type Brand_Contact struct {
	// The full name of the contact.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The title of the contact.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The phonenumber of the contact.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// The phone number of the contact.
	PhoneNumber string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The regions that a contact covers
	Regions              []string `protobuf:"bytes,5,rep,name=regions,proto3" json:"regions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Contact) Reset()         { *m = Brand_Contact{} }
func (m *Brand_Contact) String() string { return proto.CompactTextString(m) }
func (*Brand_Contact) ProtoMessage()    {}
func (*Brand_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{1, 0}
}

func (m *Brand_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Contact.Unmarshal(m, b)
}
func (m *Brand_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Contact.Marshal(b, m, deterministic)
}
func (m *Brand_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Contact.Merge(m, src)
}
func (m *Brand_Contact) XXX_Size() int {
	return xxx_messageInfo_Brand_Contact.Size(m)
}
func (m *Brand_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Contact proto.InternalMessageInfo

func (m *Brand_Contact) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Brand_Contact) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Brand_Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Brand_Contact) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Brand_Contact) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

type Brand_Preferences struct {
	// The prefered square footage of the brand.
	PreferredGla string `protobuf:"bytes,1,opt,name=preferred_gla,json=preferredGla,proto3" json:"preferred_gla,omitempty"`
	// The percentage of locations where this brand shares a building.
	Inline float64 `protobuf:"fixed64,2,opt,name=inline,proto3" json:"inline,omitempty"`
	// The percentage of locations where this brand occupies a stand-alone
	// building.
	StandAlone           float64  `protobuf:"fixed64,3,opt,name=stand_alone,json=standAlone,proto3" json:"stand_alone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Preferences) Reset()         { *m = Brand_Preferences{} }
func (m *Brand_Preferences) String() string { return proto.CompactTextString(m) }
func (*Brand_Preferences) ProtoMessage()    {}
func (*Brand_Preferences) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{1, 2}
}

func (m *Brand_Preferences) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Preferences.Unmarshal(m, b)
}
func (m *Brand_Preferences) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Preferences.Marshal(b, m, deterministic)
}
func (m *Brand_Preferences) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Preferences.Merge(m, src)
}
func (m *Brand_Preferences) XXX_Size() int {
	return xxx_messageInfo_Brand_Preferences.Size(m)
}
func (m *Brand_Preferences) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Preferences.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Preferences proto.InternalMessageInfo

func (m *Brand_Preferences) GetPreferredGla() string {
	if m != nil {
		return m.PreferredGla
	}
	return ""
}

func (m *Brand_Preferences) GetInline() float64 {
	if m != nil {
		return m.Inline
	}
	return 0
}

func (m *Brand_Preferences) GetStandAlone() float64 {
	if m != nil {
		return m.StandAlone
	}
	return 0
}

type Tag struct {
	// The name of the tag. It must have the format `"tags/{tag}"`. `{tag}`
	// must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the tag.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Exclude tag from results.
	Exclude bool `protobuf:"varint,3,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The plural display name of the tag.
	PluralDisplayName string `protobuf:"bytes,4,opt,name=plural_display_name,json=pluralDisplayName,proto3" json:"plural_display_name,omitempty"`
	// Is the tag a category.
	IsCategory bool `protobuf:"varint,5,opt,name=is_category,json=isCategory,proto3" json:"is_category,omitempty"`
	// The name of a parent tag, if existing
	ParentName           string   `protobuf:"bytes,6,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{2}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Tag) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Tag) GetPluralDisplayName() string {
	if m != nil {
		return m.PluralDisplayName
	}
	return ""
}

func (m *Tag) GetIsCategory() bool {
	if m != nil {
		return m.IsCategory
	}
	return false
}

func (m *Tag) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

type GetBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandRequest) Reset()         { *m = GetBrandRequest{} }
func (m *GetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandRequest) ProtoMessage()    {}
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{3}
}

func (m *GetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandRequest.Unmarshal(m, b)
}
func (m *GetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandRequest.Merge(m, src)
}
func (m *GetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandRequest.Size(m)
}
func (m *GetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandRequest proto.InternalMessageInfo

func (m *GetBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetBrandFeaturesRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandFeaturesRequest) Reset()         { *m = GetBrandFeaturesRequest{} }
func (m *GetBrandFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandFeaturesRequest) ProtoMessage()    {}
func (*GetBrandFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{4}
}

func (m *GetBrandFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandFeaturesRequest.Unmarshal(m, b)
}
func (m *GetBrandFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandFeaturesRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandFeaturesRequest.Merge(m, src)
}
func (m *GetBrandFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandFeaturesRequest.Size(m)
}
func (m *GetBrandFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandFeaturesRequest proto.InternalMessageInfo

func (m *GetBrandFeaturesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetBrandsBulkRequest struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandsBulkRequest) Reset()         { *m = GetBrandsBulkRequest{} }
func (m *GetBrandsBulkRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandsBulkRequest) ProtoMessage()    {}
func (*GetBrandsBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{5}
}

func (m *GetBrandsBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandsBulkRequest.Unmarshal(m, b)
}
func (m *GetBrandsBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandsBulkRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandsBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandsBulkRequest.Merge(m, src)
}
func (m *GetBrandsBulkRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandsBulkRequest.Size(m)
}
func (m *GetBrandsBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandsBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandsBulkRequest proto.InternalMessageInfo

func (m *GetBrandsBulkRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type SearchBrandsRequest struct {
	DisplayName          string   `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	PreferredGla         []int32  `protobuf:"varint,3,rep,packed,name=preferred_gla,json=preferredGla,proto3" json:"preferred_gla,omitempty"`
	TenancyPrefs         []string `protobuf:"bytes,4,rep,name=tenancy_prefs,json=tenancyPrefs,proto3" json:"tenancy_prefs,omitempty"`
	RegionsOfExpansion   []string `protobuf:"bytes,5,rep,name=regions_of_expansion,json=regionsOfExpansion,proto3" json:"regions_of_expansion,omitempty"`
	RegionsOfOperation   []string `protobuf:"bytes,6,rep,name=regions_of_operation,json=regionsOfOperation,proto3" json:"regions_of_operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchBrandsRequest) Reset()         { *m = SearchBrandsRequest{} }
func (m *SearchBrandsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchBrandsRequest) ProtoMessage()    {}
func (*SearchBrandsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{6}
}

func (m *SearchBrandsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchBrandsRequest.Unmarshal(m, b)
}
func (m *SearchBrandsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchBrandsRequest.Marshal(b, m, deterministic)
}
func (m *SearchBrandsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchBrandsRequest.Merge(m, src)
}
func (m *SearchBrandsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchBrandsRequest.Size(m)
}
func (m *SearchBrandsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchBrandsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchBrandsRequest proto.InternalMessageInfo

func (m *SearchBrandsRequest) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *SearchBrandsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *SearchBrandsRequest) GetPreferredGla() []int32 {
	if m != nil {
		return m.PreferredGla
	}
	return nil
}

func (m *SearchBrandsRequest) GetTenancyPrefs() []string {
	if m != nil {
		return m.TenancyPrefs
	}
	return nil
}

func (m *SearchBrandsRequest) GetRegionsOfExpansion() []string {
	if m != nil {
		return m.RegionsOfExpansion
	}
	return nil
}

func (m *SearchBrandsRequest) GetRegionsOfOperation() []string {
	if m != nil {
		return m.RegionsOfOperation
	}
	return nil
}

type ListBrandsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsRequest) Reset()         { *m = ListBrandsRequest{} }
func (m *ListBrandsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBrandsRequest) ProtoMessage()    {}
func (*ListBrandsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{7}
}

func (m *ListBrandsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsRequest.Unmarshal(m, b)
}
func (m *ListBrandsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsRequest.Marshal(b, m, deterministic)
}
func (m *ListBrandsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsRequest.Merge(m, src)
}
func (m *ListBrandsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBrandsRequest.Size(m)
}
func (m *ListBrandsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsRequest proto.InternalMessageInfo

func (m *ListBrandsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBrandsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListBrandsResponse struct {
	Brands []*Brand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsResponse) Reset()         { *m = ListBrandsResponse{} }
func (m *ListBrandsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBrandsResponse) ProtoMessage()    {}
func (*ListBrandsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{8}
}

func (m *ListBrandsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsResponse.Unmarshal(m, b)
}
func (m *ListBrandsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsResponse.Marshal(b, m, deterministic)
}
func (m *ListBrandsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsResponse.Merge(m, src)
}
func (m *ListBrandsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBrandsResponse.Size(m)
}
func (m *ListBrandsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsResponse proto.InternalMessageInfo

func (m *ListBrandsResponse) GetBrands() []*Brand {
	if m != nil {
		return m.Brands
	}
	return nil
}

func (m *ListBrandsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetBrandRequest struct {
	Brand                *Brand   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBrandRequest) Reset()         { *m = SetBrandRequest{} }
func (m *SetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*SetBrandRequest) ProtoMessage()    {}
func (*SetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{9}
}

func (m *SetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBrandRequest.Unmarshal(m, b)
}
func (m *SetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBrandRequest.Marshal(b, m, deterministic)
}
func (m *SetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBrandRequest.Merge(m, src)
}
func (m *SetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_SetBrandRequest.Size(m)
}
func (m *SetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBrandRequest proto.InternalMessageInfo

func (m *SetBrandRequest) GetBrand() *Brand {
	if m != nil {
		return m.Brand
	}
	return nil
}

type DeleteBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBrandRequest) Reset()         { *m = DeleteBrandRequest{} }
func (m *DeleteBrandRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBrandRequest) ProtoMessage()    {}
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{10}
}

func (m *DeleteBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBrandRequest.Unmarshal(m, b)
}
func (m *DeleteBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBrandRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBrandRequest.Merge(m, src)
}
func (m *DeleteBrandRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBrandRequest.Size(m)
}
func (m *DeleteBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBrandRequest proto.InternalMessageInfo

func (m *DeleteBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagRequest) Reset()         { *m = GetTagRequest{} }
func (m *GetTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest) ProtoMessage()    {}
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{11}
}

func (m *GetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest.Unmarshal(m, b)
}
func (m *GetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest.Marshal(b, m, deterministic)
}
func (m *GetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest.Merge(m, src)
}
func (m *GetTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest.Size(m)
}
func (m *GetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest proto.InternalMessageInfo

func (m *GetTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetTagRequest struct {
	Tag                  *Tag     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTagRequest) Reset()         { *m = SetTagRequest{} }
func (m *SetTagRequest) String() string { return proto.CompactTextString(m) }
func (*SetTagRequest) ProtoMessage()    {}
func (*SetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{12}
}

func (m *SetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRequest.Unmarshal(m, b)
}
func (m *SetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRequest.Marshal(b, m, deterministic)
}
func (m *SetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRequest.Merge(m, src)
}
func (m *SetTagRequest) XXX_Size() int {
	return xxx_messageInfo_SetTagRequest.Size(m)
}
func (m *SetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRequest proto.InternalMessageInfo

func (m *SetTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type ListTagsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsRequest) Reset()         { *m = ListTagsRequest{} }
func (m *ListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest) ProtoMessage()    {}
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{13}
}

func (m *ListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest.Unmarshal(m, b)
}
func (m *ListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest.Merge(m, src)
}
func (m *ListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest.Size(m)
}
func (m *ListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest proto.InternalMessageInfo

func (m *ListTagsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTagsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListTagsResponse struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsResponse) Reset()         { *m = ListTagsResponse{} }
func (m *ListTagsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTagsResponse) ProtoMessage()    {}
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{14}
}

func (m *ListTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsResponse.Unmarshal(m, b)
}
func (m *ListTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsResponse.Marshal(b, m, deterministic)
}
func (m *ListTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsResponse.Merge(m, src)
}
func (m *ListTagsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTagsResponse.Size(m)
}
func (m *ListTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsResponse proto.InternalMessageInfo

func (m *ListTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListTagsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeleteTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{15}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetBrandFeaturesResponse struct {
	Features             map[string]*FeatureStats `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetBrandFeaturesResponse) Reset()         { *m = GetBrandFeaturesResponse{} }
func (m *GetBrandFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*GetBrandFeaturesResponse) ProtoMessage()    {}
func (*GetBrandFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{16}
}

func (m *GetBrandFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandFeaturesResponse.Unmarshal(m, b)
}
func (m *GetBrandFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *GetBrandFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandFeaturesResponse.Merge(m, src)
}
func (m *GetBrandFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_GetBrandFeaturesResponse.Size(m)
}
func (m *GetBrandFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandFeaturesResponse proto.InternalMessageInfo

func (m *GetBrandFeaturesResponse) GetFeatures() map[string]*FeatureStats {
	if m != nil {
		return m.Features
	}
	return nil
}

type GetBrandsBulkResponse struct {
	Brands               []*Brand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandsBulkResponse) Reset()         { *m = GetBrandsBulkResponse{} }
func (m *GetBrandsBulkResponse) String() string { return proto.CompactTextString(m) }
func (*GetBrandsBulkResponse) ProtoMessage()    {}
func (*GetBrandsBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{17}
}

func (m *GetBrandsBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandsBulkResponse.Unmarshal(m, b)
}
func (m *GetBrandsBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandsBulkResponse.Marshal(b, m, deterministic)
}
func (m *GetBrandsBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandsBulkResponse.Merge(m, src)
}
func (m *GetBrandsBulkResponse) XXX_Size() int {
	return xxx_messageInfo_GetBrandsBulkResponse.Size(m)
}
func (m *GetBrandsBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandsBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandsBulkResponse proto.InternalMessageInfo

func (m *GetBrandsBulkResponse) GetBrands() []*Brand {
	if m != nil {
		return m.Brands
	}
	return nil
}

type SearchBrandsResponse struct {
	Brands               []*Brand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchBrandsResponse) Reset()         { *m = SearchBrandsResponse{} }
func (m *SearchBrandsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchBrandsResponse) ProtoMessage()    {}
func (*SearchBrandsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3009b39f7ca3919e, []int{18}
}

func (m *SearchBrandsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchBrandsResponse.Unmarshal(m, b)
}
func (m *SearchBrandsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchBrandsResponse.Marshal(b, m, deterministic)
}
func (m *SearchBrandsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchBrandsResponse.Merge(m, src)
}
func (m *SearchBrandsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchBrandsResponse.Size(m)
}
func (m *SearchBrandsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchBrandsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchBrandsResponse proto.InternalMessageInfo

func (m *SearchBrandsResponse) GetBrands() []*Brand {
	if m != nil {
		return m.Brands
	}
	return nil
}

func init() {
	proto.RegisterType((*FeatureStats)(nil), "topos.ontology.v1.FeatureStats")
	proto.RegisterType((*Brand)(nil), "topos.ontology.v1.Brand")
	proto.RegisterMapType((map[string]*FeatureStats)(nil), "topos.ontology.v1.Brand.FeatureSetFeatureStatsEntry")
	proto.RegisterMapType((map[string]*Brand_Preferences)(nil), "topos.ontology.v1.Brand.RegionPreferencesEntry")
	proto.RegisterType((*Brand_Contact)(nil), "topos.ontology.v1.Brand.Contact")
	proto.RegisterType((*Brand_Preferences)(nil), "topos.ontology.v1.Brand.Preferences")
	proto.RegisterType((*Tag)(nil), "topos.ontology.v1.Tag")
	proto.RegisterType((*GetBrandRequest)(nil), "topos.ontology.v1.GetBrandRequest")
	proto.RegisterType((*GetBrandFeaturesRequest)(nil), "topos.ontology.v1.GetBrandFeaturesRequest")
	proto.RegisterType((*GetBrandsBulkRequest)(nil), "topos.ontology.v1.GetBrandsBulkRequest")
	proto.RegisterType((*SearchBrandsRequest)(nil), "topos.ontology.v1.SearchBrandsRequest")
	proto.RegisterType((*ListBrandsRequest)(nil), "topos.ontology.v1.ListBrandsRequest")
	proto.RegisterType((*ListBrandsResponse)(nil), "topos.ontology.v1.ListBrandsResponse")
	proto.RegisterType((*SetBrandRequest)(nil), "topos.ontology.v1.SetBrandRequest")
	proto.RegisterType((*DeleteBrandRequest)(nil), "topos.ontology.v1.DeleteBrandRequest")
	proto.RegisterType((*GetTagRequest)(nil), "topos.ontology.v1.GetTagRequest")
	proto.RegisterType((*SetTagRequest)(nil), "topos.ontology.v1.SetTagRequest")
	proto.RegisterType((*ListTagsRequest)(nil), "topos.ontology.v1.ListTagsRequest")
	proto.RegisterType((*ListTagsResponse)(nil), "topos.ontology.v1.ListTagsResponse")
	proto.RegisterType((*DeleteTagRequest)(nil), "topos.ontology.v1.DeleteTagRequest")
	proto.RegisterType((*GetBrandFeaturesResponse)(nil), "topos.ontology.v1.GetBrandFeaturesResponse")
	proto.RegisterMapType((map[string]*FeatureStats)(nil), "topos.ontology.v1.GetBrandFeaturesResponse.FeaturesEntry")
	proto.RegisterType((*GetBrandsBulkResponse)(nil), "topos.ontology.v1.GetBrandsBulkResponse")
	proto.RegisterType((*SearchBrandsResponse)(nil), "topos.ontology.v1.SearchBrandsResponse")
}

func init() { proto.RegisterFile("topos/ontology/v1/ontology.proto", fileDescriptor_3009b39f7ca3919e) }

var fileDescriptor_3009b39f7ca3919e = []byte{
	// 1644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x5f, 0x73, 0x23, 0x47,
	0x11, 0x2f, 0x59, 0x27, 0x9f, 0xdc, 0x92, 0x22, 0x69, 0xec, 0xf3, 0xad, 0xd7, 0x97, 0x9c, 0xb2,
	0x4e, 0x7c, 0xc2, 0x09, 0x52, 0x62, 0xa0, 0x8a, 0x38, 0xf0, 0x70, 0x71, 0x8e, 0x83, 0xaa, 0x90,
	0x4b, 0xad, 0xcc, 0x1b, 0xb0, 0x35, 0xda, 0x1d, 0xed, 0xed, 0x79, 0xb5, 0xb3, 0xec, 0x8c, 0x8c,
	0x15, 0x2a, 0x3c, 0xf0, 0x01, 0xa0, 0x28, 0xbe, 0x14, 0x6f, 0x3c, 0xf0, 0x15, 0x78, 0xe5, 0x0b,
	0xf0, 0x44, 0x4d, 0xcf, 0xac, 0xb4, 0xfa, 0xeb, 0xcb, 0xd5, 0xbd, 0xed, 0x74, 0xff, 0xa6, 0xff,
	0x4c, 0x77, 0xff, 0x5a, 0x82, 0x8e, 0xe4, 0x29, 0x17, 0x7d, 0x9e, 0x48, 0x1e, 0xf3, 0x70, 0xda,
	0xbf, 0xf9, 0x74, 0xf6, 0xdd, 0x4b, 0x33, 0x2e, 0x39, 0x69, 0x23, 0xa2, 0x37, 0x93, 0xde, 0x7c,
	0x6a, 0x3f, 0x0a, 0x39, 0x0f, 0x63, 0xd6, 0xa7, 0x69, 0xd4, 0xa7, 0x49, 0xc2, 0x25, 0x95, 0x11,
	0x4f, 0x84, 0xbe, 0x60, 0x1f, 0x1b, 0x2d, 0x9e, 0x86, 0x93, 0x51, 0x9f, 0x8d, 0x53, 0x69, 0xac,
	0xd9, 0x8f, 0x97, 0x95, 0x32, 0x1a, 0x33, 0x21, 0xe9, 0x38, 0xd5, 0x00, 0x27, 0x80, 0xfa, 0x2f,
	0x18, 0x95, 0x93, 0x8c, 0x0d, 0x24, 0x95, 0x82, 0xb4, 0xa0, 0x3c, 0x8e, 0x12, 0xab, 0xd4, 0x29,
	0x75, 0x4b, 0xae, 0xfa, 0x44, 0x09, 0xbd, 0xb5, 0x76, 0x8c, 0x84, 0xde, 0x12, 0x0b, 0xee, 0xd3,
	0x1b, 0x96, 0xd1, 0x90, 0x59, 0x65, 0x94, 0xe6, 0x47, 0x72, 0x08, 0xbb, 0x63, 0x16, 0x44, 0x34,
	0xb1, 0xee, 0xa1, 0xc2, 0x9c, 0x9c, 0xbf, 0x36, 0xa0, 0xf2, 0x45, 0x46, 0x93, 0x80, 0x10, 0xb8,
	0x97, 0xd0, 0x31, 0x43, 0x07, 0x7b, 0x2e, 0x7e, 0x93, 0xf7, 0xa1, 0x1e, 0x44, 0x22, 0x8d, 0xe9,
	0xd4, 0x43, 0xdd, 0x0e, 0xea, 0x6a, 0x46, 0xf6, 0xb5, 0x82, 0x7c, 0x04, 0xed, 0x11, 0xcf, 0xc6,
	0x54, 0x4a, 0x16, 0x78, 0x34, 0x08, 0x32, 0x26, 0x04, 0x3a, 0xdf, 0x73, 0x5b, 0x33, 0xc5, 0x53,
	0x2d, 0x27, 0x07, 0x50, 0x61, 0x63, 0x1a, 0xc5, 0x18, 0xc4, 0x9e, 0xab, 0x0f, 0xe4, 0x07, 0xd0,
	0xca, 0x18, 0x8d, 0x55, 0xf6, 0x92, 0x79, 0x1a, 0x50, 0x41, 0x40, 0x73, 0x2e, 0x7f, 0x86, 0xd0,
	0xf7, 0xa1, 0x9e, 0xbe, 0xe4, 0x09, 0xf3, 0x92, 0xc9, 0x78, 0xc8, 0x32, 0x6b, 0x57, 0x07, 0x84,
	0xb2, 0xaf, 0x51, 0x44, 0x7e, 0x06, 0x55, 0x9f, 0x27, 0x92, 0xfa, 0x52, 0x58, 0xf7, 0x3b, 0xe5,
	0x6e, 0xed, 0xbc, 0xd3, 0x5b, 0xa9, 0x5c, 0x0f, 0x73, 0xee, 0x5d, 0x6a, 0xa0, 0x3b, 0xbb, 0xa1,
	0x22, 0x4c, 0x68, 0xe4, 0x0b, 0xab, 0xaa, 0x23, 0xc4, 0x03, 0x79, 0x0c, 0xb5, 0x94, 0x0b, 0x49,
	0x63, 0xcf, 0xe7, 0x01, 0xb3, 0xf6, 0x50, 0x07, 0x5a, 0x74, 0xc9, 0x03, 0x46, 0x38, 0x1c, 0x8d,
	0x74, 0xb1, 0x3c, 0xc1, 0xa4, 0x37, 0xfb, 0x56, 0x95, 0xb3, 0x00, 0xa3, 0xf8, 0xf1, 0xc6, 0x28,
	0xf2, 0x32, 0x33, 0x59, 0x2c, 0xf8, 0xb3, 0x44, 0x66, 0x53, 0xf7, 0x70, 0xb4, 0x56, 0x49, 0x7e,
	0x0f, 0x24, 0x63, 0x61, 0xc4, 0x13, 0x2f, 0xcd, 0xd8, 0x88, 0x65, 0x2c, 0xf1, 0x99, 0xb0, 0x6a,
	0xe8, 0xa9, 0xbf, 0xd1, 0x93, 0x8b, 0x57, 0xbe, 0x99, 0xdf, 0xd0, 0x4e, 0xda, 0xd9, 0xb2, 0x5c,
	0x75, 0x83, 0xa4, 0xa1, 0xb0, 0xea, 0x9d, 0xb2, 0xea, 0x06, 0xf5, 0xad, 0xba, 0x8b, 0xdd, 0xfa,
	0xf1, 0x24, 0x60, 0x56, 0xa3, 0x53, 0xea, 0x56, 0xdd, 0xfc, 0x48, 0x3e, 0x87, 0x9a, 0x9f, 0x31,
	0x55, 0x3d, 0xd5, 0xc5, 0xd6, 0x3b, 0x9d, 0x52, 0xb7, 0x76, 0x6e, 0xf7, 0x74, 0x8b, 0xf7, 0xf2,
	0x16, 0xef, 0x5d, 0xe5, 0x2d, 0xee, 0x82, 0x86, 0x2b, 0x81, 0xba, 0x3c, 0x49, 0x83, 0xd9, 0xe5,
	0xe6, 0xdd, 0x97, 0x35, 0x1c, 0x2f, 0x3f, 0x81, 0xa6, 0xe4, 0xaa, 0x30, 0x31, 0xf7, 0xf5, 0xf0,
	0x59, 0xad, 0x4e, 0xa9, 0x5b, 0x76, 0xdf, 0x41, 0xf1, 0x57, 0xb9, 0x94, 0xf4, 0x60, 0x1f, 0xfb,
	0x48, 0x78, 0x7c, 0xe4, 0xb1, 0xdb, 0x94, 0x26, 0x22, 0xe2, 0x89, 0xd5, 0xc6, 0xfc, 0xda, 0x5a,
	0xf5, 0x62, 0xf4, 0x2c, 0x57, 0x2c, 0xe2, 0x79, 0xca, 0x32, 0xb4, 0x63, 0x91, 0x45, 0xfc, 0x8b,
	0x5c, 0xa1, 0x1e, 0xe7, 0x8f, 0x6c, 0x28, 0x22, 0xc9, 0xac, 0x7d, 0x6c, 0x8f, 0xfc, 0x88, 0xcd,
	0x43, 0x33, 0x96, 0x48, 0x3d, 0x43, 0x07, 0xa6, 0x79, 0x50, 0x84, 0x23, 0xd4, 0x87, 0x7d, 0x5d,
	0xc4, 0x8c, 0x05, 0x9e, 0xcf, 0x25, 0x4b, 0x68, 0x22, 0x85, 0xf5, 0x00, 0x5d, 0x91, 0x99, 0xea,
	0x32, 0xd7, 0xa8, 0xd8, 0xe6, 0x17, 0x32, 0x4e, 0x03, 0x4f, 0x4e, 0x53, 0x66, 0x1d, 0x76, 0xca,
	0xdd, 0xb2, 0xdb, 0x9e, 0xa9, 0x5c, 0x4e, 0x83, 0xab, 0x69, 0xca, 0xc8, 0x05, 0x1c, 0xe5, 0xcf,
	0x83, 0x48, 0xe1, 0xf9, 0x3c, 0x11, 0x51, 0xc0, 0x32, 0x16, 0x58, 0x0f, 0xd1, 0xcd, 0xc3, 0x1c,
	0xa0, 0x2e, 0x88, 0xcb, 0x99, 0x5a, 0xe5, 0x95, 0x66, 0x91, 0x1f, 0x25, 0xa1, 0x65, 0xe9, 0xbc,
	0xcc, 0x91, 0xbc, 0x07, 0x40, 0xa5, 0xcc, 0xa2, 0xe1, 0x44, 0x32, 0x61, 0x1d, 0xa1, 0x99, 0x82,
	0x84, 0x74, 0xa0, 0x16, 0x30, 0xe1, 0x67, 0x51, 0x8a, 0x2f, 0x67, 0x1b, 0xee, 0x98, 0x8b, 0xc8,
	0xe7, 0x70, 0x94, 0xb0, 0x28, 0x7c, 0x39, 0xe4, 0xd9, 0x4b, 0xce, 0x55, 0xee, 0x59, 0xc6, 0x62,
	0x53, 0xc6, 0x63, 0x34, 0x68, 0x15, 0x01, 0x97, 0x05, 0xbd, 0xfd, 0xb7, 0x12, 0xdc, 0x37, 0xf3,
	0x4b, 0x8e, 0x61, 0x6f, 0x34, 0x89, 0x63, 0xaf, 0x40, 0x60, 0x55, 0x25, 0xc0, 0xe7, 0x3d, 0x80,
	0x8a, 0x8c, 0x64, 0x9c, 0xb3, 0x97, 0x3e, 0xcc, 0xa9, 0xa8, 0x5c, 0xa4, 0xa2, 0x65, 0x7e, 0xb9,
	0xb7, 0xca, 0x2f, 0x16, 0xdc, 0xd7, 0xe3, 0x22, 0xac, 0x0a, 0x86, 0x98, 0x1f, 0xed, 0x57, 0x70,
	0xbc, 0x65, 0x94, 0x15, 0x5d, 0x5f, 0xb3, 0xa9, 0x09, 0x4f, 0x7d, 0x92, 0x9f, 0x40, 0xe5, 0x86,
	0xc6, 0x13, 0x1d, 0x59, 0xed, 0xfc, 0xf1, 0x9a, 0xb9, 0x2d, 0x9a, 0x71, 0x35, 0xfa, 0x62, 0xe7,
	0xa7, 0x25, 0xfb, 0x1a, 0x6a, 0xc5, 0x71, 0x3d, 0x81, 0xc6, 0xbc, 0x23, 0xc2, 0x98, 0x1a, 0x2f,
	0xf5, 0x99, 0xf0, 0x79, 0x4c, 0xd5, 0x0e, 0x88, 0x92, 0x38, 0x4a, 0x98, 0x59, 0x19, 0xe6, 0xa4,
	0x1a, 0x54, 0x48, 0x9a, 0x04, 0x1e, 0x8d, 0x79, 0x92, 0x6f, 0x0e, 0x40, 0xd1, 0x53, 0x25, 0xb1,
	0x5f, 0xc1, 0xe1, 0x7a, 0xe6, 0x58, 0x93, 0xd3, 0xc5, 0x62, 0x4e, 0x1f, 0x6c, 0xe4, 0xa2, 0x82,
	0xad, 0x42, 0x62, 0xce, 0x3f, 0x4b, 0x50, 0xbe, 0xa2, 0xe1, 0x9b, 0xae, 0xa3, 0x02, 0x47, 0x95,
	0x17, 0x39, 0x4a, 0x0d, 0x4d, 0x3c, 0xc9, 0x68, 0xec, 0x2d, 0xd8, 0xd0, 0x15, 0x6e, 0x6b, 0xd5,
	0x97, 0x05, 0x4b, 0x8f, 0xa1, 0x16, 0x09, 0xcf, 0xa7, 0x92, 0x85, 0x3c, 0x9b, 0xe2, 0x42, 0xaa,
	0xba, 0x10, 0x89, 0x4b, 0x23, 0x59, 0x9e, 0xeb, 0xdd, 0xe5, 0xb9, 0x76, 0x3e, 0x84, 0xe6, 0x73,
	0x26, 0x31, 0x5b, 0x97, 0xfd, 0x61, 0xc2, 0x84, 0x5c, 0x97, 0x95, 0xf3, 0x43, 0x78, 0x98, 0xc3,
	0x4c, 0xb5, 0xc5, 0x36, 0xf8, 0xc7, 0x70, 0x90, 0xc3, 0xc5, 0x17, 0x93, 0xf8, 0x3a, 0xc7, 0xe2,
	0xe6, 0x1a, 0x33, 0x61, 0x95, 0xb0, 0x2b, 0xf5, 0xc1, 0xf9, 0x5f, 0x09, 0xf6, 0x07, 0x8c, 0x66,
	0xfe, 0x4b, 0x7d, 0x23, 0x47, 0x2f, 0x3f, 0x65, 0x69, 0xf5, 0x29, 0xf3, 0x15, 0xb0, 0x53, 0x58,
	0x01, 0x2b, 0x7d, 0x56, 0xee, 0x94, 0xbb, 0x95, 0xa5, 0x3e, 0x3b, 0x81, 0x06, 0x32, 0x95, 0x3f,
	0xc5, 0xe5, 0x24, 0xac, 0x7b, 0x68, 0xa1, 0x6e, 0x84, 0xaa, 0xf0, 0x82, 0x7c, 0x02, 0x07, 0x66,
	0x6e, 0x16, 0x09, 0x59, 0xcf, 0x94, 0x59, 0x6e, 0x0b, 0x8c, 0xbc, 0x78, 0x63, 0x4e, 0xc9, 0xbb,
	0x4b, 0x37, 0x66, 0x9c, 0xec, 0xbc, 0x80, 0xf6, 0x57, 0x91, 0x90, 0x8b, 0x99, 0x1f, 0xc3, 0x5e,
	0x4a, 0x43, 0xe6, 0x89, 0xe8, 0x5b, 0x9d, 0x76, 0xc5, 0xad, 0x2a, 0xc1, 0x20, 0xfa, 0x96, 0x91,
	0x77, 0x01, 0x50, 0x29, 0xf9, 0x35, 0x4b, 0x4c, 0x7f, 0x21, 0xfc, 0x4a, 0x09, 0x9c, 0x04, 0x48,
	0xd1, 0xa0, 0x48, 0x79, 0x22, 0x18, 0xf9, 0x04, 0x76, 0x87, 0x28, 0xc1, 0xa7, 0xaf, 0x9d, 0x5b,
	0x9b, 0x7a, 0xde, 0x35, 0x38, 0x72, 0x0a, 0xcd, 0x84, 0xdd, 0x4a, 0x6f, 0xc5, 0x57, 0x43, 0x89,
	0xbf, 0x99, 0xf9, 0x7b, 0x0a, 0xcd, 0xc1, 0x52, 0x07, 0xf5, 0xa0, 0x82, 0x46, 0x30, 0xf4, 0x6d,
	0xbe, 0x34, 0xcc, 0xe9, 0x02, 0xf9, 0x92, 0xc5, 0x4c, 0xb2, 0x3b, 0xfb, 0xf0, 0x04, 0x1a, 0xcf,
	0x99, 0xbc, 0xa2, 0xe1, 0x36, 0xd0, 0x67, 0xd0, 0x18, 0x2c, 0x80, 0xba, 0x50, 0x96, 0x34, 0x34,
	0xd1, 0x1c, 0xae, 0x89, 0x46, 0x61, 0x15, 0xc4, 0xf9, 0x35, 0x34, 0xd5, 0xe3, 0x5d, 0xd1, 0xf0,
	0xad, 0xd4, 0x62, 0x04, 0xad, 0xb9, 0x39, 0x53, 0x89, 0x33, 0xd3, 0xb2, 0xba, 0x0e, 0x9b, 0xa2,
	0xd1, 0xad, 0xfc, 0xba, 0x35, 0x38, 0x85, 0x96, 0x7e, 0xc0, 0x3b, 0x5e, 0xe6, 0x5f, 0x25, 0xb0,
	0x56, 0xe7, 0xd8, 0x04, 0xf6, 0x1b, 0xa8, 0x9a, 0x1f, 0x72, 0x79, 0x70, 0x9f, 0xad, 0x09, 0x6e,
	0xd3, 0xf5, 0x7c, 0x0b, 0x98, 0x9f, 0x6b, 0x33, 0x53, 0xf6, 0x6f, 0xa1, 0xb1, 0xa0, 0x7a, 0xab,
	0x3b, 0xc6, 0xf9, 0x15, 0x3c, 0x58, 0x62, 0x9a, 0x37, 0x6d, 0x78, 0xe7, 0x97, 0x70, 0xb0, 0xc8,
	0x42, 0x6f, 0x6a, 0xe9, 0xfc, 0xbf, 0x7b, 0x50, 0x7d, 0x61, 0xb4, 0x84, 0x41, 0x35, 0x8f, 0x90,
	0x38, 0x5b, 0x1e, 0xd4, 0xd4, 0xcd, 0xde, 0x68, 0xde, 0x39, 0xfe, 0xcb, 0xbf, 0xff, 0xf3, 0x8f,
	0x9d, 0x07, 0x64, 0x5f, 0xfd, 0xf1, 0xfb, 0x93, 0x2a, 0xe8, 0xcf, 0xb5, 0xc3, 0xfe, 0xd9, 0x77,
	0xe4, 0xef, 0x25, 0x68, 0x2d, 0xd7, 0x86, 0x9c, 0xbd, 0x56, 0x01, 0xb5, 0xdf, 0x8f, 0xbe, 0x47,
	0xb1, 0x9d, 0x0f, 0x30, 0x94, 0xf7, 0xc8, 0x23, 0x15, 0x4a, 0x5e, 0xea, 0x95, 0x98, 0xfe, 0x8c,
	0xd3, 0x3a, 0x2f, 0x0e, 0x79, 0xb2, 0xc5, 0x47, 0x71, 0x51, 0xd8, 0xdd, 0xbb, 0x81, 0x26, 0x12,
	0x1b, 0x23, 0x39, 0x70, 0x9a, 0x2a, 0x12, 0xe3, 0x7a, 0x38, 0x89, 0xaf, 0x2f, 0x4a, 0x67, 0x64,
	0x0c, 0x30, 0xa7, 0x42, 0xb2, 0x6e, 0xcd, 0xaf, 0x50, 0xaf, 0xfd, 0xe1, 0x1d, 0x28, 0xe3, 0x96,
	0xa0, 0xdb, 0x3a, 0x81, 0xb9, 0x5b, 0xf2, 0x1d, 0xd4, 0x8b, 0x0d, 0x44, 0x4e, 0xd7, 0x98, 0x5a,
	0xb3, 0xe7, 0xec, 0x27, 0x77, 0xe2, 0x8c, 0xd3, 0x47, 0xe8, 0xf4, 0xd0, 0x69, 0x17, 0x72, 0x15,
	0x08, 0x54, 0xd9, 0xde, 0x40, 0x75, 0xb0, 0xad, 0xd1, 0x06, 0xaf, 0xdd, 0x68, 0x1f, 0xa3, 0x9f,
	0x53, 0xe7, 0x5d, 0x6c, 0x34, 0x74, 0xd4, 0x5b, 0x2c, 0xed, 0x85, 0x60, 0xf2, 0x42, 0xb3, 0x37,
	0x89, 0xa0, 0x56, 0x60, 0x6f, 0xb2, 0xee, 0x01, 0x57, 0xd9, 0xdd, 0x3e, 0x5c, 0xf9, 0xf3, 0xf4,
	0x6c, 0x9c, 0xca, 0x69, 0xde, 0xe4, 0x67, 0x6b, 0x9b, 0xfc, 0x77, 0xb0, 0xab, 0xe9, 0x9f, 0x74,
	0xd6, 0x37, 0xc8, 0x9c, 0xff, 0xec, 0x0d, 0xcc, 0xea, 0x1c, 0xa1, 0x83, 0x7d, 0xd2, 0x9e, 0x3b,
	0x50, 0x5c, 0xab, 0xcc, 0x33, 0xa8, 0xe6, 0x74, 0xbd, 0xf6, 0x05, 0x97, 0x56, 0x83, 0x7d, 0xb2,
	0x15, 0x63, 0x8a, 0xd6, 0x42, 0x7f, 0x40, 0xaa, 0xca, 0x1f, 0xb2, 0xfa, 0x2b, 0xd8, 0x1d, 0x6c,
	0xce, 0x62, 0xf0, 0x5a, 0x59, 0x9c, 0xa2, 0xd5, 0x8e, 0x73, 0x84, 0x59, 0x48, 0x1a, 0xf6, 0x8a,
	0x99, 0x60, 0x79, 0xd4, 0x42, 0x23, 0x3e, 0xec, 0xcd, 0x36, 0x03, 0x39, 0xd9, 0x58, 0x9a, 0x05,
	0x8f, 0xeb, 0x0b, 0x63, 0xde, 0xed, 0x6c, 0xf5, 0xdd, 0x86, 0xbb, 0x08, 0xfd, 0xd1, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x23, 0x69, 0xfb, 0xb5, 0xa0, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OntologyClient is the client API for Ontology service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OntologyClient interface {
	// Gets a brand.
	GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Gets features for a brand.
	GetBrandFeatures(ctx context.Context, in *GetBrandFeaturesRequest, opts ...grpc.CallOption) (*GetBrandFeaturesResponse, error)
	// Gets a number of brands.
	GetBrandsBulk(ctx context.Context, in *GetBrandsBulkRequest, opts ...grpc.CallOption) (*GetBrandsBulkResponse, error)
	// Lists brands.
	ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error)
	// Searches brands.
	SearchBrands(ctx context.Context, in *SearchBrandsRequest, opts ...grpc.CallOption) (*SearchBrandsResponse, error)
	// Sets a brand.
	SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a tag.
	GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Lists tags.
	ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error)
	// Sets a tag.
	SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Deletes a tag.
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type ontologyClient struct {
	cc *grpc.ClientConn
}

func NewOntologyClient(cc *grpc.ClientConn) OntologyClient {
	return &ontologyClient{cc}
}

func (c *ontologyClient) GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) GetBrandFeatures(ctx context.Context, in *GetBrandFeaturesRequest, opts ...grpc.CallOption) (*GetBrandFeaturesResponse, error) {
	out := new(GetBrandFeaturesResponse)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/GetBrandFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) GetBrandsBulk(ctx context.Context, in *GetBrandsBulkRequest, opts ...grpc.CallOption) (*GetBrandsBulkResponse, error) {
	out := new(GetBrandsBulkResponse)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/GetBrandsBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error) {
	out := new(ListBrandsResponse)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/ListBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) SearchBrands(ctx context.Context, in *SearchBrandsRequest, opts ...grpc.CallOption) (*SearchBrandsResponse, error) {
	out := new(SearchBrandsResponse)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/SearchBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/SetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error) {
	out := new(ListTagsResponse)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ontologyClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.ontology.v1.Ontology/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OntologyServer is the server API for Ontology service.
type OntologyServer interface {
	// Gets a brand.
	GetBrand(context.Context, *GetBrandRequest) (*Brand, error)
	// Gets features for a brand.
	GetBrandFeatures(context.Context, *GetBrandFeaturesRequest) (*GetBrandFeaturesResponse, error)
	// Gets a number of brands.
	GetBrandsBulk(context.Context, *GetBrandsBulkRequest) (*GetBrandsBulkResponse, error)
	// Lists brands.
	ListBrands(context.Context, *ListBrandsRequest) (*ListBrandsResponse, error)
	// Searches brands.
	SearchBrands(context.Context, *SearchBrandsRequest) (*SearchBrandsResponse, error)
	// Sets a brand.
	SetBrand(context.Context, *SetBrandRequest) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(context.Context, *DeleteBrandRequest) (*empty.Empty, error)
	// Gets a tag.
	GetTag(context.Context, *GetTagRequest) (*Tag, error)
	// Lists tags.
	ListTags(context.Context, *ListTagsRequest) (*ListTagsResponse, error)
	// Sets a tag.
	SetTag(context.Context, *SetTagRequest) (*Tag, error)
	// Deletes a tag.
	DeleteTag(context.Context, *DeleteTagRequest) (*empty.Empty, error)
}

// UnimplementedOntologyServer can be embedded to have forward compatible implementations.
type UnimplementedOntologyServer struct {
}

func (*UnimplementedOntologyServer) GetBrand(ctx context.Context, req *GetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedOntologyServer) GetBrandFeatures(ctx context.Context, req *GetBrandFeaturesRequest) (*GetBrandFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandFeatures not implemented")
}
func (*UnimplementedOntologyServer) GetBrandsBulk(ctx context.Context, req *GetBrandsBulkRequest) (*GetBrandsBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandsBulk not implemented")
}
func (*UnimplementedOntologyServer) ListBrands(ctx context.Context, req *ListBrandsRequest) (*ListBrandsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBrands not implemented")
}
func (*UnimplementedOntologyServer) SearchBrands(ctx context.Context, req *SearchBrandsRequest) (*SearchBrandsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchBrands not implemented")
}
func (*UnimplementedOntologyServer) SetBrand(ctx context.Context, req *SetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBrand not implemented")
}
func (*UnimplementedOntologyServer) DeleteBrand(ctx context.Context, req *DeleteBrandRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrand not implemented")
}
func (*UnimplementedOntologyServer) GetTag(ctx context.Context, req *GetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}
func (*UnimplementedOntologyServer) ListTags(ctx context.Context, req *ListTagsRequest) (*ListTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedOntologyServer) SetTag(ctx context.Context, req *SetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedOntologyServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}

func RegisterOntologyServer(s *grpc.Server, srv OntologyServer) {
	s.RegisterService(&_Ontology_serviceDesc, srv)
}

func _Ontology_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).GetBrand(ctx, req.(*GetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_GetBrandFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).GetBrandFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/GetBrandFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).GetBrandFeatures(ctx, req.(*GetBrandFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_GetBrandsBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandsBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).GetBrandsBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/GetBrandsBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).GetBrandsBulk(ctx, req.(*GetBrandsBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_ListBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBrandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).ListBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/ListBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).ListBrands(ctx, req.(*ListBrandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_SearchBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchBrandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).SearchBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/SearchBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).SearchBrands(ctx, req.(*SearchBrandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_SetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).SetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/SetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).SetBrand(ctx, req.(*SetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).DeleteBrand(ctx, req.(*DeleteBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).GetTag(ctx, req.(*GetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).ListTags(ctx, req.(*ListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).SetTag(ctx, req.(*SetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ontology_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OntologyServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.ontology.v1.Ontology/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OntologyServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ontology_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.ontology.v1.Ontology",
	HandlerType: (*OntologyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrand",
			Handler:    _Ontology_GetBrand_Handler,
		},
		{
			MethodName: "GetBrandFeatures",
			Handler:    _Ontology_GetBrandFeatures_Handler,
		},
		{
			MethodName: "GetBrandsBulk",
			Handler:    _Ontology_GetBrandsBulk_Handler,
		},
		{
			MethodName: "ListBrands",
			Handler:    _Ontology_ListBrands_Handler,
		},
		{
			MethodName: "SearchBrands",
			Handler:    _Ontology_SearchBrands_Handler,
		},
		{
			MethodName: "SetBrand",
			Handler:    _Ontology_SetBrand_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _Ontology_DeleteBrand_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _Ontology_GetTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _Ontology_ListTags_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _Ontology_SetTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _Ontology_DeleteTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topos/ontology/v1/ontology.proto",
}
