// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/points/v1/points.proto

package points

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PolygonSearchPointsRequest_PolygonEncoding int32

const (
	PolygonSearchPointsRequest_S2      PolygonSearchPointsRequest_PolygonEncoding = 0
	PolygonSearchPointsRequest_GEOJSON PolygonSearchPointsRequest_PolygonEncoding = 1
)

var PolygonSearchPointsRequest_PolygonEncoding_name = map[int32]string{
	0: "S2",
	1: "GEOJSON",
}

var PolygonSearchPointsRequest_PolygonEncoding_value = map[string]int32{
	"S2":      0,
	"GEOJSON": 1,
}

func (x PolygonSearchPointsRequest_PolygonEncoding) String() string {
	return proto.EnumName(PolygonSearchPointsRequest_PolygonEncoding_name, int32(x))
}

func (PolygonSearchPointsRequest_PolygonEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{19, 0}
}

type PolygonCountBrandPointsRequest_PolygonEncoding int32

const (
	PolygonCountBrandPointsRequest_S2      PolygonCountBrandPointsRequest_PolygonEncoding = 0
	PolygonCountBrandPointsRequest_GEOJSON PolygonCountBrandPointsRequest_PolygonEncoding = 1
)

var PolygonCountBrandPointsRequest_PolygonEncoding_name = map[int32]string{
	0: "S2",
	1: "GEOJSON",
}

var PolygonCountBrandPointsRequest_PolygonEncoding_value = map[string]int32{
	"S2":      0,
	"GEOJSON": 1,
}

func (x PolygonCountBrandPointsRequest_PolygonEncoding) String() string {
	return proto.EnumName(PolygonCountBrandPointsRequest_PolygonEncoding_name, int32(x))
}

func (PolygonCountBrandPointsRequest_PolygonEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{36, 0}
}

type PolygonCountTagPointsRequest_PolygonEncoding int32

const (
	PolygonCountTagPointsRequest_S2      PolygonCountTagPointsRequest_PolygonEncoding = 0
	PolygonCountTagPointsRequest_GEOJSON PolygonCountTagPointsRequest_PolygonEncoding = 1
)

var PolygonCountTagPointsRequest_PolygonEncoding_name = map[int32]string{
	0: "S2",
	1: "GEOJSON",
}

var PolygonCountTagPointsRequest_PolygonEncoding_value = map[string]int32{
	"S2":      0,
	"GEOJSON": 1,
}

func (x PolygonCountTagPointsRequest_PolygonEncoding) String() string {
	return proto.EnumName(PolygonCountTagPointsRequest_PolygonEncoding_name, int32(x))
}

func (PolygonCountTagPointsRequest_PolygonEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{40, 0}
}

type FeatureStats struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float64  `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Average              float64  `protobuf:"fixed64,3,opt,name=average,proto3" json:"average,omitempty"`
	Median               float64  `protobuf:"fixed64,4,opt,name=median,proto3" json:"median,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureStats) Reset()         { *m = FeatureStats{} }
func (m *FeatureStats) String() string { return proto.CompactTextString(m) }
func (*FeatureStats) ProtoMessage()    {}
func (*FeatureStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{0}
}

func (m *FeatureStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats.Unmarshal(m, b)
}
func (m *FeatureStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats.Marshal(b, m, deterministic)
}
func (m *FeatureStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats.Merge(m, src)
}
func (m *FeatureStats) XXX_Size() int {
	return xxx_messageInfo_FeatureStats.Size(m)
}
func (m *FeatureStats) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats proto.InternalMessageInfo

func (m *FeatureStats) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *FeatureStats) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *FeatureStats) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *FeatureStats) GetMedian() float64 {
	if m != nil {
		return m.Median
	}
	return 0
}

type Brand struct {
	// The name of the point brand. It must have the format `"brands/{brand}"`.
	// `{brand}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the brand.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address of the brand's headquarters.
	FormattedAddress string `protobuf:"bytes,3,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The email of the brand.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// The realestate email of the brand.
	RealestateEmail string `protobuf:"bytes,5,opt,name=realestate_email,json=realestateEmail,proto3" json:"realestate_email,omitempty"`
	// The phone number of the brand.
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The contacts for the brand.
	Contacts []*Brand_Contact `protobuf:"bytes,7,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// The [2017 NAICS
	// code](https://www.census.gov/cgi-bin/sssd/naics/naicsrch?chart=2017) of the
	// brand.
	Naics string `protobuf:"bytes,8,opt,name=naics,proto3" json:"naics,omitempty"`
	// The postal code of the brand's headquarters.
	PostalCode string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// The feature set statistics for this brand's locations.
	FeatureSetFeatureStats map[string]*FeatureStats `protobuf:"bytes,10,rep,name=feature_set_feature_stats,json=featureSetFeatureStats,proto3" json:"feature_set_feature_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The brand's location preferences by region.
	RegionPreferences map[string]*Brand_Preferences `protobuf:"bytes,11,rep,name=region_preferences,json=regionPreferences,proto3" json:"region_preferences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A list of brand tags.
	Tags []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	// Exclude the brand from results.
	Exclude bool `protobuf:"varint,13,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The creation timestamp of the brand.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TotalLocations       int64                `protobuf:"varint,16,opt,name=total_locations,json=totalLocations,proto3" json:"total_locations,omitempty"`
	StatesOfExpansion    []string             `protobuf:"bytes,17,rep,name=states_of_expansion,json=statesOfExpansion,proto3" json:"states_of_expansion,omitempty"`
	StatesOfOperation    []string             `protobuf:"bytes,18,rep,name=states_of_operation,json=statesOfOperation,proto3" json:"states_of_operation,omitempty"`
	Website              string               `protobuf:"bytes,19,opt,name=website,proto3" json:"website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Brand) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Brand) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Brand) GetRealestateEmail() string {
	if m != nil {
		return m.RealestateEmail
	}
	return ""
}

func (m *Brand) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Brand) GetContacts() []*Brand_Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Brand) GetNaics() string {
	if m != nil {
		return m.Naics
	}
	return ""
}

func (m *Brand) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Brand) GetFeatureSetFeatureStats() map[string]*FeatureStats {
	if m != nil {
		return m.FeatureSetFeatureStats
	}
	return nil
}

func (m *Brand) GetRegionPreferences() map[string]*Brand_Preferences {
	if m != nil {
		return m.RegionPreferences
	}
	return nil
}

func (m *Brand) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Brand) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Brand) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Brand) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Brand) GetTotalLocations() int64 {
	if m != nil {
		return m.TotalLocations
	}
	return 0
}

func (m *Brand) GetStatesOfExpansion() []string {
	if m != nil {
		return m.StatesOfExpansion
	}
	return nil
}

func (m *Brand) GetStatesOfOperation() []string {
	if m != nil {
		return m.StatesOfOperation
	}
	return nil
}

func (m *Brand) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

type Brand_Contact struct {
	// The full name of the contact.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The title of the contact.
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Contact) Reset()         { *m = Brand_Contact{} }
func (m *Brand_Contact) String() string { return proto.CompactTextString(m) }
func (*Brand_Contact) ProtoMessage()    {}
func (*Brand_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1, 0}
}

func (m *Brand_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Contact.Unmarshal(m, b)
}
func (m *Brand_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Contact.Marshal(b, m, deterministic)
}
func (m *Brand_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Contact.Merge(m, src)
}
func (m *Brand_Contact) XXX_Size() int {
	return xxx_messageInfo_Brand_Contact.Size(m)
}
func (m *Brand_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Contact proto.InternalMessageInfo

func (m *Brand_Contact) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Brand_Contact) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Brand_Preferences struct {
	// The prefered square footage of the brand.
	PreferredGla string `protobuf:"bytes,1,opt,name=preferred_gla,json=preferredGla,proto3" json:"preferred_gla,omitempty"`
	// The percentage of locations where this brand shares a building.
	Inline float64 `protobuf:"fixed64,2,opt,name=inline,proto3" json:"inline,omitempty"`
	// The percentage of locations where this brand occupies a stand-alone
	// building.
	StandAlone           float64  `protobuf:"fixed64,3,opt,name=stand_alone,json=standAlone,proto3" json:"stand_alone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Preferences) Reset()         { *m = Brand_Preferences{} }
func (m *Brand_Preferences) String() string { return proto.CompactTextString(m) }
func (*Brand_Preferences) ProtoMessage()    {}
func (*Brand_Preferences) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1, 2}
}

func (m *Brand_Preferences) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Preferences.Unmarshal(m, b)
}
func (m *Brand_Preferences) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Preferences.Marshal(b, m, deterministic)
}
func (m *Brand_Preferences) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Preferences.Merge(m, src)
}
func (m *Brand_Preferences) XXX_Size() int {
	return xxx_messageInfo_Brand_Preferences.Size(m)
}
func (m *Brand_Preferences) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Preferences.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Preferences proto.InternalMessageInfo

func (m *Brand_Preferences) GetPreferredGla() string {
	if m != nil {
		return m.PreferredGla
	}
	return ""
}

func (m *Brand_Preferences) GetInline() float64 {
	if m != nil {
		return m.Inline
	}
	return 0
}

func (m *Brand_Preferences) GetStandAlone() float64 {
	if m != nil {
		return m.StandAlone
	}
	return 0
}

type LatLng struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}
func (*LatLng) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{2}
}

func (m *LatLng) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLng.Unmarshal(m, b)
}
func (m *LatLng) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLng.Marshal(b, m, deterministic)
}
func (m *LatLng) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLng.Merge(m, src)
}
func (m *LatLng) XXX_Size() int {
	return xxx_messageInfo_LatLng.Size(m)
}
func (m *LatLng) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLng.DiscardUnknown(m)
}

var xxx_messageInfo_LatLng proto.InternalMessageInfo

func (m *LatLng) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LatLng) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Point struct {
	// The name of the point. It must have the format `"points/{point}"`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the point's brand if it has one.
	Brand string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	// The display name of the point.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address.
	FormattedAddress string `protobuf:"bytes,4,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The geocoded point address.
	Location *LatLng `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// A list of point tags.
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// The creation timestamp of the point.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an point.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{3}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Point) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Point) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Point) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Point) GetLocation() *LatLng {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Point) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Point) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Point) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Tag struct {
	// The name of the tag. It must have the format `"tags/{tag}"`. `{tag}`
	// must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the tag.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Exclude tag from results.
	Exclude bool `protobuf:"varint,3,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The creation timestamp of the tag.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of the tag.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{4}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Tag) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Tag) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type PointSource struct {
	// The name of the point source. It must have the format
	// `"sources/{source}/pointSources/{point_source}"`. `{source}` must match
	// the [regular expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`. {point_source} is the remote point source ID.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the point associated with this point source if there is one.
	Point string `protobuf:"bytes,2,opt,name=point,proto3" json:"point,omitempty"`
	// The display name of the point source.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address.
	FormattedAddress string `protobuf:"bytes,4,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The source-geocoded address.
	Location *LatLng `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// A list of potentially unnormalized, source-provided tags.
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// The creation timestamp of the point source.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an point source.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PointSource) Reset()         { *m = PointSource{} }
func (m *PointSource) String() string { return proto.CompactTextString(m) }
func (*PointSource) ProtoMessage()    {}
func (*PointSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{5}
}

func (m *PointSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointSource.Unmarshal(m, b)
}
func (m *PointSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointSource.Marshal(b, m, deterministic)
}
func (m *PointSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointSource.Merge(m, src)
}
func (m *PointSource) XXX_Size() int {
	return xxx_messageInfo_PointSource.Size(m)
}
func (m *PointSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PointSource.DiscardUnknown(m)
}

var xxx_messageInfo_PointSource proto.InternalMessageInfo

func (m *PointSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PointSource) GetPoint() string {
	if m != nil {
		return m.Point
	}
	return ""
}

func (m *PointSource) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PointSource) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *PointSource) GetLocation() *LatLng {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PointSource) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PointSource) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *PointSource) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Region struct {
	// The name of the region. It must have the format
	// `"regionTypes/{region_type}/regions/{region}"`.
	// `{region}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The WKB-encoded region geometry.
	Geometry             []byte   `protobuf:"bytes,2,opt,name=geometry,proto3" json:"geometry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{6}
}

func (m *Region) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Region.Unmarshal(m, b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Region.Marshal(b, m, deterministic)
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return xxx_messageInfo_Region.Size(m)
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Region) GetGeometry() []byte {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type BrandRegionScoreSetScore struct {
	// The name of the brand region score set. It must have the format
	// `"brandRegionScoreSets/{brand_region_score_set}"`.
	// `{brand_region_score_set}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	BrandRegionScoreSet string `protobuf:"bytes,1,opt,name=brand_region_score_set,json=brandRegionScoreSet,proto3" json:"brand_region_score_set,omitempty"`
	// The score's brand.
	Brand string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	// The brand's display name.
	BrandDisplayName string `protobuf:"bytes,3,opt,name=brand_display_name,json=brandDisplayName,proto3" json:"brand_display_name,omitempty"`
	// The score's region.
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// The score value associated with the brand and region.
	Score float64 `protobuf:"fixed64,5,opt,name=score,proto3" json:"score,omitempty"`
	// The prefered square footage of the brand.
	PreferredGla string `protobuf:"bytes,6,opt,name=preferred_gla,json=preferredGla,proto3" json:"preferred_gla,omitempty"`
	// The creation timestamp of the brand region score.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand region score.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BrandRegionScoreSetScore) Reset()         { *m = BrandRegionScoreSetScore{} }
func (m *BrandRegionScoreSetScore) String() string { return proto.CompactTextString(m) }
func (*BrandRegionScoreSetScore) ProtoMessage()    {}
func (*BrandRegionScoreSetScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{7}
}

func (m *BrandRegionScoreSetScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandRegionScoreSetScore.Unmarshal(m, b)
}
func (m *BrandRegionScoreSetScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandRegionScoreSetScore.Marshal(b, m, deterministic)
}
func (m *BrandRegionScoreSetScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandRegionScoreSetScore.Merge(m, src)
}
func (m *BrandRegionScoreSetScore) XXX_Size() int {
	return xxx_messageInfo_BrandRegionScoreSetScore.Size(m)
}
func (m *BrandRegionScoreSetScore) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandRegionScoreSetScore.DiscardUnknown(m)
}

var xxx_messageInfo_BrandRegionScoreSetScore proto.InternalMessageInfo

func (m *BrandRegionScoreSetScore) GetBrandRegionScoreSet() string {
	if m != nil {
		return m.BrandRegionScoreSet
	}
	return ""
}

func (m *BrandRegionScoreSetScore) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *BrandRegionScoreSetScore) GetBrandDisplayName() string {
	if m != nil {
		return m.BrandDisplayName
	}
	return ""
}

func (m *BrandRegionScoreSetScore) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BrandRegionScoreSetScore) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *BrandRegionScoreSetScore) GetPreferredGla() string {
	if m != nil {
		return m.PreferredGla
	}
	return ""
}

func (m *BrandRegionScoreSetScore) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *BrandRegionScoreSetScore) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type TagRegionScoreSetScore struct {
	// The name of the tag region score set. It must have the format
	// `"tagRegionScoreSets/{brand_region_score_set}"`.
	// `{brand_region_score_set}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	TagRegionScoreSet string `protobuf:"bytes,1,opt,name=tag_region_score_set,json=tagRegionScoreSet,proto3" json:"tag_region_score_set,omitempty"`
	// The score's tag.
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// The tag's display name.
	TagDisplayName string `protobuf:"bytes,3,opt,name=tag_display_name,json=tagDisplayName,proto3" json:"tag_display_name,omitempty"`
	// The score's region.
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// The score value associated with the tag and region.
	Score float64 `protobuf:"fixed64,5,opt,name=score,proto3" json:"score,omitempty"`
	// The creation timestamp of the brand region score.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand region score.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TagRegionScoreSetScore) Reset()         { *m = TagRegionScoreSetScore{} }
func (m *TagRegionScoreSetScore) String() string { return proto.CompactTextString(m) }
func (*TagRegionScoreSetScore) ProtoMessage()    {}
func (*TagRegionScoreSetScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{8}
}

func (m *TagRegionScoreSetScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRegionScoreSetScore.Unmarshal(m, b)
}
func (m *TagRegionScoreSetScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRegionScoreSetScore.Marshal(b, m, deterministic)
}
func (m *TagRegionScoreSetScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRegionScoreSetScore.Merge(m, src)
}
func (m *TagRegionScoreSetScore) XXX_Size() int {
	return xxx_messageInfo_TagRegionScoreSetScore.Size(m)
}
func (m *TagRegionScoreSetScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRegionScoreSetScore.DiscardUnknown(m)
}

var xxx_messageInfo_TagRegionScoreSetScore proto.InternalMessageInfo

func (m *TagRegionScoreSetScore) GetTagRegionScoreSet() string {
	if m != nil {
		return m.TagRegionScoreSet
	}
	return ""
}

func (m *TagRegionScoreSetScore) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TagRegionScoreSetScore) GetTagDisplayName() string {
	if m != nil {
		return m.TagDisplayName
	}
	return ""
}

func (m *TagRegionScoreSetScore) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *TagRegionScoreSetScore) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *TagRegionScoreSetScore) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TagRegionScoreSetScore) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type RegionGraphEdge struct {
	// The name of the region graph. It must have the format
	// `"regionGraphs/{region_graph}"`. `{region_graph}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`.
	RegionGraph string `protobuf:"bytes,1,opt,name=region_graph,json=regionGraph,proto3" json:"region_graph,omitempty"`
	// A region ID representing the origin edge vertices.
	FromRegion string `protobuf:"bytes,2,opt,name=from_region,json=fromRegion,proto3" json:"from_region,omitempty"`
	// A region ID representint the other edge vertices.
	ToRegion string `protobuf:"bytes,3,opt,name=to_region,json=toRegion,proto3" json:"to_region,omitempty"`
	// The weight of the edge.
	Weight float64 `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"`
	// The creation timestamp of the region graph edge.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an region graph edge.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RegionGraphEdge) Reset()         { *m = RegionGraphEdge{} }
func (m *RegionGraphEdge) String() string { return proto.CompactTextString(m) }
func (*RegionGraphEdge) ProtoMessage()    {}
func (*RegionGraphEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{9}
}

func (m *RegionGraphEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionGraphEdge.Unmarshal(m, b)
}
func (m *RegionGraphEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionGraphEdge.Marshal(b, m, deterministic)
}
func (m *RegionGraphEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionGraphEdge.Merge(m, src)
}
func (m *RegionGraphEdge) XXX_Size() int {
	return xxx_messageInfo_RegionGraphEdge.Size(m)
}
func (m *RegionGraphEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionGraphEdge.DiscardUnknown(m)
}

var xxx_messageInfo_RegionGraphEdge proto.InternalMessageInfo

func (m *RegionGraphEdge) GetRegionGraph() string {
	if m != nil {
		return m.RegionGraph
	}
	return ""
}

func (m *RegionGraphEdge) GetFromRegion() string {
	if m != nil {
		return m.FromRegion
	}
	return ""
}

func (m *RegionGraphEdge) GetToRegion() string {
	if m != nil {
		return m.ToRegion
	}
	return ""
}

func (m *RegionGraphEdge) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *RegionGraphEdge) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RegionGraphEdge) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Feedback struct {
	Feedback             map[string]string `protobuf:"bytes,1,rep,name=feedback,proto3" json:"feedback,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Feedback) Reset()         { *m = Feedback{} }
func (m *Feedback) String() string { return proto.CompactTextString(m) }
func (*Feedback) ProtoMessage()    {}
func (*Feedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{10}
}

func (m *Feedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feedback.Unmarshal(m, b)
}
func (m *Feedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feedback.Marshal(b, m, deterministic)
}
func (m *Feedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feedback.Merge(m, src)
}
func (m *Feedback) XXX_Size() int {
	return xxx_messageInfo_Feedback.Size(m)
}
func (m *Feedback) XXX_DiscardUnknown() {
	xxx_messageInfo_Feedback.DiscardUnknown(m)
}

var xxx_messageInfo_Feedback proto.InternalMessageInfo

func (m *Feedback) GetFeedback() map[string]string {
	if m != nil {
		return m.Feedback
	}
	return nil
}

type GetBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandRequest) Reset()         { *m = GetBrandRequest{} }
func (m *GetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandRequest) ProtoMessage()    {}
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{11}
}

func (m *GetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandRequest.Unmarshal(m, b)
}
func (m *GetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandRequest.Merge(m, src)
}
func (m *GetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandRequest.Size(m)
}
func (m *GetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandRequest proto.InternalMessageInfo

func (m *GetBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetBrandRequest struct {
	Brand                *Brand   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBrandRequest) Reset()         { *m = SetBrandRequest{} }
func (m *SetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*SetBrandRequest) ProtoMessage()    {}
func (*SetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{12}
}

func (m *SetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBrandRequest.Unmarshal(m, b)
}
func (m *SetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBrandRequest.Marshal(b, m, deterministic)
}
func (m *SetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBrandRequest.Merge(m, src)
}
func (m *SetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_SetBrandRequest.Size(m)
}
func (m *SetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBrandRequest proto.InternalMessageInfo

func (m *SetBrandRequest) GetBrand() *Brand {
	if m != nil {
		return m.Brand
	}
	return nil
}

type ListBrandsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsRequest) Reset()         { *m = ListBrandsRequest{} }
func (m *ListBrandsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBrandsRequest) ProtoMessage()    {}
func (*ListBrandsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{13}
}

func (m *ListBrandsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsRequest.Unmarshal(m, b)
}
func (m *ListBrandsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsRequest.Marshal(b, m, deterministic)
}
func (m *ListBrandsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsRequest.Merge(m, src)
}
func (m *ListBrandsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBrandsRequest.Size(m)
}
func (m *ListBrandsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsRequest proto.InternalMessageInfo

func (m *ListBrandsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBrandsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListBrand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrand) Reset()         { *m = ListBrand{} }
func (m *ListBrand) String() string { return proto.CompactTextString(m) }
func (*ListBrand) ProtoMessage()    {}
func (*ListBrand) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{14}
}

func (m *ListBrand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrand.Unmarshal(m, b)
}
func (m *ListBrand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrand.Marshal(b, m, deterministic)
}
func (m *ListBrand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrand.Merge(m, src)
}
func (m *ListBrand) XXX_Size() int {
	return xxx_messageInfo_ListBrand.Size(m)
}
func (m *ListBrand) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrand.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrand proto.InternalMessageInfo

func (m *ListBrand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListBrand) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type ListBrandsResponse struct {
	Brands []*ListBrand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsResponse) Reset()         { *m = ListBrandsResponse{} }
func (m *ListBrandsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBrandsResponse) ProtoMessage()    {}
func (*ListBrandsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{15}
}

func (m *ListBrandsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsResponse.Unmarshal(m, b)
}
func (m *ListBrandsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsResponse.Marshal(b, m, deterministic)
}
func (m *ListBrandsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsResponse.Merge(m, src)
}
func (m *ListBrandsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBrandsResponse.Size(m)
}
func (m *ListBrandsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsResponse proto.InternalMessageInfo

func (m *ListBrandsResponse) GetBrands() []*ListBrand {
	if m != nil {
		return m.Brands
	}
	return nil
}

func (m *ListBrandsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeleteBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBrandRequest) Reset()         { *m = DeleteBrandRequest{} }
func (m *DeleteBrandRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBrandRequest) ProtoMessage()    {}
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{16}
}

func (m *DeleteBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBrandRequest.Unmarshal(m, b)
}
func (m *DeleteBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBrandRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBrandRequest.Merge(m, src)
}
func (m *DeleteBrandRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBrandRequest.Size(m)
}
func (m *DeleteBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBrandRequest proto.InternalMessageInfo

func (m *DeleteBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SearchPointsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return points with a given brand.
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return points within a region.
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// Return points with a tag.
	Tag                  string   `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPointsRequest) Reset()         { *m = SearchPointsRequest{} }
func (m *SearchPointsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPointsRequest) ProtoMessage()    {}
func (*SearchPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{17}
}

func (m *SearchPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPointsRequest.Unmarshal(m, b)
}
func (m *SearchPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPointsRequest.Marshal(b, m, deterministic)
}
func (m *SearchPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPointsRequest.Merge(m, src)
}
func (m *SearchPointsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPointsRequest.Size(m)
}
func (m *SearchPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPointsRequest proto.InternalMessageInfo

func (m *SearchPointsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchPointsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchPointsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *SearchPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SearchPointsRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type SearchPointsResponse struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPointsResponse) Reset()         { *m = SearchPointsResponse{} }
func (m *SearchPointsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchPointsResponse) ProtoMessage()    {}
func (*SearchPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{18}
}

func (m *SearchPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPointsResponse.Unmarshal(m, b)
}
func (m *SearchPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPointsResponse.Marshal(b, m, deterministic)
}
func (m *SearchPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPointsResponse.Merge(m, src)
}
func (m *SearchPointsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchPointsResponse.Size(m)
}
func (m *SearchPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPointsResponse proto.InternalMessageInfo

func (m *SearchPointsResponse) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *SearchPointsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type PolygonSearchPointsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return points with a given brand.
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return points with the given tags.
	Tags            []string                                   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	PolygonEncoding PolygonSearchPointsRequest_PolygonEncoding `protobuf:"varint,5,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonSearchPointsRequest_PolygonEncoding" json:"polygon_encoding,omitempty"`
	// The total number of bytes of the encoded S2 polygon.
	PolygonLength int64 `protobuf:"varint,14,opt,name=polygon_length,json=polygonLength,proto3" json:"polygon_length,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonSearchPointsRequest) Reset()         { *m = PolygonSearchPointsRequest{} }
func (m *PolygonSearchPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonSearchPointsRequest) ProtoMessage()    {}
func (*PolygonSearchPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{19}
}

func (m *PolygonSearchPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonSearchPointsRequest.Unmarshal(m, b)
}
func (m *PolygonSearchPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonSearchPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonSearchPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonSearchPointsRequest.Merge(m, src)
}
func (m *PolygonSearchPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonSearchPointsRequest.Size(m)
}
func (m *PolygonSearchPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonSearchPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonSearchPointsRequest proto.InternalMessageInfo

func (m *PolygonSearchPointsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PolygonSearchPointsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *PolygonSearchPointsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PolygonSearchPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PolygonSearchPointsRequest) GetPolygonEncoding() PolygonSearchPointsRequest_PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonSearchPointsRequest_S2
}

func (m *PolygonSearchPointsRequest) GetPolygonLength() int64 {
	if m != nil {
		return m.PolygonLength
	}
	return 0
}

func (m *PolygonSearchPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonSearchPointsResponse struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonSearchPointsResponse) Reset()         { *m = PolygonSearchPointsResponse{} }
func (m *PolygonSearchPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonSearchPointsResponse) ProtoMessage()    {}
func (*PolygonSearchPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{20}
}

func (m *PolygonSearchPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonSearchPointsResponse.Unmarshal(m, b)
}
func (m *PolygonSearchPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonSearchPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonSearchPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonSearchPointsResponse.Merge(m, src)
}
func (m *PolygonSearchPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonSearchPointsResponse.Size(m)
}
func (m *PolygonSearchPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonSearchPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonSearchPointsResponse proto.InternalMessageInfo

func (m *PolygonSearchPointsResponse) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *PolygonSearchPointsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetPointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPointRequest) Reset()         { *m = GetPointRequest{} }
func (m *GetPointRequest) String() string { return proto.CompactTextString(m) }
func (*GetPointRequest) ProtoMessage()    {}
func (*GetPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{21}
}

func (m *GetPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPointRequest.Unmarshal(m, b)
}
func (m *GetPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPointRequest.Marshal(b, m, deterministic)
}
func (m *GetPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPointRequest.Merge(m, src)
}
func (m *GetPointRequest) XXX_Size() int {
	return xxx_messageInfo_GetPointRequest.Size(m)
}
func (m *GetPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPointRequest proto.InternalMessageInfo

func (m *GetPointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdatePointRequest struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePointRequest) Reset()         { *m = UpdatePointRequest{} }
func (m *UpdatePointRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePointRequest) ProtoMessage()    {}
func (*UpdatePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{22}
}

func (m *UpdatePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePointRequest.Unmarshal(m, b)
}
func (m *UpdatePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePointRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePointRequest.Merge(m, src)
}
func (m *UpdatePointRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePointRequest.Size(m)
}
func (m *UpdatePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePointRequest proto.InternalMessageInfo

func (m *UpdatePointRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type DeletePointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePointRequest) Reset()         { *m = DeletePointRequest{} }
func (m *DeletePointRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePointRequest) ProtoMessage()    {}
func (*DeletePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{23}
}

func (m *DeletePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePointRequest.Unmarshal(m, b)
}
func (m *DeletePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePointRequest.Marshal(b, m, deterministic)
}
func (m *DeletePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePointRequest.Merge(m, src)
}
func (m *DeletePointRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePointRequest.Size(m)
}
func (m *DeletePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePointRequest proto.InternalMessageInfo

func (m *DeletePointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagRequest) Reset()         { *m = GetTagRequest{} }
func (m *GetTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest) ProtoMessage()    {}
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{24}
}

func (m *GetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest.Unmarshal(m, b)
}
func (m *GetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest.Marshal(b, m, deterministic)
}
func (m *GetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest.Merge(m, src)
}
func (m *GetTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest.Size(m)
}
func (m *GetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest proto.InternalMessageInfo

func (m *GetTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetTagRequest struct {
	Tag                  *Tag     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTagRequest) Reset()         { *m = SetTagRequest{} }
func (m *SetTagRequest) String() string { return proto.CompactTextString(m) }
func (*SetTagRequest) ProtoMessage()    {}
func (*SetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{25}
}

func (m *SetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRequest.Unmarshal(m, b)
}
func (m *SetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRequest.Marshal(b, m, deterministic)
}
func (m *SetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRequest.Merge(m, src)
}
func (m *SetTagRequest) XXX_Size() int {
	return xxx_messageInfo_SetTagRequest.Size(m)
}
func (m *SetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRequest proto.InternalMessageInfo

func (m *SetTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type ListTagsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsRequest) Reset()         { *m = ListTagsRequest{} }
func (m *ListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest) ProtoMessage()    {}
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{26}
}

func (m *ListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest.Unmarshal(m, b)
}
func (m *ListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest.Merge(m, src)
}
func (m *ListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest.Size(m)
}
func (m *ListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest proto.InternalMessageInfo

func (m *ListTagsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTagsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListTagsResponse struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsResponse) Reset()         { *m = ListTagsResponse{} }
func (m *ListTagsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTagsResponse) ProtoMessage()    {}
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{27}
}

func (m *ListTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsResponse.Unmarshal(m, b)
}
func (m *ListTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsResponse.Marshal(b, m, deterministic)
}
func (m *ListTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsResponse.Merge(m, src)
}
func (m *ListTagsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTagsResponse.Size(m)
}
func (m *ListTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsResponse proto.InternalMessageInfo

func (m *ListTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListTagsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeleteTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{28}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPointSourceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPointSourceRequest) Reset()         { *m = GetPointSourceRequest{} }
func (m *GetPointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPointSourceRequest) ProtoMessage()    {}
func (*GetPointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{29}
}

func (m *GetPointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPointSourceRequest.Unmarshal(m, b)
}
func (m *GetPointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPointSourceRequest.Marshal(b, m, deterministic)
}
func (m *GetPointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPointSourceRequest.Merge(m, src)
}
func (m *GetPointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_GetPointSourceRequest.Size(m)
}
func (m *GetPointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPointSourceRequest proto.InternalMessageInfo

func (m *GetPointSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetPointSourceRequest struct {
	PointSource          *PointSource `protobuf:"bytes,1,opt,name=point_source,json=pointSource,proto3" json:"point_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetPointSourceRequest) Reset()         { *m = SetPointSourceRequest{} }
func (m *SetPointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*SetPointSourceRequest) ProtoMessage()    {}
func (*SetPointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{30}
}

func (m *SetPointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPointSourceRequest.Unmarshal(m, b)
}
func (m *SetPointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPointSourceRequest.Marshal(b, m, deterministic)
}
func (m *SetPointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPointSourceRequest.Merge(m, src)
}
func (m *SetPointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_SetPointSourceRequest.Size(m)
}
func (m *SetPointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPointSourceRequest proto.InternalMessageInfo

func (m *SetPointSourceRequest) GetPointSource() *PointSource {
	if m != nil {
		return m.PointSource
	}
	return nil
}

type CreatePointWithPointSourcesRequest struct {
	Point                *Point         `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	PointSources         []*PointSource `protobuf:"bytes,2,rep,name=point_sources,json=pointSources,proto3" json:"point_sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreatePointWithPointSourcesRequest) Reset()         { *m = CreatePointWithPointSourcesRequest{} }
func (m *CreatePointWithPointSourcesRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePointWithPointSourcesRequest) ProtoMessage()    {}
func (*CreatePointWithPointSourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{31}
}

func (m *CreatePointWithPointSourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePointWithPointSourcesRequest.Unmarshal(m, b)
}
func (m *CreatePointWithPointSourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePointWithPointSourcesRequest.Marshal(b, m, deterministic)
}
func (m *CreatePointWithPointSourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePointWithPointSourcesRequest.Merge(m, src)
}
func (m *CreatePointWithPointSourcesRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePointWithPointSourcesRequest.Size(m)
}
func (m *CreatePointWithPointSourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePointWithPointSourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePointWithPointSourcesRequest proto.InternalMessageInfo

func (m *CreatePointWithPointSourcesRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

func (m *CreatePointWithPointSourcesRequest) GetPointSources() []*PointSource {
	if m != nil {
		return m.PointSources
	}
	return nil
}

type CreatePointWithPointSourcesResponse struct {
	Point                *Point         `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	PointSources         []*PointSource `protobuf:"bytes,2,rep,name=point_sources,json=pointSources,proto3" json:"point_sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreatePointWithPointSourcesResponse) Reset()         { *m = CreatePointWithPointSourcesResponse{} }
func (m *CreatePointWithPointSourcesResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePointWithPointSourcesResponse) ProtoMessage()    {}
func (*CreatePointWithPointSourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{32}
}

func (m *CreatePointWithPointSourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePointWithPointSourcesResponse.Unmarshal(m, b)
}
func (m *CreatePointWithPointSourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePointWithPointSourcesResponse.Marshal(b, m, deterministic)
}
func (m *CreatePointWithPointSourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePointWithPointSourcesResponse.Merge(m, src)
}
func (m *CreatePointWithPointSourcesResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePointWithPointSourcesResponse.Size(m)
}
func (m *CreatePointWithPointSourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePointWithPointSourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePointWithPointSourcesResponse proto.InternalMessageInfo

func (m *CreatePointWithPointSourcesResponse) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

func (m *CreatePointWithPointSourcesResponse) GetPointSources() []*PointSource {
	if m != nil {
		return m.PointSources
	}
	return nil
}

type DeletePointSourceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePointSourceRequest) Reset()         { *m = DeletePointSourceRequest{} }
func (m *DeletePointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePointSourceRequest) ProtoMessage()    {}
func (*DeletePointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{33}
}

func (m *DeletePointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePointSourceRequest.Unmarshal(m, b)
}
func (m *DeletePointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePointSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeletePointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePointSourceRequest.Merge(m, src)
}
func (m *DeletePointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePointSourceRequest.Size(m)
}
func (m *DeletePointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePointSourceRequest proto.InternalMessageInfo

func (m *DeletePointSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CountBrandPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given brands.
	Brands               []string `protobuf:"bytes,2,rep,name=brands,proto3" json:"brands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountBrandPointsRequest) Reset()         { *m = CountBrandPointsRequest{} }
func (m *CountBrandPointsRequest) String() string { return proto.CompactTextString(m) }
func (*CountBrandPointsRequest) ProtoMessage()    {}
func (*CountBrandPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{34}
}

func (m *CountBrandPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountBrandPointsRequest.Unmarshal(m, b)
}
func (m *CountBrandPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountBrandPointsRequest.Marshal(b, m, deterministic)
}
func (m *CountBrandPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountBrandPointsRequest.Merge(m, src)
}
func (m *CountBrandPointsRequest) XXX_Size() int {
	return xxx_messageInfo_CountBrandPointsRequest.Size(m)
}
func (m *CountBrandPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountBrandPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountBrandPointsRequest proto.InternalMessageInfo

func (m *CountBrandPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CountBrandPointsRequest) GetBrands() []string {
	if m != nil {
		return m.Brands
	}
	return nil
}

type CountBrandPointsResponse struct {
	// Map of brand IDs to point counts.
	BrandPoints          map[string]int64 `protobuf:"bytes,1,rep,name=brand_points,json=brandPoints,proto3" json:"brand_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountBrandPointsResponse) Reset()         { *m = CountBrandPointsResponse{} }
func (m *CountBrandPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CountBrandPointsResponse) ProtoMessage()    {}
func (*CountBrandPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{35}
}

func (m *CountBrandPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountBrandPointsResponse.Unmarshal(m, b)
}
func (m *CountBrandPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountBrandPointsResponse.Marshal(b, m, deterministic)
}
func (m *CountBrandPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountBrandPointsResponse.Merge(m, src)
}
func (m *CountBrandPointsResponse) XXX_Size() int {
	return xxx_messageInfo_CountBrandPointsResponse.Size(m)
}
func (m *CountBrandPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountBrandPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountBrandPointsResponse proto.InternalMessageInfo

func (m *CountBrandPointsResponse) GetBrandPoints() map[string]int64 {
	if m != nil {
		return m.BrandPoints
	}
	return nil
}

type PolygonCountBrandPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given brands.
	Brands          []string                                       `protobuf:"bytes,2,rep,name=brands,proto3" json:"brands,omitempty"`
	PolygonEncoding PolygonCountBrandPointsRequest_PolygonEncoding `protobuf:"varint,3,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonCountBrandPointsRequest_PolygonEncoding" json:"polygon_encoding,omitempty"`
	// The total number of bytes of the encoded S2 polygon.
	PolygonLength int64 `protobuf:"varint,14,opt,name=polygon_length,json=polygonLength,proto3" json:"polygon_length,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonCountBrandPointsRequest) Reset()         { *m = PolygonCountBrandPointsRequest{} }
func (m *PolygonCountBrandPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonCountBrandPointsRequest) ProtoMessage()    {}
func (*PolygonCountBrandPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{36}
}

func (m *PolygonCountBrandPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Unmarshal(m, b)
}
func (m *PolygonCountBrandPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonCountBrandPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountBrandPointsRequest.Merge(m, src)
}
func (m *PolygonCountBrandPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Size(m)
}
func (m *PolygonCountBrandPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountBrandPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountBrandPointsRequest proto.InternalMessageInfo

func (m *PolygonCountBrandPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PolygonCountBrandPointsRequest) GetBrands() []string {
	if m != nil {
		return m.Brands
	}
	return nil
}

func (m *PolygonCountBrandPointsRequest) GetPolygonEncoding() PolygonCountBrandPointsRequest_PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonCountBrandPointsRequest_S2
}

func (m *PolygonCountBrandPointsRequest) GetPolygonLength() int64 {
	if m != nil {
		return m.PolygonLength
	}
	return 0
}

func (m *PolygonCountBrandPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonCountBrandPointsResponse struct {
	// Map of brand IDs to point counts.
	BrandPoints          map[string]int64 `protobuf:"bytes,1,rep,name=brand_points,json=brandPoints,proto3" json:"brand_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PolygonCountBrandPointsResponse) Reset()         { *m = PolygonCountBrandPointsResponse{} }
func (m *PolygonCountBrandPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonCountBrandPointsResponse) ProtoMessage()    {}
func (*PolygonCountBrandPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{37}
}

func (m *PolygonCountBrandPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Unmarshal(m, b)
}
func (m *PolygonCountBrandPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonCountBrandPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountBrandPointsResponse.Merge(m, src)
}
func (m *PolygonCountBrandPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Size(m)
}
func (m *PolygonCountBrandPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountBrandPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountBrandPointsResponse proto.InternalMessageInfo

func (m *PolygonCountBrandPointsResponse) GetBrandPoints() map[string]int64 {
	if m != nil {
		return m.BrandPoints
	}
	return nil
}

type CountTagPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given tag.
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTagPointsRequest) Reset()         { *m = CountTagPointsRequest{} }
func (m *CountTagPointsRequest) String() string { return proto.CompactTextString(m) }
func (*CountTagPointsRequest) ProtoMessage()    {}
func (*CountTagPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{38}
}

func (m *CountTagPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTagPointsRequest.Unmarshal(m, b)
}
func (m *CountTagPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTagPointsRequest.Marshal(b, m, deterministic)
}
func (m *CountTagPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTagPointsRequest.Merge(m, src)
}
func (m *CountTagPointsRequest) XXX_Size() int {
	return xxx_messageInfo_CountTagPointsRequest.Size(m)
}
func (m *CountTagPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTagPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountTagPointsRequest proto.InternalMessageInfo

func (m *CountTagPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CountTagPointsRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type CountTagPointsResponse struct {
	// Map of tag IDs to point counts.
	TagPoints            map[string]int64 `protobuf:"bytes,1,rep,name=tag_points,json=tagPoints,proto3" json:"tag_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountTagPointsResponse) Reset()         { *m = CountTagPointsResponse{} }
func (m *CountTagPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CountTagPointsResponse) ProtoMessage()    {}
func (*CountTagPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{39}
}

func (m *CountTagPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTagPointsResponse.Unmarshal(m, b)
}
func (m *CountTagPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTagPointsResponse.Marshal(b, m, deterministic)
}
func (m *CountTagPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTagPointsResponse.Merge(m, src)
}
func (m *CountTagPointsResponse) XXX_Size() int {
	return xxx_messageInfo_CountTagPointsResponse.Size(m)
}
func (m *CountTagPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTagPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountTagPointsResponse proto.InternalMessageInfo

func (m *CountTagPointsResponse) GetTagPoints() map[string]int64 {
	if m != nil {
		return m.TagPoints
	}
	return nil
}

type PolygonCountTagPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given tag.
	Tag             string                                       `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	PolygonEncoding PolygonCountTagPointsRequest_PolygonEncoding `protobuf:"varint,3,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonCountTagPointsRequest_PolygonEncoding" json:"polygon_encoding,omitempty"`
	// The total number of bytes of the encoded S2 polygon.
	PolygonLength int64 `protobuf:"varint,14,opt,name=polygon_length,json=polygonLength,proto3" json:"polygon_length,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonCountTagPointsRequest) Reset()         { *m = PolygonCountTagPointsRequest{} }
func (m *PolygonCountTagPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonCountTagPointsRequest) ProtoMessage()    {}
func (*PolygonCountTagPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{40}
}

func (m *PolygonCountTagPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Unmarshal(m, b)
}
func (m *PolygonCountTagPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonCountTagPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountTagPointsRequest.Merge(m, src)
}
func (m *PolygonCountTagPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Size(m)
}
func (m *PolygonCountTagPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountTagPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountTagPointsRequest proto.InternalMessageInfo

func (m *PolygonCountTagPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PolygonCountTagPointsRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *PolygonCountTagPointsRequest) GetPolygonEncoding() PolygonCountTagPointsRequest_PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonCountTagPointsRequest_S2
}

func (m *PolygonCountTagPointsRequest) GetPolygonLength() int64 {
	if m != nil {
		return m.PolygonLength
	}
	return 0
}

func (m *PolygonCountTagPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonCountTagPointsResponse struct {
	// Map of tag IDs to point counts.
	TagPoints            map[string]int64 `protobuf:"bytes,1,rep,name=tag_points,json=tagPoints,proto3" json:"tag_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PolygonCountTagPointsResponse) Reset()         { *m = PolygonCountTagPointsResponse{} }
func (m *PolygonCountTagPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonCountTagPointsResponse) ProtoMessage()    {}
func (*PolygonCountTagPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{41}
}

func (m *PolygonCountTagPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Unmarshal(m, b)
}
func (m *PolygonCountTagPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonCountTagPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountTagPointsResponse.Merge(m, src)
}
func (m *PolygonCountTagPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Size(m)
}
func (m *PolygonCountTagPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountTagPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountTagPointsResponse proto.InternalMessageInfo

func (m *PolygonCountTagPointsResponse) GetTagPoints() map[string]int64 {
	if m != nil {
		return m.TagPoints
	}
	return nil
}

type SearchRegionsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return regions of the given type.
	RegionType string `protobuf:"bytes,3,opt,name=region_type,json=regionType,proto3" json:"region_type,omitempty"`
	// Return regions that intersect with locations of the given brand.
	Brand                string   `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionsRequest) Reset()         { *m = SearchRegionsRequest{} }
func (m *SearchRegionsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRegionsRequest) ProtoMessage()    {}
func (*SearchRegionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{42}
}

func (m *SearchRegionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionsRequest.Unmarshal(m, b)
}
func (m *SearchRegionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionsRequest.Marshal(b, m, deterministic)
}
func (m *SearchRegionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionsRequest.Merge(m, src)
}
func (m *SearchRegionsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRegionsRequest.Size(m)
}
func (m *SearchRegionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionsRequest proto.InternalMessageInfo

func (m *SearchRegionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRegionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchRegionsRequest) GetRegionType() string {
	if m != nil {
		return m.RegionType
	}
	return ""
}

func (m *SearchRegionsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

type SearchRegionsResponse struct {
	Regions []*Region `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionsResponse) Reset()         { *m = SearchRegionsResponse{} }
func (m *SearchRegionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRegionsResponse) ProtoMessage()    {}
func (*SearchRegionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{43}
}

func (m *SearchRegionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionsResponse.Unmarshal(m, b)
}
func (m *SearchRegionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionsResponse.Marshal(b, m, deterministic)
}
func (m *SearchRegionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionsResponse.Merge(m, src)
}
func (m *SearchRegionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRegionsResponse.Size(m)
}
func (m *SearchRegionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionsResponse proto.InternalMessageInfo

func (m *SearchRegionsResponse) GetRegions() []*Region {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *SearchRegionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetBrandRegionScoreSetScoreRequest struct {
	BrandRegionScoreSetScore *BrandRegionScoreSetScore `protobuf:"bytes,1,opt,name=brand_region_score_set_score,json=brandRegionScoreSetScore,proto3" json:"brand_region_score_set_score,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *SetBrandRegionScoreSetScoreRequest) Reset()         { *m = SetBrandRegionScoreSetScoreRequest{} }
func (m *SetBrandRegionScoreSetScoreRequest) String() string { return proto.CompactTextString(m) }
func (*SetBrandRegionScoreSetScoreRequest) ProtoMessage()    {}
func (*SetBrandRegionScoreSetScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{44}
}

func (m *SetBrandRegionScoreSetScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBrandRegionScoreSetScoreRequest.Unmarshal(m, b)
}
func (m *SetBrandRegionScoreSetScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBrandRegionScoreSetScoreRequest.Marshal(b, m, deterministic)
}
func (m *SetBrandRegionScoreSetScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBrandRegionScoreSetScoreRequest.Merge(m, src)
}
func (m *SetBrandRegionScoreSetScoreRequest) XXX_Size() int {
	return xxx_messageInfo_SetBrandRegionScoreSetScoreRequest.Size(m)
}
func (m *SetBrandRegionScoreSetScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBrandRegionScoreSetScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBrandRegionScoreSetScoreRequest proto.InternalMessageInfo

func (m *SetBrandRegionScoreSetScoreRequest) GetBrandRegionScoreSetScore() *BrandRegionScoreSetScore {
	if m != nil {
		return m.BrandRegionScoreSetScore
	}
	return nil
}

type SearchBrandRegionScoreSetScoresRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return scores from a given score set.
	BrandRegionScoreSet string `protobuf:"bytes,3,opt,name=brand_region_score_set,json=brandRegionScoreSet,proto3" json:"brand_region_score_set,omitempty"`
	// Return scores with a given brand.
	Brand string `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return scores with a given region.
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	// Return scores with for brands with a given tag.
	Tag string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	// Return scores with regions included by the given region.
	IncludedByRegion     string   `protobuf:"bytes,7,opt,name=included_by_region,json=includedByRegion,proto3" json:"included_by_region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchBrandRegionScoreSetScoresRequest) Reset() {
	*m = SearchBrandRegionScoreSetScoresRequest{}
}
func (m *SearchBrandRegionScoreSetScoresRequest) String() string { return proto.CompactTextString(m) }
func (*SearchBrandRegionScoreSetScoresRequest) ProtoMessage()    {}
func (*SearchBrandRegionScoreSetScoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{45}
}

func (m *SearchBrandRegionScoreSetScoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest.Unmarshal(m, b)
}
func (m *SearchBrandRegionScoreSetScoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest.Marshal(b, m, deterministic)
}
func (m *SearchBrandRegionScoreSetScoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest.Merge(m, src)
}
func (m *SearchBrandRegionScoreSetScoresRequest) XXX_Size() int {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest.Size(m)
}
func (m *SearchBrandRegionScoreSetScoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchBrandRegionScoreSetScoresRequest proto.InternalMessageInfo

func (m *SearchBrandRegionScoreSetScoresRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetBrandRegionScoreSet() string {
	if m != nil {
		return m.BrandRegionScoreSet
	}
	return ""
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *SearchBrandRegionScoreSetScoresRequest) GetIncludedByRegion() string {
	if m != nil {
		return m.IncludedByRegion
	}
	return ""
}

type SearchBrandRegionScoreSetScoresResponse struct {
	BrandRegionScoreSetScores []*BrandRegionScoreSetScore `protobuf:"bytes,1,rep,name=brand_region_score_set_scores,json=brandRegionScoreSetScores,proto3" json:"brand_region_score_set_scores,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchBrandRegionScoreSetScoresResponse) Reset() {
	*m = SearchBrandRegionScoreSetScoresResponse{}
}
func (m *SearchBrandRegionScoreSetScoresResponse) String() string { return proto.CompactTextString(m) }
func (*SearchBrandRegionScoreSetScoresResponse) ProtoMessage()    {}
func (*SearchBrandRegionScoreSetScoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{46}
}

func (m *SearchBrandRegionScoreSetScoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse.Unmarshal(m, b)
}
func (m *SearchBrandRegionScoreSetScoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse.Marshal(b, m, deterministic)
}
func (m *SearchBrandRegionScoreSetScoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse.Merge(m, src)
}
func (m *SearchBrandRegionScoreSetScoresResponse) XXX_Size() int {
	return xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse.Size(m)
}
func (m *SearchBrandRegionScoreSetScoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchBrandRegionScoreSetScoresResponse proto.InternalMessageInfo

func (m *SearchBrandRegionScoreSetScoresResponse) GetBrandRegionScoreSetScores() []*BrandRegionScoreSetScore {
	if m != nil {
		return m.BrandRegionScoreSetScores
	}
	return nil
}

func (m *SearchBrandRegionScoreSetScoresResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetTagRegionScoreSetScoreRequest struct {
	TagRegionScoreSetScore *TagRegionScoreSetScore `protobuf:"bytes,1,opt,name=tag_region_score_set_score,json=tagRegionScoreSetScore,proto3" json:"tag_region_score_set_score,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *SetTagRegionScoreSetScoreRequest) Reset()         { *m = SetTagRegionScoreSetScoreRequest{} }
func (m *SetTagRegionScoreSetScoreRequest) String() string { return proto.CompactTextString(m) }
func (*SetTagRegionScoreSetScoreRequest) ProtoMessage()    {}
func (*SetTagRegionScoreSetScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{47}
}

func (m *SetTagRegionScoreSetScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRegionScoreSetScoreRequest.Unmarshal(m, b)
}
func (m *SetTagRegionScoreSetScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRegionScoreSetScoreRequest.Marshal(b, m, deterministic)
}
func (m *SetTagRegionScoreSetScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRegionScoreSetScoreRequest.Merge(m, src)
}
func (m *SetTagRegionScoreSetScoreRequest) XXX_Size() int {
	return xxx_messageInfo_SetTagRegionScoreSetScoreRequest.Size(m)
}
func (m *SetTagRegionScoreSetScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRegionScoreSetScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRegionScoreSetScoreRequest proto.InternalMessageInfo

func (m *SetTagRegionScoreSetScoreRequest) GetTagRegionScoreSetScore() *TagRegionScoreSetScore {
	if m != nil {
		return m.TagRegionScoreSetScore
	}
	return nil
}

type SearchTagRegionScoreSetScoresRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return scores from a given score set.
	TagRegionScoreSet string `protobuf:"bytes,3,opt,name=tag_region_score_set,json=tagRegionScoreSet,proto3" json:"tag_region_score_set,omitempty"`
	// Return scores with a given tag.
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	// Return scores with a given region.
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	// Return scores with regions included by the given region.
	IncludedByRegion     string   `protobuf:"bytes,6,opt,name=included_by_region,json=includedByRegion,proto3" json:"included_by_region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTagRegionScoreSetScoresRequest) Reset()         { *m = SearchTagRegionScoreSetScoresRequest{} }
func (m *SearchTagRegionScoreSetScoresRequest) String() string { return proto.CompactTextString(m) }
func (*SearchTagRegionScoreSetScoresRequest) ProtoMessage()    {}
func (*SearchTagRegionScoreSetScoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{48}
}

func (m *SearchTagRegionScoreSetScoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresRequest.Unmarshal(m, b)
}
func (m *SearchTagRegionScoreSetScoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresRequest.Marshal(b, m, deterministic)
}
func (m *SearchTagRegionScoreSetScoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTagRegionScoreSetScoresRequest.Merge(m, src)
}
func (m *SearchTagRegionScoreSetScoresRequest) XXX_Size() int {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresRequest.Size(m)
}
func (m *SearchTagRegionScoreSetScoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTagRegionScoreSetScoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTagRegionScoreSetScoresRequest proto.InternalMessageInfo

func (m *SearchTagRegionScoreSetScoresRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchTagRegionScoreSetScoresRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchTagRegionScoreSetScoresRequest) GetTagRegionScoreSet() string {
	if m != nil {
		return m.TagRegionScoreSet
	}
	return ""
}

func (m *SearchTagRegionScoreSetScoresRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *SearchTagRegionScoreSetScoresRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SearchTagRegionScoreSetScoresRequest) GetIncludedByRegion() string {
	if m != nil {
		return m.IncludedByRegion
	}
	return ""
}

type SearchTagRegionScoreSetScoresResponse struct {
	TagRegionScoreSetScores []*TagRegionScoreSetScore `protobuf:"bytes,1,rep,name=tag_region_score_set_scores,json=tagRegionScoreSetScores,proto3" json:"tag_region_score_set_scores,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTagRegionScoreSetScoresResponse) Reset()         { *m = SearchTagRegionScoreSetScoresResponse{} }
func (m *SearchTagRegionScoreSetScoresResponse) String() string { return proto.CompactTextString(m) }
func (*SearchTagRegionScoreSetScoresResponse) ProtoMessage()    {}
func (*SearchTagRegionScoreSetScoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{49}
}

func (m *SearchTagRegionScoreSetScoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresResponse.Unmarshal(m, b)
}
func (m *SearchTagRegionScoreSetScoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresResponse.Marshal(b, m, deterministic)
}
func (m *SearchTagRegionScoreSetScoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTagRegionScoreSetScoresResponse.Merge(m, src)
}
func (m *SearchTagRegionScoreSetScoresResponse) XXX_Size() int {
	return xxx_messageInfo_SearchTagRegionScoreSetScoresResponse.Size(m)
}
func (m *SearchTagRegionScoreSetScoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTagRegionScoreSetScoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTagRegionScoreSetScoresResponse proto.InternalMessageInfo

func (m *SearchTagRegionScoreSetScoresResponse) GetTagRegionScoreSetScores() []*TagRegionScoreSetScore {
	if m != nil {
		return m.TagRegionScoreSetScores
	}
	return nil
}

func (m *SearchTagRegionScoreSetScoresResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetRegionGraphEdgeRequest struct {
	RegionGraphEdge      *RegionGraphEdge `protobuf:"bytes,1,opt,name=region_graph_edge,json=regionGraphEdge,proto3" json:"region_graph_edge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetRegionGraphEdgeRequest) Reset()         { *m = SetRegionGraphEdgeRequest{} }
func (m *SetRegionGraphEdgeRequest) String() string { return proto.CompactTextString(m) }
func (*SetRegionGraphEdgeRequest) ProtoMessage()    {}
func (*SetRegionGraphEdgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{50}
}

func (m *SetRegionGraphEdgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRegionGraphEdgeRequest.Unmarshal(m, b)
}
func (m *SetRegionGraphEdgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRegionGraphEdgeRequest.Marshal(b, m, deterministic)
}
func (m *SetRegionGraphEdgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRegionGraphEdgeRequest.Merge(m, src)
}
func (m *SetRegionGraphEdgeRequest) XXX_Size() int {
	return xxx_messageInfo_SetRegionGraphEdgeRequest.Size(m)
}
func (m *SetRegionGraphEdgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRegionGraphEdgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRegionGraphEdgeRequest proto.InternalMessageInfo

func (m *SetRegionGraphEdgeRequest) GetRegionGraphEdge() *RegionGraphEdge {
	if m != nil {
		return m.RegionGraphEdge
	}
	return nil
}

type SearchRegionGraphEdgesRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return edges of the given graph.
	RegionGraph string `protobuf:"bytes,3,opt,name=region_graph,json=regionGraph,proto3" json:"region_graph,omitempty"`
	// Return edges from a given region.
	FromRegion string `protobuf:"bytes,4,opt,name=from_region,json=fromRegion,proto3" json:"from_region,omitempty"`
	// Return edges to a given region.
	ToRegion             string   `protobuf:"bytes,5,opt,name=to_region,json=toRegion,proto3" json:"to_region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionGraphEdgesRequest) Reset()         { *m = SearchRegionGraphEdgesRequest{} }
func (m *SearchRegionGraphEdgesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRegionGraphEdgesRequest) ProtoMessage()    {}
func (*SearchRegionGraphEdgesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{51}
}

func (m *SearchRegionGraphEdgesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionGraphEdgesRequest.Unmarshal(m, b)
}
func (m *SearchRegionGraphEdgesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionGraphEdgesRequest.Marshal(b, m, deterministic)
}
func (m *SearchRegionGraphEdgesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionGraphEdgesRequest.Merge(m, src)
}
func (m *SearchRegionGraphEdgesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRegionGraphEdgesRequest.Size(m)
}
func (m *SearchRegionGraphEdgesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionGraphEdgesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionGraphEdgesRequest proto.InternalMessageInfo

func (m *SearchRegionGraphEdgesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRegionGraphEdgesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchRegionGraphEdgesRequest) GetRegionGraph() string {
	if m != nil {
		return m.RegionGraph
	}
	return ""
}

func (m *SearchRegionGraphEdgesRequest) GetFromRegion() string {
	if m != nil {
		return m.FromRegion
	}
	return ""
}

func (m *SearchRegionGraphEdgesRequest) GetToRegion() string {
	if m != nil {
		return m.ToRegion
	}
	return ""
}

type SearchRegionGraphEdgesResponse struct {
	RegionGraphEdges []*RegionGraphEdge `protobuf:"bytes,1,rep,name=region_graph_edges,json=regionGraphEdges,proto3" json:"region_graph_edges,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionGraphEdgesResponse) Reset()         { *m = SearchRegionGraphEdgesResponse{} }
func (m *SearchRegionGraphEdgesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRegionGraphEdgesResponse) ProtoMessage()    {}
func (*SearchRegionGraphEdgesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{52}
}

func (m *SearchRegionGraphEdgesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionGraphEdgesResponse.Unmarshal(m, b)
}
func (m *SearchRegionGraphEdgesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionGraphEdgesResponse.Marshal(b, m, deterministic)
}
func (m *SearchRegionGraphEdgesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionGraphEdgesResponse.Merge(m, src)
}
func (m *SearchRegionGraphEdgesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRegionGraphEdgesResponse.Size(m)
}
func (m *SearchRegionGraphEdgesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionGraphEdgesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionGraphEdgesResponse proto.InternalMessageInfo

func (m *SearchRegionGraphEdgesResponse) GetRegionGraphEdges() []*RegionGraphEdge {
	if m != nil {
		return m.RegionGraphEdges
	}
	return nil
}

func (m *SearchRegionGraphEdgesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateFeedbackRequest struct {
	Feedback             *Feedback `protobuf:"bytes,1,opt,name=feedback,proto3" json:"feedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateFeedbackRequest) Reset()         { *m = CreateFeedbackRequest{} }
func (m *CreateFeedbackRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFeedbackRequest) ProtoMessage()    {}
func (*CreateFeedbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{53}
}

func (m *CreateFeedbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFeedbackRequest.Unmarshal(m, b)
}
func (m *CreateFeedbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFeedbackRequest.Marshal(b, m, deterministic)
}
func (m *CreateFeedbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFeedbackRequest.Merge(m, src)
}
func (m *CreateFeedbackRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFeedbackRequest.Size(m)
}
func (m *CreateFeedbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFeedbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFeedbackRequest proto.InternalMessageInfo

func (m *CreateFeedbackRequest) GetFeedback() *Feedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

func init() {
	proto.RegisterEnum("topos.points.v1.PolygonSearchPointsRequest_PolygonEncoding", PolygonSearchPointsRequest_PolygonEncoding_name, PolygonSearchPointsRequest_PolygonEncoding_value)
	proto.RegisterEnum("topos.points.v1.PolygonCountBrandPointsRequest_PolygonEncoding", PolygonCountBrandPointsRequest_PolygonEncoding_name, PolygonCountBrandPointsRequest_PolygonEncoding_value)
	proto.RegisterEnum("topos.points.v1.PolygonCountTagPointsRequest_PolygonEncoding", PolygonCountTagPointsRequest_PolygonEncoding_name, PolygonCountTagPointsRequest_PolygonEncoding_value)
	proto.RegisterType((*FeatureStats)(nil), "topos.points.v1.FeatureStats")
	proto.RegisterType((*Brand)(nil), "topos.points.v1.Brand")
	proto.RegisterMapType((map[string]*FeatureStats)(nil), "topos.points.v1.Brand.FeatureSetFeatureStatsEntry")
	proto.RegisterMapType((map[string]*Brand_Preferences)(nil), "topos.points.v1.Brand.RegionPreferencesEntry")
	proto.RegisterType((*Brand_Contact)(nil), "topos.points.v1.Brand.Contact")
	proto.RegisterType((*Brand_Preferences)(nil), "topos.points.v1.Brand.Preferences")
	proto.RegisterType((*LatLng)(nil), "topos.points.v1.LatLng")
	proto.RegisterType((*Point)(nil), "topos.points.v1.Point")
	proto.RegisterType((*Tag)(nil), "topos.points.v1.Tag")
	proto.RegisterType((*PointSource)(nil), "topos.points.v1.PointSource")
	proto.RegisterType((*Region)(nil), "topos.points.v1.Region")
	proto.RegisterType((*BrandRegionScoreSetScore)(nil), "topos.points.v1.BrandRegionScoreSetScore")
	proto.RegisterType((*TagRegionScoreSetScore)(nil), "topos.points.v1.TagRegionScoreSetScore")
	proto.RegisterType((*RegionGraphEdge)(nil), "topos.points.v1.RegionGraphEdge")
	proto.RegisterType((*Feedback)(nil), "topos.points.v1.Feedback")
	proto.RegisterMapType((map[string]string)(nil), "topos.points.v1.Feedback.FeedbackEntry")
	proto.RegisterType((*GetBrandRequest)(nil), "topos.points.v1.GetBrandRequest")
	proto.RegisterType((*SetBrandRequest)(nil), "topos.points.v1.SetBrandRequest")
	proto.RegisterType((*ListBrandsRequest)(nil), "topos.points.v1.ListBrandsRequest")
	proto.RegisterType((*ListBrand)(nil), "topos.points.v1.ListBrand")
	proto.RegisterType((*ListBrandsResponse)(nil), "topos.points.v1.ListBrandsResponse")
	proto.RegisterType((*DeleteBrandRequest)(nil), "topos.points.v1.DeleteBrandRequest")
	proto.RegisterType((*SearchPointsRequest)(nil), "topos.points.v1.SearchPointsRequest")
	proto.RegisterType((*SearchPointsResponse)(nil), "topos.points.v1.SearchPointsResponse")
	proto.RegisterType((*PolygonSearchPointsRequest)(nil), "topos.points.v1.PolygonSearchPointsRequest")
	proto.RegisterType((*PolygonSearchPointsResponse)(nil), "topos.points.v1.PolygonSearchPointsResponse")
	proto.RegisterType((*GetPointRequest)(nil), "topos.points.v1.GetPointRequest")
	proto.RegisterType((*UpdatePointRequest)(nil), "topos.points.v1.UpdatePointRequest")
	proto.RegisterType((*DeletePointRequest)(nil), "topos.points.v1.DeletePointRequest")
	proto.RegisterType((*GetTagRequest)(nil), "topos.points.v1.GetTagRequest")
	proto.RegisterType((*SetTagRequest)(nil), "topos.points.v1.SetTagRequest")
	proto.RegisterType((*ListTagsRequest)(nil), "topos.points.v1.ListTagsRequest")
	proto.RegisterType((*ListTagsResponse)(nil), "topos.points.v1.ListTagsResponse")
	proto.RegisterType((*DeleteTagRequest)(nil), "topos.points.v1.DeleteTagRequest")
	proto.RegisterType((*GetPointSourceRequest)(nil), "topos.points.v1.GetPointSourceRequest")
	proto.RegisterType((*SetPointSourceRequest)(nil), "topos.points.v1.SetPointSourceRequest")
	proto.RegisterType((*CreatePointWithPointSourcesRequest)(nil), "topos.points.v1.CreatePointWithPointSourcesRequest")
	proto.RegisterType((*CreatePointWithPointSourcesResponse)(nil), "topos.points.v1.CreatePointWithPointSourcesResponse")
	proto.RegisterType((*DeletePointSourceRequest)(nil), "topos.points.v1.DeletePointSourceRequest")
	proto.RegisterType((*CountBrandPointsRequest)(nil), "topos.points.v1.CountBrandPointsRequest")
	proto.RegisterType((*CountBrandPointsResponse)(nil), "topos.points.v1.CountBrandPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.CountBrandPointsResponse.BrandPointsEntry")
	proto.RegisterType((*PolygonCountBrandPointsRequest)(nil), "topos.points.v1.PolygonCountBrandPointsRequest")
	proto.RegisterType((*PolygonCountBrandPointsResponse)(nil), "topos.points.v1.PolygonCountBrandPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.PolygonCountBrandPointsResponse.BrandPointsEntry")
	proto.RegisterType((*CountTagPointsRequest)(nil), "topos.points.v1.CountTagPointsRequest")
	proto.RegisterType((*CountTagPointsResponse)(nil), "topos.points.v1.CountTagPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.CountTagPointsResponse.TagPointsEntry")
	proto.RegisterType((*PolygonCountTagPointsRequest)(nil), "topos.points.v1.PolygonCountTagPointsRequest")
	proto.RegisterType((*PolygonCountTagPointsResponse)(nil), "topos.points.v1.PolygonCountTagPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.PolygonCountTagPointsResponse.TagPointsEntry")
	proto.RegisterType((*SearchRegionsRequest)(nil), "topos.points.v1.SearchRegionsRequest")
	proto.RegisterType((*SearchRegionsResponse)(nil), "topos.points.v1.SearchRegionsResponse")
	proto.RegisterType((*SetBrandRegionScoreSetScoreRequest)(nil), "topos.points.v1.SetBrandRegionScoreSetScoreRequest")
	proto.RegisterType((*SearchBrandRegionScoreSetScoresRequest)(nil), "topos.points.v1.SearchBrandRegionScoreSetScoresRequest")
	proto.RegisterType((*SearchBrandRegionScoreSetScoresResponse)(nil), "topos.points.v1.SearchBrandRegionScoreSetScoresResponse")
	proto.RegisterType((*SetTagRegionScoreSetScoreRequest)(nil), "topos.points.v1.SetTagRegionScoreSetScoreRequest")
	proto.RegisterType((*SearchTagRegionScoreSetScoresRequest)(nil), "topos.points.v1.SearchTagRegionScoreSetScoresRequest")
	proto.RegisterType((*SearchTagRegionScoreSetScoresResponse)(nil), "topos.points.v1.SearchTagRegionScoreSetScoresResponse")
	proto.RegisterType((*SetRegionGraphEdgeRequest)(nil), "topos.points.v1.SetRegionGraphEdgeRequest")
	proto.RegisterType((*SearchRegionGraphEdgesRequest)(nil), "topos.points.v1.SearchRegionGraphEdgesRequest")
	proto.RegisterType((*SearchRegionGraphEdgesResponse)(nil), "topos.points.v1.SearchRegionGraphEdgesResponse")
	proto.RegisterType((*CreateFeedbackRequest)(nil), "topos.points.v1.CreateFeedbackRequest")
}

func init() { proto.RegisterFile("topos/points/v1/points.proto", fileDescriptor_58bd33bd76af5b35) }

var fileDescriptor_58bd33bd76af5b35 = []byte{
	// 3061 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0xdf, 0x6f, 0x5b, 0x49,
	0xf5, 0xff, 0x5e, 0x3b, 0x71, 0x9d, 0x63, 0x27, 0x71, 0x26, 0x89, 0x7b, 0x7b, 0x93, 0xb4, 0xe9,
	0x74, 0x9b, 0xa6, 0x69, 0xd7, 0xfe, 0x36, 0xdd, 0x1f, 0xfd, 0xa6, 0xdb, 0xef, 0xaa, 0xe9, 0x66,
	0x0b, 0xab, 0xd0, 0x56, 0x76, 0x56, 0xfc, 0x5a, 0x64, 0xdd, 0xd8, 0x13, 0xc7, 0xd4, 0xb9, 0xd7,
	0xf8, 0x4e, 0xba, 0xcd, 0x96, 0x7d, 0x58, 0x58, 0x69, 0x85, 0x84, 0x84, 0x10, 0x02, 0xad, 0xc4,
	0x03, 0x12, 0x48, 0x3c, 0xb1, 0x12, 0x0f, 0x08, 0x09, 0x81, 0x78, 0x01, 0x09, 0x89, 0x27, 0x24,
	0x5e, 0xe0, 0x05, 0x21, 0xc4, 0x1b, 0x6f, 0xfc, 0x05, 0x68, 0x7e, 0xf9, 0xde, 0xeb, 0x3b, 0x63,
	0x3b, 0x55, 0x76, 0xbb, 0x0f, 0x3c, 0xe5, 0xce, 0x99, 0x33, 0x33, 0x67, 0x3e, 0xe7, 0xcc, 0x39,
	0x33, 0x1f, 0x39, 0xb0, 0x48, 0xfd, 0x8e, 0x1f, 0x94, 0x3b, 0x7e, 0xcb, 0xa3, 0x41, 0xf9, 0xd1,
	0x35, 0xf9, 0x55, 0xea, 0x74, 0x7d, 0xea, 0xa3, 0x69, 0xde, 0x5b, 0x92, 0xb2, 0x47, 0xd7, 0x9c,
	0xc5, 0xa6, 0xef, 0x37, 0xdb, 0xa4, 0xec, 0x76, 0x5a, 0x65, 0xd7, 0xf3, 0x7c, 0xea, 0xd2, 0x96,
	0xef, 0x49, 0x75, 0x67, 0x41, 0xf6, 0xf2, 0xd6, 0xee, 0xe1, 0x5e, 0x99, 0x1c, 0x74, 0xe8, 0x91,
	0xec, 0x3c, 0xd7, 0xdf, 0x49, 0x5b, 0x07, 0x24, 0xa0, 0xee, 0x41, 0x47, 0x28, 0xe0, 0x06, 0xe4,
	0x5f, 0x27, 0x2e, 0x3d, 0xec, 0x92, 0x2a, 0x75, 0x69, 0x80, 0x0a, 0x90, 0x3e, 0x68, 0x79, 0xb6,
	0xb5, 0x6c, 0xad, 0x5a, 0x15, 0xf6, 0xc9, 0x25, 0xee, 0x63, 0x3b, 0x25, 0x25, 0xee, 0x63, 0x64,
	0xc3, 0x29, 0xf7, 0x11, 0xe9, 0xba, 0x4d, 0x62, 0xa7, 0xb9, 0x54, 0x35, 0x51, 0x11, 0x32, 0x07,
	0xa4, 0xd1, 0x72, 0x3d, 0x7b, 0x8c, 0x77, 0xc8, 0x16, 0xfe, 0xeb, 0x04, 0x8c, 0x6f, 0x76, 0x5d,
	0xaf, 0x81, 0x10, 0x8c, 0x79, 0xee, 0x01, 0xe1, 0x0b, 0x4c, 0x54, 0xf8, 0x37, 0x3a, 0x0f, 0xf9,
	0x46, 0x2b, 0xe8, 0xb4, 0xdd, 0xa3, 0x1a, 0xef, 0x4b, 0xf1, 0xbe, 0x9c, 0x94, 0xdd, 0x63, 0x2a,
	0x57, 0x60, 0x66, 0xcf, 0xef, 0x1e, 0xb8, 0x94, 0x92, 0x46, 0xcd, 0x6d, 0x34, 0xba, 0x24, 0x08,
	0xf8, 0xe2, 0x13, 0x95, 0x42, 0xaf, 0xe3, 0xb6, 0x90, 0xa3, 0x39, 0x18, 0x27, 0x07, 0x6e, 0xab,
	0xcd, 0x8d, 0x98, 0xa8, 0x88, 0x06, 0xba, 0x0c, 0x85, 0x2e, 0x71, 0xdb, 0x6c, 0xf7, 0x94, 0xd4,
	0x84, 0xc2, 0x38, 0x57, 0x98, 0x0e, 0xe5, 0x5b, 0x5c, 0xf5, 0x3c, 0xe4, 0x3b, 0xfb, 0xbe, 0x47,
	0x6a, 0xde, 0xe1, 0xc1, 0x2e, 0xe9, 0xda, 0x19, 0x61, 0x10, 0x97, 0xdd, 0xe3, 0x22, 0xb4, 0x01,
	0xd9, 0xba, 0xef, 0x51, 0xb7, 0x4e, 0x03, 0xfb, 0xd4, 0x72, 0x7a, 0x35, 0xb7, 0x7e, 0xb6, 0xd4,
	0xe7, 0xb7, 0x12, 0xdf, 0x71, 0xe9, 0x8e, 0x50, 0xab, 0xf4, 0xf4, 0x99, 0x7d, 0x9e, 0xdb, 0xaa,
	0x07, 0x76, 0x56, 0xd8, 0xc7, 0x1b, 0xe8, 0x1c, 0xe4, 0x3a, 0x7e, 0x40, 0xdd, 0x76, 0xad, 0xee,
	0x37, 0x88, 0x3d, 0xc1, 0xfb, 0x40, 0x88, 0xee, 0xf8, 0x0d, 0x82, 0x0e, 0xe0, 0xcc, 0x9e, 0x70,
	0x55, 0x2d, 0x20, 0xb4, 0xd6, 0xfb, 0x66, 0x7e, 0xb3, 0x81, 0xdb, 0xb0, 0x6e, 0xb0, 0x41, 0xb9,
	0x98, 0xd0, 0xa8, 0xb3, 0xb7, 0x3c, 0xda, 0x3d, 0xaa, 0x14, 0xf7, 0xb4, 0x9d, 0xe8, 0x2d, 0x40,
	0x5d, 0xd2, 0x6c, 0xf9, 0x5e, 0xad, 0xd3, 0x25, 0x7b, 0xa4, 0x4b, 0xbc, 0x3a, 0x09, 0xec, 0x1c,
	0x5f, 0xe7, 0x79, 0xc3, 0x3a, 0x15, 0x3e, 0xe0, 0x41, 0xa8, 0x2f, 0x96, 0x98, 0xe9, 0xf6, 0xcb,
	0x59, 0x1c, 0x50, 0xb7, 0x19, 0xd8, 0xf9, 0xe5, 0x34, 0x8b, 0x03, 0xf6, 0xcd, 0xe2, 0x8a, 0x3c,
	0xae, 0xb7, 0x0f, 0x1b, 0xc4, 0x9e, 0x5c, 0xb6, 0x56, 0xb3, 0x15, 0xd5, 0x44, 0x37, 0x21, 0x57,
	0xef, 0x12, 0xe6, 0x37, 0x16, 0xbf, 0xf6, 0xd4, 0xb2, 0xb5, 0x9a, 0x5b, 0x77, 0x4a, 0x22, 0xb8,
	0x4b, 0x2a, 0xb8, 0x4b, 0x3b, 0x2a, 0xb8, 0x2b, 0x20, 0xd4, 0x99, 0x80, 0x0d, 0x3e, 0xec, 0x34,
	0x7a, 0x83, 0xa7, 0x87, 0x0f, 0x16, 0xea, 0x7c, 0xf0, 0x25, 0x98, 0xa6, 0x3e, 0x73, 0x4a, 0xdb,
	0xaf, 0x8b, 0x63, 0x67, 0x17, 0x96, 0xad, 0xd5, 0x74, 0x65, 0x8a, 0x8b, 0xb7, 0x95, 0x14, 0x95,
	0x60, 0x96, 0x47, 0x50, 0x50, 0xf3, 0xf7, 0x6a, 0xe4, 0x71, 0xc7, 0xf5, 0x82, 0x96, 0xef, 0xd9,
	0x33, 0x7c, 0x7f, 0x33, 0xa2, 0xeb, 0xfe, 0xde, 0x96, 0xea, 0x88, 0xeb, 0xfb, 0x1d, 0xd2, 0xe5,
	0xf3, 0xd8, 0x28, 0xae, 0x7f, 0x5f, 0x75, 0x30, 0x70, 0xde, 0x26, 0xbb, 0x41, 0x8b, 0x12, 0x7b,
	0x96, 0x87, 0x86, 0x6a, 0x3a, 0xaf, 0xc0, 0x29, 0x19, 0x63, 0x68, 0x01, 0x26, 0xf6, 0x0e, 0xdb,
	0xed, 0x5a, 0xe4, 0x88, 0x65, 0x99, 0x80, 0x9f, 0xa1, 0x39, 0x18, 0xa7, 0x2d, 0xda, 0x56, 0xe7,
	0x4b, 0x34, 0x9c, 0x7d, 0x58, 0x18, 0x10, 0x1d, 0xec, 0xf4, 0x3f, 0x24, 0x47, 0x72, 0x2e, 0xf6,
	0x89, 0xae, 0xc3, 0xf8, 0x23, 0xb7, 0x7d, 0x28, 0xa6, 0xc9, 0xad, 0x2f, 0x25, 0x42, 0x21, 0x3a,
	0x49, 0x45, 0xe8, 0x6e, 0xa4, 0x6e, 0x58, 0xce, 0x43, 0xc8, 0x45, 0x23, 0xe0, 0x02, 0x4c, 0x8a,
	0xc0, 0xea, 0x92, 0x46, 0xad, 0xd9, 0x76, 0xe5, 0x1a, 0xf9, 0x9e, 0xf0, 0x6e, 0xdb, 0x65, 0x09,
	0xa5, 0xe5, 0xb5, 0x5b, 0x1e, 0x91, 0xf9, 0x47, 0xb6, 0xd8, 0x61, 0x09, 0xa8, 0xeb, 0x35, 0x6a,
	0x6e, 0xdb, 0xf7, 0x54, 0x1a, 0x02, 0x2e, 0xba, 0xcd, 0x24, 0xce, 0x3e, 0x14, 0xf5, 0xc1, 0xa8,
	0xd9, 0xd1, 0x8d, 0xf8, 0x8e, 0xb0, 0x21, 0xb8, 0x23, 0x33, 0x45, 0xb6, 0x85, 0x37, 0x21, 0xb3,
	0xed, 0xd2, 0x6d, 0xaf, 0x89, 0x1c, 0xc8, 0xb6, 0x5d, 0xda, 0xa2, 0x2c, 0x80, 0x45, 0x02, 0xed,
	0xb5, 0xd1, 0x22, 0x4c, 0xb4, 0x7d, 0xaf, 0x29, 0x3a, 0xc5, 0x5e, 0x42, 0x01, 0xfe, 0x7d, 0x0a,
	0xc6, 0x1f, 0xb0, 0xe5, 0xb4, 0xf9, 0x71, 0x0e, 0xc6, 0x77, 0x99, 0x05, 0xca, 0x71, 0xbc, 0x91,
	0xc8, 0x9a, 0xe9, 0x11, 0xb3, 0xe6, 0x98, 0x21, 0x6b, 0x5e, 0x87, 0xac, 0x8a, 0x71, 0x9e, 0x17,
	0x73, 0xeb, 0xa7, 0x13, 0x40, 0x88, 0x8d, 0x56, 0x7a, 0x8a, 0xbd, 0x63, 0x9c, 0x89, 0x1c, 0xe3,
	0x67, 0x76, 0x58, 0xf1, 0x9f, 0x2c, 0x48, 0xef, 0xb8, 0xcd, 0xa7, 0x2d, 0x32, 0x91, 0xfc, 0x93,
	0xfe, 0x94, 0xe4, 0x1f, 0xfc, 0xc7, 0x14, 0xe4, 0x78, 0x64, 0x54, 0xfd, 0xc3, 0x6e, 0x9d, 0x98,
	0xe2, 0x83, 0xbb, 0x48, 0xc5, 0x07, 0x6f, 0xfc, 0x37, 0x3e, 0x92, 0x60, 0xde, 0x80, 0x8c, 0x48,
	0x0a, 0x5a, 0x18, 0x1d, 0xc8, 0x36, 0x89, 0x7f, 0x40, 0x68, 0xf7, 0x88, 0x23, 0x99, 0xaf, 0xf4,
	0xda, 0xf8, 0xef, 0x29, 0xb0, 0x79, 0x16, 0x10, 0xe3, 0xab, 0x75, 0x9f, 0xe7, 0x4b, 0xfe, 0x17,
	0x5d, 0x87, 0x22, 0x3f, 0x92, 0x35, 0x59, 0x2f, 0x03, 0x26, 0x65, 0x35, 0x5a, 0x4e, 0x3f, 0xbb,
	0x9b, 0x1c, 0x69, 0x38, 0xd4, 0x57, 0x01, 0x89, 0xa9, 0x34, 0xae, 0x2b, 0xf0, 0x9e, 0xd7, 0x22,
	0xfe, 0x2b, 0x42, 0x46, 0x2c, 0x29, 0x9d, 0x26, 0x5b, 0x6c, 0x6e, 0x6e, 0x03, 0xf7, 0x93, 0x55,
	0x11, 0x8d, 0x64, 0xc2, 0xcd, 0x68, 0x12, 0xee, 0xb3, 0x73, 0xce, 0x47, 0x29, 0x28, 0xee, 0xb8,
	0x4d, 0x1d, 0xc0, 0x65, 0x98, 0xa3, 0x6e, 0xd3, 0x04, 0xef, 0x0c, 0xed, 0x1f, 0xc5, 0x72, 0x3c,
	0x75, 0x9b, 0x12, 0x5a, 0xf6, 0x89, 0x56, 0xa1, 0xc0, 0xa6, 0xd0, 0xc0, 0x3a, 0x45, 0xdd, 0xe6,
	0xd3, 0x83, 0xfa, 0xec, 0xf0, 0x7a, 0x3f, 0x05, 0xd3, 0x62, 0xdb, 0x77, 0xbb, 0x6e, 0x67, 0x7f,
	0xab, 0xd1, 0xe4, 0x49, 0x4e, 0x82, 0xd4, 0x64, 0x32, 0x09, 0x50, 0xae, 0x1b, 0xaa, 0xb1, 0xca,
	0xb9, 0xd7, 0xf5, 0x0f, 0x24, 0x98, 0x12, 0x22, 0x60, 0x22, 0x79, 0x34, 0x16, 0x60, 0x82, 0xfa,
	0xaa, 0x5b, 0x40, 0x94, 0xa5, 0xbe, 0xec, 0x2c, 0x42, 0xe6, 0x6d, 0xd2, 0x6a, 0xee, 0x53, 0x75,
	0xc1, 0x17, 0xad, 0x67, 0x08, 0xc3, 0xb7, 0x2d, 0xc8, 0xbe, 0x4e, 0x48, 0x63, 0xd7, 0xad, 0x3f,
	0x44, 0x77, 0x20, 0xbb, 0x27, 0xbf, 0x6d, 0x8b, 0xdf, 0x54, 0x2f, 0x69, 0xae, 0x27, 0x42, 0xa1,
	0xf7, 0x21, 0xee, 0xa8, 0xbd, 0x81, 0xce, 0x4d, 0x98, 0x8c, 0x75, 0x69, 0x6e, 0x0c, 0x73, 0xd1,
	0x1b, 0xc3, 0x44, 0xf4, 0x36, 0x70, 0x11, 0xa6, 0xef, 0x12, 0x2a, 0x53, 0xc5, 0xd7, 0x0e, 0x49,
	0xa0, 0x2d, 0xe9, 0xf8, 0x55, 0x98, 0xae, 0xf6, 0xa9, 0x5d, 0x55, 0x09, 0xc1, 0xe2, 0xfb, 0x2f,
	0xea, 0x6f, 0x21, 0x32, 0x51, 0xe0, 0xfb, 0x30, 0xb3, 0xdd, 0x0a, 0xc4, 0x0c, 0x81, 0x9a, 0x62,
	0x01, 0x26, 0x3a, 0x6e, 0x93, 0xd4, 0x82, 0xd6, 0x3b, 0x62, 0xb9, 0xf1, 0x4a, 0x96, 0x09, 0xaa,
	0xad, 0x77, 0x08, 0x5a, 0x02, 0xe0, 0x9d, 0xd4, 0x7f, 0x48, 0x94, 0xdf, 0xb9, 0xfa, 0x0e, 0x13,
	0xe0, 0x4d, 0x98, 0xe8, 0x4d, 0xf8, 0x94, 0x05, 0x14, 0x77, 0x00, 0x45, 0x8d, 0x0a, 0x3a, 0xbe,
	0x17, 0x10, 0xb4, 0x0e, 0x19, 0x6e, 0x73, 0x20, 0x5d, 0xe2, 0x24, 0xcb, 0x86, 0x1a, 0x54, 0x91,
	0x9a, 0x68, 0x05, 0xa6, 0x3d, 0xf2, 0x98, 0xd6, 0x12, 0x16, 0x4f, 0x32, 0xf1, 0x83, 0x9e, 0xd5,
	0xab, 0x80, 0x5e, 0x23, 0x6d, 0x42, 0xc9, 0x50, 0xc4, 0xbf, 0x6b, 0xc1, 0x6c, 0x95, 0xb8, 0xdd,
	0xfa, 0x3e, 0x2f, 0xa7, 0x27, 0x81, 0x59, 0x98, 0xc3, 0xd3, 0xd1, 0x1c, 0x6e, 0x4a, 0x20, 0x32,
	0x29, 0x8d, 0xf7, 0x92, 0x12, 0xf6, 0x60, 0x2e, 0x6e, 0x92, 0x44, 0xac, 0x04, 0x19, 0x01, 0x8e,
	0x44, 0x2c, 0x19, 0x0b, 0x7c, 0x40, 0x45, 0x6a, 0x8d, 0x8c, 0xd6, 0xdf, 0x52, 0xe0, 0x3c, 0xf0,
	0xdb, 0x47, 0x4d, 0xdf, 0xfb, 0x64, 0xa0, 0x50, 0xe5, 0x7f, 0x2c, 0x52, 0xfe, 0xf7, 0xa0, 0xd0,
	0x11, 0x36, 0xd4, 0x88, 0x57, 0xf7, 0x1b, 0x2d, 0x4f, 0x60, 0x32, 0xb5, 0x7e, 0x53, 0xb3, 0x4d,
	0x93, 0xb1, 0xaa, 0x6b, 0x4b, 0x4e, 0x51, 0x99, 0xee, 0xc4, 0x05, 0xe8, 0x22, 0x4c, 0xa9, 0x75,
	0xda, 0xc4, 0x6b, 0xd2, 0x7d, 0x9e, 0x95, 0xd2, 0x95, 0x49, 0x29, 0xdd, 0xe6, 0x42, 0x5e, 0x15,
	0xa5, 0x5a, 0x7d, 0xff, 0xd0, 0x7b, 0xc8, 0xd3, 0x4f, 0xbe, 0x92, 0x97, 0xc2, 0x3b, 0x4c, 0x86,
	0x57, 0x60, 0xba, 0x6f, 0x3d, 0x94, 0x81, 0x54, 0x75, 0xbd, 0xf0, 0x3f, 0x28, 0x07, 0xa7, 0xee,
	0x6e, 0xdd, 0x7f, 0xa3, 0x7a, 0xff, 0x5e, 0xc1, 0xc2, 0x87, 0xb0, 0xa0, 0x35, 0xf9, 0x63, 0xf6,
	0xab, 0x48, 0x3a, 0x62, 0xec, 0x80, 0x23, 0xb0, 0x09, 0xe8, 0x4d, 0x9e, 0x38, 0x63, 0x9a, 0x57,
	0xd5, 0xed, 0xd1, 0x94, 0x77, 0x84, 0xb6, 0x50, 0x0a, 0x0f, 0xdc, 0xd0, 0xd5, 0x2e, 0xc0, 0xe4,
	0x5d, 0x42, 0x79, 0x45, 0x37, 0x2b, 0xbd, 0x0c, 0x93, 0xd5, 0x98, 0xd2, 0x8a, 0x38, 0x24, 0xc2,
	0x96, 0xb9, 0x84, 0x2d, 0x4c, 0x93, 0x1f, 0x9d, 0xcf, 0xc1, 0x34, 0xcb, 0x1a, 0x3b, 0x6e, 0xf3,
	0x44, 0xb2, 0x5f, 0x03, 0x0a, 0xe1, 0x74, 0xd2, 0x5b, 0xab, 0x32, 0x78, 0x85, 0xaf, 0xf4, 0xb6,
	0x88, 0x90, 0x1e, 0xd5, 0x4f, 0x2b, 0x50, 0x10, 0xe0, 0x0d, 0x41, 0xe5, 0x0a, 0xcc, 0x2b, 0x7f,
	0x8a, 0x6b, 0xff, 0x20, 0xe5, 0x2f, 0xc0, 0x7c, 0x55, 0xab, 0xfc, 0x2a, 0xe4, 0xb9, 0xb1, 0xb5,
	0x80, 0x8b, 0x25, 0xa6, 0x8b, 0x7a, 0xff, 0xca, 0xa1, 0xb9, 0x4e, 0xd8, 0xc0, 0xdf, 0xb7, 0x00,
	0xdf, 0xe1, 0x65, 0x9a, 0xab, 0x7c, 0xbe, 0x45, 0xf7, 0x23, 0xba, 0xc1, 0x53, 0x05, 0x10, 0xba,
	0xcd, 0xce, 0x5b, 0x68, 0x55, 0x60, 0xa7, 0x38, 0xbc, 0x83, 0xcd, 0xca, 0x47, 0xcc, 0x0a, 0xf0,
	0x0f, 0x2c, 0xb8, 0x30, 0xd0, 0x2e, 0xe9, 0xc0, 0x4f, 0xdc, 0xb0, 0x12, 0xd8, 0x91, 0xc3, 0x31,
	0xdc, 0x75, 0x9f, 0x85, 0xd3, 0x77, 0xfc, 0x43, 0x4f, 0xd4, 0xbe, 0x78, 0x2e, 0x0e, 0x8b, 0x88,
	0x15, 0x2b, 0x22, 0xc5, 0x5e, 0x31, 0x4d, 0xf1, 0x9c, 0x2a, 0x5b, 0xf8, 0x57, 0x16, 0xd8, 0xc9,
	0xb9, 0x24, 0x10, 0x5f, 0x81, 0xbc, 0x78, 0x55, 0xc4, 0xb2, 0xcf, 0x46, 0x62, 0x67, 0xa6, 0x09,
	0x4a, 0x11, 0x99, 0xb8, 0x2d, 0xe5, 0x76, 0x43, 0x89, 0xf3, 0xff, 0x50, 0xe8, 0x57, 0x18, 0x76,
	0x67, 0x4a, 0x47, 0xef, 0x4c, 0x3f, 0x4f, 0xc1, 0x59, 0x99, 0x36, 0x4f, 0x08, 0x0e, 0xf4, 0x55,
	0x4d, 0x91, 0x49, 0xf3, 0x22, 0xf3, 0xaa, 0xa9, 0xc8, 0x18, 0x96, 0xfe, 0x74, 0x16, 0x9a, 0x3f,
	0x58, 0x70, 0xce, 0x68, 0xb7, 0xf4, 0x7a, 0x43, 0xeb, 0xf5, 0xdb, 0xa3, 0xef, 0xff, 0x13, 0x71,
	0xfe, 0x6d, 0x98, 0xe7, 0x2b, 0xef, 0xb8, 0xcd, 0xd1, 0x5c, 0x9e, 0x78, 0xdb, 0xe1, 0x8f, 0x2c,
	0x28, 0xf6, 0xcf, 0x21, 0x31, 0x78, 0x13, 0x80, 0x3d, 0xfb, 0x62, 0x08, 0xbc, 0xa4, 0x8f, 0xfb,
	0xc4, 0xe0, 0x52, 0x4f, 0x22, 0xb6, 0x3d, 0x41, 0x55, 0xdb, 0x79, 0x05, 0xa6, 0xe2, 0x9d, 0xc7,
	0xda, 0xf2, 0x4f, 0x53, 0xb0, 0x18, 0x05, 0xfd, 0xe9, 0xb7, 0x8e, 0xf6, 0x8d, 0x71, 0x7e, 0x6b,
	0xa0, 0x9f, 0xfb, 0x97, 0xfc, 0x74, 0x46, 0xf9, 0xaf, 0x2d, 0x58, 0x32, 0x58, 0x2d, 0xfd, 0xfb,
	0x96, 0xc6, 0xbf, 0x23, 0xef, 0xfc, 0x63, 0x76, 0xf3, 0xb7, 0x2c, 0x75, 0xbd, 0x17, 0x8f, 0xe7,
	0x13, 0xb9, 0x67, 0x9f, 0x03, 0xf9, 0x9a, 0xaf, 0xd1, 0xa3, 0x8e, 0xa2, 0x30, 0x40, 0x88, 0x76,
	0x8e, 0x3a, 0x11, 0xb2, 0x78, 0x2c, 0x72, 0x11, 0xc7, 0x5d, 0x76, 0x49, 0x88, 0x99, 0x22, 0x01,
	0xbc, 0x06, 0xa7, 0xc4, 0x60, 0x85, 0x5e, 0x92, 0xd4, 0x13, 0x43, 0x2a, 0x4a, 0x6f, 0xe4, 0xdb,
	0xce, 0x77, 0x2c, 0xc0, 0xe1, 0x23, 0x37, 0xc1, 0xea, 0x28, 0x34, 0x5a, 0xb0, 0xa8, 0x67, 0xcf,
	0xc4, 0x97, 0x2c, 0xde, 0x97, 0x0d, 0xcf, 0x61, 0xcd, 0xbc, 0xf6, 0xae, 0xa1, 0x07, 0x7f, 0x90,
	0x82, 0x15, 0x01, 0x83, 0x69, 0xf0, 0x89, 0xf8, 0xc8, 0xcc, 0x07, 0xa6, 0x47, 0xe0, 0x03, 0xc7,
	0xf4, 0x6f, 0xc9, 0x71, 0x5d, 0x26, 0xc8, 0x84, 0x99, 0xe0, 0x2a, 0xa0, 0x96, 0xc7, 0xd9, 0xea,
	0x46, 0x6d, 0xf7, 0x48, 0xf1, 0x37, 0xa7, 0x04, 0x73, 0xa8, 0x7a, 0x36, 0x8f, 0xc4, 0xaa, 0xf8,
	0xb7, 0x16, 0x5c, 0x1a, 0x8a, 0x84, 0x0c, 0x91, 0x87, 0xb0, 0x34, 0xc8, 0x41, 0x2a, 0x70, 0x8e,
	0xe1, 0xa1, 0x33, 0x26, 0x0f, 0x8d, 0x1e, 0x5c, 0x1f, 0x58, 0xb0, 0xac, 0x5e, 0x0e, 0xc6, 0xd0,
	0xaa, 0x83, 0xa3, 0xe3, 0x0d, 0x63, 0x81, 0x75, 0x49, 0x7b, 0xaf, 0xd7, 0xcc, 0x59, 0xa4, 0x5a,
	0x39, 0xfe, 0x97, 0x05, 0xcf, 0x09, 0x28, 0xf5, 0x03, 0x4f, 0x24, 0xa4, 0x4c, 0x0c, 0x68, 0x7a,
	0x08, 0x03, 0x3a, 0x16, 0x06, 0x88, 0x29, 0x94, 0xf4, 0x81, 0x93, 0x31, 0x04, 0xce, 0x2f, 0x2d,
	0xb8, 0x38, 0x64, 0xb7, 0x32, 0x6c, 0x08, 0x2c, 0x98, 0xc1, 0x0f, 0x8c, 0xf4, 0x9c, 0x01, 0xfd,
	0xd3, 0x7a, 0xf4, 0x47, 0x0f, 0x98, 0x16, 0x9c, 0xa9, 0x12, 0xda, 0x47, 0x98, 0x2a, 0xd7, 0x6c,
	0xc3, 0x4c, 0x94, 0x37, 0xad, 0x91, 0x46, 0x53, 0xc5, 0xc7, 0xb2, 0x21, 0x1f, 0x86, 0x73, 0x4c,
	0x77, 0xe3, 0x02, 0xfc, 0x1b, 0x0b, 0x96, 0xa2, 0xd9, 0xb6, 0xd7, 0x73, 0x22, 0xa1, 0xd0, 0xcf,
	0xf1, 0xa6, 0x87, 0x72, 0xbc, 0x63, 0x83, 0x39, 0xde, 0xf1, 0x38, 0xc7, 0x8b, 0x3f, 0xb4, 0xe0,
	0xac, 0xc9, 0x7c, 0xe9, 0xdb, 0x7b, 0xbd, 0xdf, 0x06, 0x84, 0x78, 0x29, 0x97, 0x0e, 0x07, 0xac,
	0xd0, 0x07, 0xd8, 0xe8, 0x4e, 0xbc, 0x07, 0xf3, 0xe2, 0xe1, 0xa7, 0x08, 0x5a, 0x05, 0xe8, 0x8b,
	0x31, 0xe2, 0x97, 0xf9, 0xed, 0x8c, 0x91, 0xf8, 0x0d, 0xa9, 0xde, 0xf5, 0xdf, 0x2d, 0x43, 0x46,
	0x94, 0x77, 0xe4, 0x42, 0x56, 0x11, 0xb7, 0x28, 0xb9, 0x85, 0x3e, 0x4e, 0xd7, 0x31, 0xb0, 0xb3,
	0x78, 0xe1, 0x1b, 0x7f, 0xfe, 0xe7, 0xf7, 0x52, 0xf3, 0x68, 0xb6, 0xfc, 0xe8, 0x5a, 0xf9, 0x09,
	0x7b, 0xe4, 0xdd, 0x12, 0x2f, 0x92, 0xf2, 0xda, 0xbb, 0xa8, 0x0b, 0xd9, 0xaa, 0x79, 0x89, 0xea,
	0x88, 0x4b, 0x5c, 0xe5, 0x4b, 0xac, 0xe0, 0x25, 0xbe, 0x04, 0x9f, 0xbd, 0x14, 0x5f, 0x68, 0x23,
	0x20, 0x74, 0x43, 0x16, 0x90, 0x16, 0x40, 0x48, 0xc9, 0x22, 0x6c, 0xa6, 0x5e, 0x55, 0x6c, 0x3a,
	0x17, 0x06, 0xea, 0x88, 0x00, 0xc0, 0x88, 0x1b, 0x91, 0x47, 0xc0, 0x8c, 0x90, 0x6f, 0xae, 0x26,
	0xe4, 0x22, 0x5c, 0x2c, 0x4a, 0xce, 0x93, 0x64, 0x6a, 0x9d, 0x62, 0x82, 0xe5, 0xdf, 0x3a, 0xe8,
	0xd0, 0x23, 0x85, 0xe3, 0x9a, 0x16, 0xc7, 0x23, 0xc8, 0x47, 0xe9, 0x35, 0xf4, 0x9c, 0x06, 0xcb,
	0x04, 0x61, 0xe8, 0x5c, 0x1c, 0xa2, 0x25, 0x77, 0xb6, 0xc8, 0x57, 0x2e, 0xe2, 0x99, 0xf0, 0x77,
	0x59, 0x1b, 0x01, 0x57, 0xdc, 0xb0, 0xd6, 0xd0, 0x87, 0x16, 0xcc, 0x6a, 0x18, 0x3e, 0x74, 0xe5,
	0x18, 0xd4, 0xa5, 0x73, 0x75, 0x34, 0x65, 0x69, 0xd0, 0x73, 0xdc, 0xa0, 0xb3, 0xf8, 0x4c, 0xc4,
	0x20, 0x75, 0xc5, 0xee, 0x19, 0xb6, 0x6a, 0xc9, 0x00, 0x16, 0xbf, 0x22, 0xd0, 0x06, 0x70, 0x94,
	0xb1, 0x73, 0x0c, 0x64, 0x88, 0x2e, 0x80, 0xe5, 0xcf, 0xd4, 0xd6, 0xde, 0x45, 0x3f, 0xb2, 0x60,
	0x61, 0x00, 0xf1, 0x82, 0xae, 0x27, 0x5f, 0x56, 0x43, 0xe9, 0x23, 0xe7, 0x85, 0xe3, 0x0d, 0x92,
	0xa8, 0xcc, 0x73, 0x3b, 0xa7, 0x31, 0x44, 0x50, 0xb1, 0xd6, 0x10, 0x85, 0x5c, 0x84, 0xe2, 0xd4,
	0xc4, 0x60, 0x92, 0x00, 0x35, 0x42, 0xb1, 0xca, 0x97, 0xc0, 0x0e, 0x07, 0xfe, 0x09, 0xef, 0x2d,
	0xc5, 0x01, 0xd9, 0x90, 0xd4, 0x51, 0x2f, 0xf2, 0x4d, 0xab, 0x26, 0x29, 0xd3, 0xe3, 0x44, 0x7e,
	0xe8, 0x80, 0x2f, 0x42, 0x46, 0x70, 0xaa, 0xe8, 0xac, 0xce, 0xc3, 0x21, 0xad, 0xe8, 0x68, 0xe9,
	0x4a, 0x7c, 0x86, 0x4f, 0x3e, 0x8b, 0x66, 0xc2, 0xc9, 0xa9, 0xdb, 0xe4, 0x53, 0xef, 0x41, 0xa6,
	0x6a, 0x9a, 0xba, 0x3a, 0xc2, 0xd4, 0x2b, 0x7c, 0xea, 0x65, 0x11, 0xa6, 0x4f, 0xa8, 0xdb, 0x2c,
	0x45, 0xa7, 0xe7, 0x29, 0x89, 0x5f, 0x43, 0x5c, 0xc8, 0x2a, 0xa6, 0x55, 0x13, 0xa6, 0x7d, 0x9c,
	0xae, 0x73, 0x7e, 0x80, 0x86, 0x8c, 0x84, 0x02, 0x5f, 0x18, 0x50, 0x96, 0x2d, 0xcc, 0xe9, 0x58,
	0x17, 0x26, 0x7a, 0x34, 0x2b, 0x3a, 0x6f, 0x70, 0x46, 0x64, 0x43, 0x26, 0x57, 0x48, 0xb4, 0xd6,
	0x34, 0x68, 0x7d, 0xd3, 0x82, 0xa9, 0x38, 0x45, 0x8b, 0x56, 0x8c, 0x67, 0x2e, 0x46, 0x04, 0x3a,
	0x03, 0x09, 0x45, 0x7c, 0x85, 0xaf, 0x79, 0x11, 0x5d, 0x08, 0xd7, 0x94, 0x7c, 0x64, 0x79, 0xad,
	0x1c, 0x25, 0x1b, 0x99, 0x15, 0x3f, 0xb6, 0x60, 0xaa, 0x3a, 0xcc, 0x8a, 0xea, 0x53, 0x58, 0xf1,
	0x06, 0xb7, 0xe2, 0x35, 0xfc, 0x42, 0x18, 0xfa, 0x92, 0x16, 0x2d, 0x0d, 0x36, 0x89, 0xfb, 0x39,
	0x46, 0x3b, 0x33, 0xa8, 0x66, 0x12, 0xac, 0x28, 0xba, 0x3c, 0xe8, 0x8c, 0xc4, 0x4d, 0x35, 0xb9,
	0x47, 0x42, 0xb5, 0x36, 0x12, 0x54, 0xef, 0x5b, 0x50, 0xe8, 0x67, 0xb8, 0xd0, 0xea, 0x08, 0x0c,
	0xa8, 0xb0, 0xe1, 0xf2, 0xc8, 0x5c, 0xa9, 0x3a, 0xc0, 0xb8, 0x10, 0x96, 0xc6, 0x8d, 0x3a, 0x53,
	0x66, 0xf9, 0xe9, 0x27, 0x16, 0x9c, 0x36, 0xf0, 0x6d, 0xa8, 0x7c, 0x4c, 0x66, 0xd2, 0xf9, 0xdf,
	0xe3, 0x52, 0x79, 0xf8, 0x02, 0xb7, 0x6d, 0x09, 0xdb, 0x11, 0xdb, 0x7a, 0x74, 0x8d, 0xb4, 0x71,
	0xd5, 0x42, 0x5f, 0x87, 0xa9, 0x38, 0x57, 0xa2, 0x09, 0x2b, 0x2d, 0x8d, 0xe4, 0x5c, 0x1a, 0x91,
	0x5b, 0x53, 0x67, 0x0b, 0x4f, 0xa9, 0x53, 0x1b, 0x62, 0xf4, 0x43, 0x0b, 0xe6, 0xb5, 0x8c, 0x0d,
	0x7a, 0xfe, 0x58, 0x9c, 0x96, 0x53, 0x3a, 0x1e, 0x11, 0x84, 0xcf, 0x73, 0x9b, 0x16, 0x70, 0xb1,
	0x67, 0x93, 0x06, 0x9b, 0x77, 0x61, 0x32, 0xc6, 0xa4, 0x20, 0xd3, 0xbd, 0x22, 0x4e, 0xfa, 0x38,
	0x2b, 0xc3, 0xd4, 0xa4, 0x11, 0x4b, 0xdc, 0x88, 0xd3, 0x18, 0x31, 0x23, 0x24, 0xe5, 0x12, 0xb9,
	0x80, 0xbc, 0x97, 0x82, 0x85, 0x01, 0xa4, 0x8a, 0xa6, 0x04, 0x0f, 0xa7, 0x60, 0x9c, 0xd1, 0x9f,
	0xee, 0xf8, 0x3d, 0x8b, 0xdb, 0xf7, 0x04, 0x7f, 0x39, 0xbc, 0x7e, 0x1a, 0xde, 0x78, 0x25, 0x7d,
	0xe7, 0x2d, 0xcd, 0xe3, 0x9f, 0x1d, 0xd1, 0xb2, 0x78, 0x18, 0xf2, 0x0c, 0x32, 0x90, 0x11, 0x42,
	0xff, 0xb0, 0xe0, 0xdc, 0x10, 0xf2, 0x02, 0xbd, 0x6c, 0x80, 0x7b, 0x18, 0xf1, 0xe3, 0xdc, 0x38,
	0xfe, 0x40, 0xe9, 0xb9, 0x6d, 0x8e, 0xcc, 0xeb, 0xf8, 0xf6, 0x00, 0x64, 0x86, 0x6f, 0x5e, 0x39,
	0xfa, 0xdf, 0x16, 0x7f, 0xb0, 0x1a, 0x7e, 0x11, 0x75, 0xcd, 0x58, 0xa3, 0x8d, 0x4e, 0x1e, 0xf5,
	0xa9, 0x8d, 0x8f, 0xf8, 0x3e, 0x02, 0xfc, 0xa6, 0xaa, 0xe4, 0x26, 0xff, 0xea, 0xba, 0x6e, 0x25,
	0xde, 0xe9, 0xfd, 0xbe, 0x1d, 0x40, 0xc9, 0xa0, 0xbf, 0xf4, 0x5e, 0xce, 0x06, 0x76, 0x01, 0xbd,
	0x68, 0x70, 0xcf, 0x60, 0xee, 0xc5, 0x79, 0xe9, 0xb8, 0xc3, 0xa4, 0x4f, 0x3f, 0xc3, 0xb1, 0xd8,
	0xc4, 0xb7, 0x8c, 0x58, 0x0c, 0xdb, 0xb0, 0xf2, 0xe7, 0xcf, 0x2c, 0x40, 0x49, 0x02, 0x02, 0xad,
	0xe9, 0x1c, 0xa9, 0x67, 0x29, 0x9c, 0xa1, 0x2f, 0xeb, 0x3e, 0x73, 0x13, 0x4f, 0xf4, 0x52, 0x54,
	0x72, 0x2b, 0xf2, 0x0a, 0xe7, 0x26, 0xf3, 0x47, 0x3c, 0x77, 0x91, 0xb5, 0x86, 0x7e, 0x61, 0x41,
	0x51, 0x4f, 0x02, 0xa0, 0xd2, 0xc0, 0x4c, 0x96, 0x20, 0x3b, 0x9c, 0xf2, 0xc8, 0xfa, 0x12, 0xf4,
	0xff, 0xe3, 0xbb, 0xb8, 0x8e, 0x4b, 0x89, 0x5d, 0x18, 0x6d, 0x56, 0x28, 0x07, 0x30, 0x15, 0x27,
	0x08, 0x74, 0x95, 0x4b, 0xc7, 0x20, 0x38, 0x66, 0xbe, 0x00, 0x9f, 0xe5, 0xf6, 0xd8, 0x38, 0xcf,
	0xec, 0x51, 0xdc, 0xc1, 0x46, 0x8f, 0x45, 0xd8, 0xb4, 0xbf, 0x54, 0xec, 0xfb, 0x87, 0x9e, 0x9b,
	0xe2, 0x6b, 0x37, 0xc3, 0xaf, 0x2c, 0xd7, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xb3, 0x14,
	0x24, 0xf1, 0x33, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PointsClient is the client API for Points service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PointsClient interface {
	// Gets a brand.
	GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Sets a brand.
	SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Lists brands.
	ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error)
	// Deletes a brand.
	DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Search points.
	SearchPoints(ctx context.Context, in *SearchPointsRequest, opts ...grpc.CallOption) (*SearchPointsResponse, error)
	// Search points.
	PolygonSearchPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonSearchPointsClient, error)
	// Gets a point.
	GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error)
	// Creates a point with the given point sources.
	CreatePointWithPointSources(ctx context.Context, in *CreatePointWithPointSourcesRequest, opts ...grpc.CallOption) (*CreatePointWithPointSourcesResponse, error)
	// Updates an existing point.
	UpdatePoint(ctx context.Context, in *UpdatePointRequest, opts ...grpc.CallOption) (*Point, error)
	// Deletes a point.
	DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a tag.
	GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Sets a tag.
	SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Lists tags.
	ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error)
	// Deletes a tag.
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a point source.
	GetPointSource(ctx context.Context, in *GetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error)
	// Sets a point source.
	SetPointSource(ctx context.Context, in *SetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error)
	// Deletes a point source.
	DeletePointSource(ctx context.Context, in *DeletePointSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CountBrandPoints(ctx context.Context, in *CountBrandPointsRequest, opts ...grpc.CallOption) (*CountBrandPointsResponse, error)
	PolygonCountBrandPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountBrandPointsClient, error)
	CountTagPoints(ctx context.Context, in *CountTagPointsRequest, opts ...grpc.CallOption) (*CountTagPointsResponse, error)
	PolygonCountTagPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountTagPointsClient, error)
	//
	SearchRegions(ctx context.Context, in *SearchRegionsRequest, opts ...grpc.CallOption) (*SearchRegionsResponse, error)
	// Sets a brand region score set score.
	SetBrandRegionScoreSetScore(ctx context.Context, in *SetBrandRegionScoreSetScoreRequest, opts ...grpc.CallOption) (*BrandRegionScoreSetScore, error)
	// Searches brand region score set scores.
	SearchBrandRegionScoreSetScores(ctx context.Context, in *SearchBrandRegionScoreSetScoresRequest, opts ...grpc.CallOption) (*SearchBrandRegionScoreSetScoresResponse, error)
	// Sets a tag region score set score.
	SetTagRegionScoreSetScore(ctx context.Context, in *SetTagRegionScoreSetScoreRequest, opts ...grpc.CallOption) (*TagRegionScoreSetScore, error)
	// Searches tag region score set scores.
	SearchTagRegionScoreSetScores(ctx context.Context, in *SearchTagRegionScoreSetScoresRequest, opts ...grpc.CallOption) (*SearchTagRegionScoreSetScoresResponse, error)
	// Sets a region graph edge.
	SetRegionGraphEdge(ctx context.Context, in *SetRegionGraphEdgeRequest, opts ...grpc.CallOption) (*RegionGraphEdge, error)
	// Searches region graph edges.
	SearchRegionGraphEdges(ctx context.Context, in *SearchRegionGraphEdgesRequest, opts ...grpc.CallOption) (*SearchRegionGraphEdgesResponse, error)
	CreateFeedback(ctx context.Context, in *CreateFeedbackRequest, opts ...grpc.CallOption) (*Feedback, error)
}

type pointsClient struct {
	cc *grpc.ClientConn
}

func NewPointsClient(cc *grpc.ClientConn) PointsClient {
	return &pointsClient{cc}
}

func (c *pointsClient) GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error) {
	out := new(ListBrandsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/ListBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SearchPoints(ctx context.Context, in *SearchPointsRequest, opts ...grpc.CallOption) (*SearchPointsResponse, error) {
	out := new(SearchPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonSearchPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonSearchPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[0], "/topos.points.v1.Points/PolygonSearchPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonSearchPointsClient{stream}
	return x, nil
}

type Points_PolygonSearchPointsClient interface {
	Send(*PolygonSearchPointsRequest) error
	CloseAndRecv() (*PolygonSearchPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonSearchPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonSearchPointsClient) Send(m *PolygonSearchPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonSearchPointsClient) CloseAndRecv() (*PolygonSearchPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonSearchPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CreatePointWithPointSources(ctx context.Context, in *CreatePointWithPointSourcesRequest, opts ...grpc.CallOption) (*CreatePointWithPointSourcesResponse, error) {
	out := new(CreatePointWithPointSourcesResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CreatePointWithPointSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) UpdatePoint(ctx context.Context, in *UpdatePointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/UpdatePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeletePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error) {
	out := new(ListTagsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetPointSource(ctx context.Context, in *GetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error) {
	out := new(PointSource)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetPointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetPointSource(ctx context.Context, in *SetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error) {
	out := new(PointSource)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetPointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeletePointSource(ctx context.Context, in *DeletePointSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeletePointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CountBrandPoints(ctx context.Context, in *CountBrandPointsRequest, opts ...grpc.CallOption) (*CountBrandPointsResponse, error) {
	out := new(CountBrandPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CountBrandPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonCountBrandPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountBrandPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[1], "/topos.points.v1.Points/PolygonCountBrandPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonCountBrandPointsClient{stream}
	return x, nil
}

type Points_PolygonCountBrandPointsClient interface {
	Send(*PolygonCountBrandPointsRequest) error
	CloseAndRecv() (*PolygonCountBrandPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonCountBrandPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonCountBrandPointsClient) Send(m *PolygonCountBrandPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonCountBrandPointsClient) CloseAndRecv() (*PolygonCountBrandPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonCountBrandPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) CountTagPoints(ctx context.Context, in *CountTagPointsRequest, opts ...grpc.CallOption) (*CountTagPointsResponse, error) {
	out := new(CountTagPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CountTagPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonCountTagPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountTagPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[2], "/topos.points.v1.Points/PolygonCountTagPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonCountTagPointsClient{stream}
	return x, nil
}

type Points_PolygonCountTagPointsClient interface {
	Send(*PolygonCountTagPointsRequest) error
	CloseAndRecv() (*PolygonCountTagPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonCountTagPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonCountTagPointsClient) Send(m *PolygonCountTagPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonCountTagPointsClient) CloseAndRecv() (*PolygonCountTagPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonCountTagPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) SearchRegions(ctx context.Context, in *SearchRegionsRequest, opts ...grpc.CallOption) (*SearchRegionsResponse, error) {
	out := new(SearchRegionsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetBrandRegionScoreSetScore(ctx context.Context, in *SetBrandRegionScoreSetScoreRequest, opts ...grpc.CallOption) (*BrandRegionScoreSetScore, error) {
	out := new(BrandRegionScoreSetScore)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetBrandRegionScoreSetScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SearchBrandRegionScoreSetScores(ctx context.Context, in *SearchBrandRegionScoreSetScoresRequest, opts ...grpc.CallOption) (*SearchBrandRegionScoreSetScoresResponse, error) {
	out := new(SearchBrandRegionScoreSetScoresResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchBrandRegionScoreSetScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetTagRegionScoreSetScore(ctx context.Context, in *SetTagRegionScoreSetScoreRequest, opts ...grpc.CallOption) (*TagRegionScoreSetScore, error) {
	out := new(TagRegionScoreSetScore)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetTagRegionScoreSetScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SearchTagRegionScoreSetScores(ctx context.Context, in *SearchTagRegionScoreSetScoresRequest, opts ...grpc.CallOption) (*SearchTagRegionScoreSetScoresResponse, error) {
	out := new(SearchTagRegionScoreSetScoresResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchTagRegionScoreSetScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetRegionGraphEdge(ctx context.Context, in *SetRegionGraphEdgeRequest, opts ...grpc.CallOption) (*RegionGraphEdge, error) {
	out := new(RegionGraphEdge)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetRegionGraphEdge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SearchRegionGraphEdges(ctx context.Context, in *SearchRegionGraphEdgesRequest, opts ...grpc.CallOption) (*SearchRegionGraphEdgesResponse, error) {
	out := new(SearchRegionGraphEdgesResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchRegionGraphEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CreateFeedback(ctx context.Context, in *CreateFeedbackRequest, opts ...grpc.CallOption) (*Feedback, error) {
	out := new(Feedback)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CreateFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointsServer is the server API for Points service.
type PointsServer interface {
	// Gets a brand.
	GetBrand(context.Context, *GetBrandRequest) (*Brand, error)
	// Sets a brand.
	SetBrand(context.Context, *SetBrandRequest) (*Brand, error)
	// Lists brands.
	ListBrands(context.Context, *ListBrandsRequest) (*ListBrandsResponse, error)
	// Deletes a brand.
	DeleteBrand(context.Context, *DeleteBrandRequest) (*empty.Empty, error)
	// Search points.
	SearchPoints(context.Context, *SearchPointsRequest) (*SearchPointsResponse, error)
	// Search points.
	PolygonSearchPoints(Points_PolygonSearchPointsServer) error
	// Gets a point.
	GetPoint(context.Context, *GetPointRequest) (*Point, error)
	// Creates a point with the given point sources.
	CreatePointWithPointSources(context.Context, *CreatePointWithPointSourcesRequest) (*CreatePointWithPointSourcesResponse, error)
	// Updates an existing point.
	UpdatePoint(context.Context, *UpdatePointRequest) (*Point, error)
	// Deletes a point.
	DeletePoint(context.Context, *DeletePointRequest) (*empty.Empty, error)
	// Gets a tag.
	GetTag(context.Context, *GetTagRequest) (*Tag, error)
	// Sets a tag.
	SetTag(context.Context, *SetTagRequest) (*Tag, error)
	// Lists tags.
	ListTags(context.Context, *ListTagsRequest) (*ListTagsResponse, error)
	// Deletes a tag.
	DeleteTag(context.Context, *DeleteTagRequest) (*empty.Empty, error)
	// Gets a point source.
	GetPointSource(context.Context, *GetPointSourceRequest) (*PointSource, error)
	// Sets a point source.
	SetPointSource(context.Context, *SetPointSourceRequest) (*PointSource, error)
	// Deletes a point source.
	DeletePointSource(context.Context, *DeletePointSourceRequest) (*empty.Empty, error)
	CountBrandPoints(context.Context, *CountBrandPointsRequest) (*CountBrandPointsResponse, error)
	PolygonCountBrandPoints(Points_PolygonCountBrandPointsServer) error
	CountTagPoints(context.Context, *CountTagPointsRequest) (*CountTagPointsResponse, error)
	PolygonCountTagPoints(Points_PolygonCountTagPointsServer) error
	//
	SearchRegions(context.Context, *SearchRegionsRequest) (*SearchRegionsResponse, error)
	// Sets a brand region score set score.
	SetBrandRegionScoreSetScore(context.Context, *SetBrandRegionScoreSetScoreRequest) (*BrandRegionScoreSetScore, error)
	// Searches brand region score set scores.
	SearchBrandRegionScoreSetScores(context.Context, *SearchBrandRegionScoreSetScoresRequest) (*SearchBrandRegionScoreSetScoresResponse, error)
	// Sets a tag region score set score.
	SetTagRegionScoreSetScore(context.Context, *SetTagRegionScoreSetScoreRequest) (*TagRegionScoreSetScore, error)
	// Searches tag region score set scores.
	SearchTagRegionScoreSetScores(context.Context, *SearchTagRegionScoreSetScoresRequest) (*SearchTagRegionScoreSetScoresResponse, error)
	// Sets a region graph edge.
	SetRegionGraphEdge(context.Context, *SetRegionGraphEdgeRequest) (*RegionGraphEdge, error)
	// Searches region graph edges.
	SearchRegionGraphEdges(context.Context, *SearchRegionGraphEdgesRequest) (*SearchRegionGraphEdgesResponse, error)
	CreateFeedback(context.Context, *CreateFeedbackRequest) (*Feedback, error)
}

// UnimplementedPointsServer can be embedded to have forward compatible implementations.
type UnimplementedPointsServer struct {
}

func (*UnimplementedPointsServer) GetBrand(ctx context.Context, req *GetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedPointsServer) SetBrand(ctx context.Context, req *SetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBrand not implemented")
}
func (*UnimplementedPointsServer) ListBrands(ctx context.Context, req *ListBrandsRequest) (*ListBrandsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBrands not implemented")
}
func (*UnimplementedPointsServer) DeleteBrand(ctx context.Context, req *DeleteBrandRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrand not implemented")
}
func (*UnimplementedPointsServer) SearchPoints(ctx context.Context, req *SearchPointsRequest) (*SearchPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonSearchPoints(srv Points_PolygonSearchPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonSearchPoints not implemented")
}
func (*UnimplementedPointsServer) GetPoint(ctx context.Context, req *GetPointRequest) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoint not implemented")
}
func (*UnimplementedPointsServer) CreatePointWithPointSources(ctx context.Context, req *CreatePointWithPointSourcesRequest) (*CreatePointWithPointSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePointWithPointSources not implemented")
}
func (*UnimplementedPointsServer) UpdatePoint(ctx context.Context, req *UpdatePointRequest) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoint not implemented")
}
func (*UnimplementedPointsServer) DeletePoint(ctx context.Context, req *DeletePointRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoint not implemented")
}
func (*UnimplementedPointsServer) GetTag(ctx context.Context, req *GetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}
func (*UnimplementedPointsServer) SetTag(ctx context.Context, req *SetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedPointsServer) ListTags(ctx context.Context, req *ListTagsRequest) (*ListTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedPointsServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedPointsServer) GetPointSource(ctx context.Context, req *GetPointSourceRequest) (*PointSource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPointSource not implemented")
}
func (*UnimplementedPointsServer) SetPointSource(ctx context.Context, req *SetPointSourceRequest) (*PointSource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPointSource not implemented")
}
func (*UnimplementedPointsServer) DeletePointSource(ctx context.Context, req *DeletePointSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePointSource not implemented")
}
func (*UnimplementedPointsServer) CountBrandPoints(ctx context.Context, req *CountBrandPointsRequest) (*CountBrandPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountBrandPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonCountBrandPoints(srv Points_PolygonCountBrandPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonCountBrandPoints not implemented")
}
func (*UnimplementedPointsServer) CountTagPoints(ctx context.Context, req *CountTagPointsRequest) (*CountTagPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTagPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonCountTagPoints(srv Points_PolygonCountTagPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonCountTagPoints not implemented")
}
func (*UnimplementedPointsServer) SearchRegions(ctx context.Context, req *SearchRegionsRequest) (*SearchRegionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchRegions not implemented")
}
func (*UnimplementedPointsServer) SetBrandRegionScoreSetScore(ctx context.Context, req *SetBrandRegionScoreSetScoreRequest) (*BrandRegionScoreSetScore, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBrandRegionScoreSetScore not implemented")
}
func (*UnimplementedPointsServer) SearchBrandRegionScoreSetScores(ctx context.Context, req *SearchBrandRegionScoreSetScoresRequest) (*SearchBrandRegionScoreSetScoresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchBrandRegionScoreSetScores not implemented")
}
func (*UnimplementedPointsServer) SetTagRegionScoreSetScore(ctx context.Context, req *SetTagRegionScoreSetScoreRequest) (*TagRegionScoreSetScore, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTagRegionScoreSetScore not implemented")
}
func (*UnimplementedPointsServer) SearchTagRegionScoreSetScores(ctx context.Context, req *SearchTagRegionScoreSetScoresRequest) (*SearchTagRegionScoreSetScoresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTagRegionScoreSetScores not implemented")
}
func (*UnimplementedPointsServer) SetRegionGraphEdge(ctx context.Context, req *SetRegionGraphEdgeRequest) (*RegionGraphEdge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRegionGraphEdge not implemented")
}
func (*UnimplementedPointsServer) SearchRegionGraphEdges(ctx context.Context, req *SearchRegionGraphEdgesRequest) (*SearchRegionGraphEdgesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchRegionGraphEdges not implemented")
}
func (*UnimplementedPointsServer) CreateFeedback(ctx context.Context, req *CreateFeedbackRequest) (*Feedback, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeedback not implemented")
}

func RegisterPointsServer(s *grpc.Server, srv PointsServer) {
	s.RegisterService(&_Points_serviceDesc, srv)
}

func _Points_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetBrand(ctx, req.(*GetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetBrand(ctx, req.(*SetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_ListBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBrandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).ListBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/ListBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).ListBrands(ctx, req.(*ListBrandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeleteBrand(ctx, req.(*DeleteBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SearchPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchPoints(ctx, req.(*SearchPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonSearchPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonSearchPoints(&pointsPolygonSearchPointsServer{stream})
}

type Points_PolygonSearchPointsServer interface {
	SendAndClose(*PolygonSearchPointsResponse) error
	Recv() (*PolygonSearchPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonSearchPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonSearchPointsServer) SendAndClose(m *PolygonSearchPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonSearchPointsServer) Recv() (*PolygonSearchPointsRequest, error) {
	m := new(PolygonSearchPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_GetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetPoint(ctx, req.(*GetPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CreatePointWithPointSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePointWithPointSourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CreatePointWithPointSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CreatePointWithPointSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CreatePointWithPointSources(ctx, req.(*CreatePointWithPointSourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_UpdatePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).UpdatePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/UpdatePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).UpdatePoint(ctx, req.(*UpdatePointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeletePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeletePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeletePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeletePoint(ctx, req.(*DeletePointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetTag(ctx, req.(*GetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetTag(ctx, req.(*SetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).ListTags(ctx, req.(*ListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetPointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetPointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetPointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetPointSource(ctx, req.(*GetPointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetPointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetPointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetPointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetPointSource(ctx, req.(*SetPointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeletePointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeletePointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeletePointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeletePointSource(ctx, req.(*DeletePointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CountBrandPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountBrandPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CountBrandPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CountBrandPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CountBrandPoints(ctx, req.(*CountBrandPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonCountBrandPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonCountBrandPoints(&pointsPolygonCountBrandPointsServer{stream})
}

type Points_PolygonCountBrandPointsServer interface {
	SendAndClose(*PolygonCountBrandPointsResponse) error
	Recv() (*PolygonCountBrandPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonCountBrandPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonCountBrandPointsServer) SendAndClose(m *PolygonCountBrandPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonCountBrandPointsServer) Recv() (*PolygonCountBrandPointsRequest, error) {
	m := new(PolygonCountBrandPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_CountTagPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTagPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CountTagPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CountTagPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CountTagPoints(ctx, req.(*CountTagPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonCountTagPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonCountTagPoints(&pointsPolygonCountTagPointsServer{stream})
}

type Points_PolygonCountTagPointsServer interface {
	SendAndClose(*PolygonCountTagPointsResponse) error
	Recv() (*PolygonCountTagPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonCountTagPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonCountTagPointsServer) SendAndClose(m *PolygonCountTagPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonCountTagPointsServer) Recv() (*PolygonCountTagPointsRequest, error) {
	m := new(PolygonCountTagPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_SearchRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchRegions(ctx, req.(*SearchRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetBrandRegionScoreSetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBrandRegionScoreSetScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetBrandRegionScoreSetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetBrandRegionScoreSetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetBrandRegionScoreSetScore(ctx, req.(*SetBrandRegionScoreSetScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SearchBrandRegionScoreSetScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchBrandRegionScoreSetScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchBrandRegionScoreSetScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchBrandRegionScoreSetScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchBrandRegionScoreSetScores(ctx, req.(*SearchBrandRegionScoreSetScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetTagRegionScoreSetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagRegionScoreSetScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetTagRegionScoreSetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetTagRegionScoreSetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetTagRegionScoreSetScore(ctx, req.(*SetTagRegionScoreSetScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SearchTagRegionScoreSetScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchTagRegionScoreSetScoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchTagRegionScoreSetScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchTagRegionScoreSetScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchTagRegionScoreSetScores(ctx, req.(*SearchTagRegionScoreSetScoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetRegionGraphEdge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRegionGraphEdgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetRegionGraphEdge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetRegionGraphEdge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetRegionGraphEdge(ctx, req.(*SetRegionGraphEdgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SearchRegionGraphEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRegionGraphEdgesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchRegionGraphEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchRegionGraphEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchRegionGraphEdges(ctx, req.(*SearchRegionGraphEdgesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CreateFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CreateFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CreateFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CreateFeedback(ctx, req.(*CreateFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Points_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.points.v1.Points",
	HandlerType: (*PointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrand",
			Handler:    _Points_GetBrand_Handler,
		},
		{
			MethodName: "SetBrand",
			Handler:    _Points_SetBrand_Handler,
		},
		{
			MethodName: "ListBrands",
			Handler:    _Points_ListBrands_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _Points_DeleteBrand_Handler,
		},
		{
			MethodName: "SearchPoints",
			Handler:    _Points_SearchPoints_Handler,
		},
		{
			MethodName: "GetPoint",
			Handler:    _Points_GetPoint_Handler,
		},
		{
			MethodName: "CreatePointWithPointSources",
			Handler:    _Points_CreatePointWithPointSources_Handler,
		},
		{
			MethodName: "UpdatePoint",
			Handler:    _Points_UpdatePoint_Handler,
		},
		{
			MethodName: "DeletePoint",
			Handler:    _Points_DeletePoint_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _Points_GetTag_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _Points_SetTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _Points_ListTags_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _Points_DeleteTag_Handler,
		},
		{
			MethodName: "GetPointSource",
			Handler:    _Points_GetPointSource_Handler,
		},
		{
			MethodName: "SetPointSource",
			Handler:    _Points_SetPointSource_Handler,
		},
		{
			MethodName: "DeletePointSource",
			Handler:    _Points_DeletePointSource_Handler,
		},
		{
			MethodName: "CountBrandPoints",
			Handler:    _Points_CountBrandPoints_Handler,
		},
		{
			MethodName: "CountTagPoints",
			Handler:    _Points_CountTagPoints_Handler,
		},
		{
			MethodName: "SearchRegions",
			Handler:    _Points_SearchRegions_Handler,
		},
		{
			MethodName: "SetBrandRegionScoreSetScore",
			Handler:    _Points_SetBrandRegionScoreSetScore_Handler,
		},
		{
			MethodName: "SearchBrandRegionScoreSetScores",
			Handler:    _Points_SearchBrandRegionScoreSetScores_Handler,
		},
		{
			MethodName: "SetTagRegionScoreSetScore",
			Handler:    _Points_SetTagRegionScoreSetScore_Handler,
		},
		{
			MethodName: "SearchTagRegionScoreSetScores",
			Handler:    _Points_SearchTagRegionScoreSetScores_Handler,
		},
		{
			MethodName: "SetRegionGraphEdge",
			Handler:    _Points_SetRegionGraphEdge_Handler,
		},
		{
			MethodName: "SearchRegionGraphEdges",
			Handler:    _Points_SearchRegionGraphEdges_Handler,
		},
		{
			MethodName: "CreateFeedback",
			Handler:    _Points_CreateFeedback_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PolygonSearchPoints",
			Handler:       _Points_PolygonSearchPoints_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PolygonCountBrandPoints",
			Handler:       _Points_PolygonCountBrandPoints_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PolygonCountTagPoints",
			Handler:       _Points_PolygonCountTagPoints_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "topos/points/v1/points.proto",
}
