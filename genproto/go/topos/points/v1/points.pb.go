// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/points/v1/points.proto

package points

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Brand struct {
	// The name of the point brand. It must have the format `"brands/{brand}"`.
	// `{brand}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the brand.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The creation timestamp of the brand.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{0}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Brand) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Brand) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type LatLng struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}
func (*LatLng) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1}
}

func (m *LatLng) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLng.Unmarshal(m, b)
}
func (m *LatLng) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLng.Marshal(b, m, deterministic)
}
func (m *LatLng) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLng.Merge(m, src)
}
func (m *LatLng) XXX_Size() int {
	return xxx_messageInfo_LatLng.Size(m)
}
func (m *LatLng) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLng.DiscardUnknown(m)
}

var xxx_messageInfo_LatLng proto.InternalMessageInfo

func (m *LatLng) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LatLng) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Point struct {
	// The name of the point. It must have the format `"points/{point}"`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the point's brand if it has one. It must have the format
	// `"brands/{brand}"`. `{brand}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Brand string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	// The display name of the point.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address.
	FormattedAddress string `protobuf:"bytes,4,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The geocoded point address.
	Location *LatLng `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// The creation timestamp of the point.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an point.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{2}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Point) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Point) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Point) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Point) GetLocation() *LatLng {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Point) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Point) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type PointSource struct {
	// The name of the point source. It must have the format
	// `"sources/{source}/pointSources/{point_source}"`. `{source}` must match
	// the [regular expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`. {point_source} is the remote point source ID.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the point associated with this point source if there is one.
	// It must have the format `"points/{point}"`.
	Point string `protobuf:"bytes,2,opt,name=point,proto3" json:"point,omitempty"`
	// The display name of the point source.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address.
	FormattedAddress string `protobuf:"bytes,4,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The source-geocoded address.
	Location *LatLng `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// A list of potentially unnormalized, source-provided tags.
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// The creation timestamp of the point source.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an point source.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PointSource) Reset()         { *m = PointSource{} }
func (m *PointSource) String() string { return proto.CompactTextString(m) }
func (*PointSource) ProtoMessage()    {}
func (*PointSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{3}
}

func (m *PointSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointSource.Unmarshal(m, b)
}
func (m *PointSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointSource.Marshal(b, m, deterministic)
}
func (m *PointSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointSource.Merge(m, src)
}
func (m *PointSource) XXX_Size() int {
	return xxx_messageInfo_PointSource.Size(m)
}
func (m *PointSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PointSource.DiscardUnknown(m)
}

var xxx_messageInfo_PointSource proto.InternalMessageInfo

func (m *PointSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PointSource) GetPoint() string {
	if m != nil {
		return m.Point
	}
	return ""
}

func (m *PointSource) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PointSource) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *PointSource) GetLocation() *LatLng {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PointSource) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PointSource) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *PointSource) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type GetBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandRequest) Reset()         { *m = GetBrandRequest{} }
func (m *GetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandRequest) ProtoMessage()    {}
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{4}
}

func (m *GetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandRequest.Unmarshal(m, b)
}
func (m *GetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandRequest.Merge(m, src)
}
func (m *GetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandRequest.Size(m)
}
func (m *GetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandRequest proto.InternalMessageInfo

func (m *GetBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateBrandRequest struct {
	Brand                *Brand   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBrandRequest) Reset()         { *m = CreateBrandRequest{} }
func (m *CreateBrandRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBrandRequest) ProtoMessage()    {}
func (*CreateBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{5}
}

func (m *CreateBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandRequest.Unmarshal(m, b)
}
func (m *CreateBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandRequest.Marshal(b, m, deterministic)
}
func (m *CreateBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandRequest.Merge(m, src)
}
func (m *CreateBrandRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBrandRequest.Size(m)
}
func (m *CreateBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandRequest proto.InternalMessageInfo

func (m *CreateBrandRequest) GetBrand() *Brand {
	if m != nil {
		return m.Brand
	}
	return nil
}

type UpdateBrandRequest struct {
	Brand                *Brand   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBrandRequest) Reset()         { *m = UpdateBrandRequest{} }
func (m *UpdateBrandRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBrandRequest) ProtoMessage()    {}
func (*UpdateBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{6}
}

func (m *UpdateBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrandRequest.Unmarshal(m, b)
}
func (m *UpdateBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrandRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrandRequest.Merge(m, src)
}
func (m *UpdateBrandRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBrandRequest.Size(m)
}
func (m *UpdateBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrandRequest proto.InternalMessageInfo

func (m *UpdateBrandRequest) GetBrand() *Brand {
	if m != nil {
		return m.Brand
	}
	return nil
}

type DeleteBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBrandRequest) Reset()         { *m = DeleteBrandRequest{} }
func (m *DeleteBrandRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBrandRequest) ProtoMessage()    {}
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{7}
}

func (m *DeleteBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBrandRequest.Unmarshal(m, b)
}
func (m *DeleteBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBrandRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBrandRequest.Merge(m, src)
}
func (m *DeleteBrandRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBrandRequest.Size(m)
}
func (m *DeleteBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBrandRequest proto.InternalMessageInfo

func (m *DeleteBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPointRequest) Reset()         { *m = GetPointRequest{} }
func (m *GetPointRequest) String() string { return proto.CompactTextString(m) }
func (*GetPointRequest) ProtoMessage()    {}
func (*GetPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{8}
}

func (m *GetPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPointRequest.Unmarshal(m, b)
}
func (m *GetPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPointRequest.Marshal(b, m, deterministic)
}
func (m *GetPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPointRequest.Merge(m, src)
}
func (m *GetPointRequest) XXX_Size() int {
	return xxx_messageInfo_GetPointRequest.Size(m)
}
func (m *GetPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPointRequest proto.InternalMessageInfo

func (m *GetPointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreatePointRequest struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePointRequest) Reset()         { *m = CreatePointRequest{} }
func (m *CreatePointRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePointRequest) ProtoMessage()    {}
func (*CreatePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{9}
}

func (m *CreatePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePointRequest.Unmarshal(m, b)
}
func (m *CreatePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePointRequest.Marshal(b, m, deterministic)
}
func (m *CreatePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePointRequest.Merge(m, src)
}
func (m *CreatePointRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePointRequest.Size(m)
}
func (m *CreatePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePointRequest proto.InternalMessageInfo

func (m *CreatePointRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type UpdatePointRequest struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePointRequest) Reset()         { *m = UpdatePointRequest{} }
func (m *UpdatePointRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePointRequest) ProtoMessage()    {}
func (*UpdatePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{10}
}

func (m *UpdatePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePointRequest.Unmarshal(m, b)
}
func (m *UpdatePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePointRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePointRequest.Merge(m, src)
}
func (m *UpdatePointRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePointRequest.Size(m)
}
func (m *UpdatePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePointRequest proto.InternalMessageInfo

func (m *UpdatePointRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type DeletePointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePointRequest) Reset()         { *m = DeletePointRequest{} }
func (m *DeletePointRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePointRequest) ProtoMessage()    {}
func (*DeletePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{11}
}

func (m *DeletePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePointRequest.Unmarshal(m, b)
}
func (m *DeletePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePointRequest.Marshal(b, m, deterministic)
}
func (m *DeletePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePointRequest.Merge(m, src)
}
func (m *DeletePointRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePointRequest.Size(m)
}
func (m *DeletePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePointRequest proto.InternalMessageInfo

func (m *DeletePointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPointSourceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPointSourceRequest) Reset()         { *m = GetPointSourceRequest{} }
func (m *GetPointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPointSourceRequest) ProtoMessage()    {}
func (*GetPointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{12}
}

func (m *GetPointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPointSourceRequest.Unmarshal(m, b)
}
func (m *GetPointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPointSourceRequest.Marshal(b, m, deterministic)
}
func (m *GetPointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPointSourceRequest.Merge(m, src)
}
func (m *GetPointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_GetPointSourceRequest.Size(m)
}
func (m *GetPointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPointSourceRequest proto.InternalMessageInfo

func (m *GetPointSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreatePointSourceRequest struct {
	Source               string       `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	PointSource          *PointSource `protobuf:"bytes,2,opt,name=point_source,json=pointSource,proto3" json:"point_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreatePointSourceRequest) Reset()         { *m = CreatePointSourceRequest{} }
func (m *CreatePointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePointSourceRequest) ProtoMessage()    {}
func (*CreatePointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{13}
}

func (m *CreatePointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePointSourceRequest.Unmarshal(m, b)
}
func (m *CreatePointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePointSourceRequest.Marshal(b, m, deterministic)
}
func (m *CreatePointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePointSourceRequest.Merge(m, src)
}
func (m *CreatePointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePointSourceRequest.Size(m)
}
func (m *CreatePointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePointSourceRequest proto.InternalMessageInfo

func (m *CreatePointSourceRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CreatePointSourceRequest) GetPointSource() *PointSource {
	if m != nil {
		return m.PointSource
	}
	return nil
}

type UpdatePointSourceRequest struct {
	PointSource          *PointSource `protobuf:"bytes,1,opt,name=point_source,json=pointSource,proto3" json:"point_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdatePointSourceRequest) Reset()         { *m = UpdatePointSourceRequest{} }
func (m *UpdatePointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePointSourceRequest) ProtoMessage()    {}
func (*UpdatePointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{14}
}

func (m *UpdatePointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePointSourceRequest.Unmarshal(m, b)
}
func (m *UpdatePointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePointSourceRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePointSourceRequest.Merge(m, src)
}
func (m *UpdatePointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePointSourceRequest.Size(m)
}
func (m *UpdatePointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePointSourceRequest proto.InternalMessageInfo

func (m *UpdatePointSourceRequest) GetPointSource() *PointSource {
	if m != nil {
		return m.PointSource
	}
	return nil
}

type DeletePointSourceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePointSourceRequest) Reset()         { *m = DeletePointSourceRequest{} }
func (m *DeletePointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePointSourceRequest) ProtoMessage()    {}
func (*DeletePointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{15}
}

func (m *DeletePointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePointSourceRequest.Unmarshal(m, b)
}
func (m *DeletePointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePointSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeletePointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePointSourceRequest.Merge(m, src)
}
func (m *DeletePointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePointSourceRequest.Size(m)
}
func (m *DeletePointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePointSourceRequest proto.InternalMessageInfo

func (m *DeletePointSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LinkPointSourceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PointSource          string   `protobuf:"bytes,2,opt,name=point_source,json=pointSource,proto3" json:"point_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkPointSourceRequest) Reset()         { *m = LinkPointSourceRequest{} }
func (m *LinkPointSourceRequest) String() string { return proto.CompactTextString(m) }
func (*LinkPointSourceRequest) ProtoMessage()    {}
func (*LinkPointSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{16}
}

func (m *LinkPointSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkPointSourceRequest.Unmarshal(m, b)
}
func (m *LinkPointSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkPointSourceRequest.Marshal(b, m, deterministic)
}
func (m *LinkPointSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkPointSourceRequest.Merge(m, src)
}
func (m *LinkPointSourceRequest) XXX_Size() int {
	return xxx_messageInfo_LinkPointSourceRequest.Size(m)
}
func (m *LinkPointSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkPointSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinkPointSourceRequest proto.InternalMessageInfo

func (m *LinkPointSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinkPointSourceRequest) GetPointSource() string {
	if m != nil {
		return m.PointSource
	}
	return ""
}

type LinkPointSourceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkPointSourceResponse) Reset()         { *m = LinkPointSourceResponse{} }
func (m *LinkPointSourceResponse) String() string { return proto.CompactTextString(m) }
func (*LinkPointSourceResponse) ProtoMessage()    {}
func (*LinkPointSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{17}
}

func (m *LinkPointSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkPointSourceResponse.Unmarshal(m, b)
}
func (m *LinkPointSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkPointSourceResponse.Marshal(b, m, deterministic)
}
func (m *LinkPointSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkPointSourceResponse.Merge(m, src)
}
func (m *LinkPointSourceResponse) XXX_Size() int {
	return xxx_messageInfo_LinkPointSourceResponse.Size(m)
}
func (m *LinkPointSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkPointSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LinkPointSourceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Brand)(nil), "topos.points.v1.Brand")
	proto.RegisterType((*LatLng)(nil), "topos.points.v1.LatLng")
	proto.RegisterType((*Point)(nil), "topos.points.v1.Point")
	proto.RegisterType((*PointSource)(nil), "topos.points.v1.PointSource")
	proto.RegisterType((*GetBrandRequest)(nil), "topos.points.v1.GetBrandRequest")
	proto.RegisterType((*CreateBrandRequest)(nil), "topos.points.v1.CreateBrandRequest")
	proto.RegisterType((*UpdateBrandRequest)(nil), "topos.points.v1.UpdateBrandRequest")
	proto.RegisterType((*DeleteBrandRequest)(nil), "topos.points.v1.DeleteBrandRequest")
	proto.RegisterType((*GetPointRequest)(nil), "topos.points.v1.GetPointRequest")
	proto.RegisterType((*CreatePointRequest)(nil), "topos.points.v1.CreatePointRequest")
	proto.RegisterType((*UpdatePointRequest)(nil), "topos.points.v1.UpdatePointRequest")
	proto.RegisterType((*DeletePointRequest)(nil), "topos.points.v1.DeletePointRequest")
	proto.RegisterType((*GetPointSourceRequest)(nil), "topos.points.v1.GetPointSourceRequest")
	proto.RegisterType((*CreatePointSourceRequest)(nil), "topos.points.v1.CreatePointSourceRequest")
	proto.RegisterType((*UpdatePointSourceRequest)(nil), "topos.points.v1.UpdatePointSourceRequest")
	proto.RegisterType((*DeletePointSourceRequest)(nil), "topos.points.v1.DeletePointSourceRequest")
	proto.RegisterType((*LinkPointSourceRequest)(nil), "topos.points.v1.LinkPointSourceRequest")
	proto.RegisterType((*LinkPointSourceResponse)(nil), "topos.points.v1.LinkPointSourceResponse")
}

func init() { proto.RegisterFile("topos/points/v1/points.proto", fileDescriptor_58bd33bd76af5b35) }

var fileDescriptor_58bd33bd76af5b35 = []byte{
	// 893 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcf, 0x6e, 0xfb, 0x44,
	0x10, 0x96, 0xd3, 0x26, 0x4d, 0xc6, 0x15, 0x25, 0x5b, 0x9a, 0xba, 0x6e, 0x24, 0x82, 0xab, 0x42,
	0x48, 0x8b, 0x4d, 0x9b, 0x13, 0xa9, 0x10, 0x10, 0xfe, 0x5d, 0x2a, 0x40, 0x01, 0x2e, 0x70, 0x88,
	0xdc, 0x66, 0x1b, 0x59, 0x4d, 0x6c, 0x13, 0x6f, 0x2a, 0x55, 0xa8, 0x17, 0xfa, 0x08, 0x1c, 0x10,
	0x77, 0x1e, 0x80, 0x23, 0xcf, 0xc0, 0x95, 0x2b, 0x47, 0x1e, 0x04, 0x79, 0x76, 0x1d, 0xff, 0x59,
	0xbb, 0x49, 0x94, 0xcb, 0xef, 0xe6, 0xdd, 0x19, 0xcf, 0xf7, 0xcd, 0xb7, 0xfb, 0x8d, 0x13, 0x68,
	0x32, 0xcf, 0xf7, 0x02, 0xcb, 0xf7, 0x1c, 0x97, 0x05, 0xd6, 0xc3, 0x85, 0x78, 0x32, 0xfd, 0x99,
	0xc7, 0x3c, 0xb2, 0x87, 0x51, 0x53, 0xec, 0x3d, 0x5c, 0xe8, 0xcd, 0xb1, 0xe7, 0x8d, 0x27, 0xd4,
	0xb2, 0x7d, 0xc7, 0xb2, 0x5d, 0xd7, 0x63, 0x36, 0x73, 0x3c, 0x57, 0xa4, 0xeb, 0xc7, 0x22, 0x8a,
	0xab, 0x9b, 0xf9, 0x9d, 0x45, 0xa7, 0x3e, 0x7b, 0x14, 0xc1, 0x37, 0xb3, 0x41, 0xe6, 0x4c, 0x69,
	0xc0, 0xec, 0xa9, 0xcf, 0x13, 0x8c, 0xbf, 0x14, 0x28, 0xf7, 0x67, 0xb6, 0x3b, 0x22, 0x04, 0xb6,
	0x5d, 0x7b, 0x4a, 0x35, 0xa5, 0xa5, 0xb4, 0x6b, 0x03, 0x7c, 0x26, 0x6f, 0xc1, 0xee, 0xc8, 0x09,
	0xfc, 0x89, 0xfd, 0x38, 0xc4, 0x58, 0x09, 0x63, 0xaa, 0xd8, 0xfb, 0x2a, 0x4c, 0xb9, 0x02, 0xf5,
	0x76, 0x46, 0x6d, 0x46, 0x87, 0x61, 0x69, 0x6d, 0xab, 0xa5, 0xb4, 0xd5, 0x4b, 0xdd, 0xe4, 0xb8,
	0x66, 0x84, 0x6b, 0x7e, 0x17, 0xe1, 0x0e, 0x80, 0xa7, 0x87, 0x1b, 0xe1, 0xcb, 0x73, 0x7f, 0xb4,
	0x78, 0x79, 0x7b, 0xf9, 0xcb, 0x3c, 0x3d, 0xdc, 0x30, 0xfa, 0x50, 0xb9, 0xb6, 0xd9, 0xb5, 0x3b,
	0x26, 0x3a, 0x54, 0x27, 0x36, 0x73, 0xd8, 0x7c, 0xc4, 0xe9, 0x2b, 0x83, 0xc5, 0x9a, 0x34, 0xa1,
	0x36, 0xf1, 0xdc, 0x31, 0x0f, 0x96, 0x30, 0x18, 0x6f, 0x18, 0x7f, 0x96, 0xa0, 0xfc, 0x4d, 0x28,
	0x74, 0x6e, 0xfb, 0x6f, 0x40, 0xf9, 0x26, 0xd4, 0x46, 0xf4, 0xcd, 0x17, 0x92, 0x28, 0x5b, 0xb2,
	0x28, 0x67, 0x50, 0xbf, 0xf3, 0x66, 0x53, 0x9b, 0x31, 0x3a, 0x1a, 0xda, 0xa3, 0xd1, 0x8c, 0x06,
	0x01, 0x76, 0x57, 0x1b, 0xbc, 0xbe, 0x08, 0x7c, 0xc2, 0xf7, 0x49, 0x17, 0xaa, 0x13, 0xef, 0x16,
	0xcf, 0x54, 0x2b, 0xa3, 0x02, 0x87, 0x66, 0xe6, 0x0a, 0x98, 0xbc, 0xd1, 0xc1, 0x22, 0x31, 0x2b,
	0x7b, 0x65, 0x13, 0xd9, 0x77, 0xd6, 0x92, 0xfd, 0xef, 0x12, 0xa8, 0x28, 0xd9, 0xb7, 0xde, 0x7c,
	0x76, 0x4b, 0x8b, 0x84, 0x43, 0xee, 0x91, 0x70, 0xb8, 0x78, 0x35, 0x84, 0x23, 0xb0, 0xcd, 0xec,
	0x71, 0xa0, 0x55, 0x5a, 0x5b, 0x21, 0xdd, 0xf0, 0x39, 0x2b, 0xe6, 0xce, 0x26, 0x62, 0x56, 0xd7,
	0x12, 0xf3, 0x14, 0xf6, 0xbe, 0xa4, 0x0c, 0x0d, 0x38, 0xa0, 0x3f, 0xcd, 0x69, 0x90, 0x7b, 0x11,
	0x8d, 0x3e, 0x90, 0x4f, 0x11, 0x31, 0x95, 0x79, 0x1e, 0x5d, 0x4f, 0x05, 0x31, 0x1b, 0x52, 0xf3,
	0x3c, 0x9b, 0x27, 0x85, 0x35, 0xbe, 0x47, 0xe0, 0x0d, 0x6a, 0xb4, 0x81, 0x7c, 0x46, 0x27, 0x34,
	0x53, 0x23, 0x8f, 0x31, 0x6f, 0x0c, 0xef, 0xc9, 0x4a, 0x8d, 0xa5, 0x32, 0xcf, 0xa3, 0xeb, 0x53,
	0x44, 0x8a, 0x67, 0xf3, 0xa4, 0xb8, 0xb1, 0x0d, 0x6a, 0x2c, 0x1a, 0x5b, 0xca, 0xf8, 0x0c, 0x0e,
	0xa2, 0xc6, 0xb8, 0x01, 0x5e, 0x4a, 0x0e, 0x40, 0x4b, 0xb4, 0x97, 0xce, 0x6f, 0x40, 0x25, 0xc0,
	0x0d, 0xf1, 0x86, 0x58, 0x91, 0x8f, 0x60, 0x17, 0x39, 0x0d, 0x45, 0xb4, 0x84, 0xfc, 0x9b, 0xf9,
	0xfc, 0x45, 0x49, 0xd5, 0x8f, 0x17, 0xc6, 0x8f, 0xa0, 0x25, 0xf4, 0x48, 0x83, 0x66, 0x8b, 0x2b,
	0xeb, 0x16, 0x37, 0x41, 0x4b, 0x08, 0xb5, 0x5c, 0x81, 0xaf, 0xa1, 0x71, 0xed, 0xb8, 0xf7, 0xab,
	0x65, 0x87, 0x13, 0x42, 0xea, 0xbd, 0x96, 0x26, 0x70, 0x04, 0x87, 0x52, 0xc1, 0xc0, 0xf7, 0xdc,
	0x80, 0x5e, 0xfe, 0xab, 0x42, 0x05, 0xf7, 0x03, 0x62, 0x43, 0x35, 0xf2, 0x15, 0x69, 0x49, 0xdd,
	0x65, 0x2c, 0xa7, 0x17, 0xdc, 0x7a, 0xe3, 0xf8, 0x97, 0x7f, 0xfe, 0xfb, 0xb5, 0x74, 0x40, 0xf6,
	0xc3, 0x6f, 0xf4, 0xcf, 0x21, 0xc3, 0x0f, 0xd1, 0x07, 0x81, 0xd5, 0x79, 0x22, 0x14, 0xd4, 0x84,
	0x27, 0xc9, 0x89, 0x54, 0x43, 0x76, 0x6c, 0x21, 0xd0, 0x11, 0x02, 0xed, 0x1b, 0x10, 0x02, 0x71,
	0x88, 0x9e, 0xf8, 0xda, 0x30, 0x50, 0x13, 0xb6, 0xcd, 0x81, 0x91, 0x4d, 0x5d, 0x08, 0xd3, 0x46,
	0x18, 0x43, 0x3f, 0xc2, 0x7e, 0xb0, 0xbe, 0x99, 0xee, 0x2a, 0x42, 0x1d, 0x83, 0x9a, 0x30, 0x7a,
	0x0e, 0xaa, 0x3c, 0x06, 0xf4, 0x86, 0x34, 0xf3, 0x3e, 0x0f, 0x7f, 0x89, 0x44, 0x2a, 0x76, 0x72,
	0x55, 0xe4, 0x07, 0xc5, 0x3f, 0xc1, 0xb9, 0x07, 0x95, 0x34, 0xa4, 0x5e, 0xe0, 0xe2, 0xbc, 0x83,
	0x12, 0x3f, 0xae, 0x3a, 0x4f, 0xb1, 0x82, 0x1c, 0xa5, 0x48, 0xc1, 0x95, 0x80, 0xd2, 0x0a, 0x62,
	0xd4, 0x4c, 0xc3, 0xf5, 0xc4, 0xc7, 0x6e, 0xa1, 0x60, 0x11, 0xaa, 0x3c, 0x6f, 0xd6, 0x51, 0x30,
	0x6e, 0xef, 0x59, 0x81, 0xd7, 0xd2, 0x13, 0x89, 0xbc, 0x5d, 0x28, 0x64, 0xca, 0x82, 0xfa, 0x8b,
	0xbe, 0x37, 0xce, 0x10, 0xf5, 0x94, 0x9c, 0xc4, 0xa8, 0xdc, 0x96, 0x81, 0xd5, 0xb1, 0x12, 0x96,
	0x44, 0x16, 0xbf, 0x29, 0x50, 0x97, 0x46, 0x1d, 0x79, 0xb7, 0xc0, 0x14, 0x6b, 0x73, 0xf9, 0x00,
	0xb9, 0x74, 0x0d, 0xce, 0x85, 0xd3, 0x88, 0xd9, 0x3c, 0xa5, 0xe8, 0xf4, 0x52, 0x33, 0x84, 0xfc,
	0xa1, 0x40, 0x5d, 0x9a, 0x87, 0x39, 0xcc, 0x8a, 0x66, 0xe6, 0x12, 0x66, 0x5f, 0x20, 0xb3, 0x8f,
	0xf5, 0xf7, 0xe3, 0x1b, 0x21, 0x90, 0xcd, 0x97, 0x25, 0xcb, 0xd0, 0x7c, 0x56, 0xa0, 0x2e, 0x4d,
	0xd6, 0x1c, 0x9a, 0x45, 0xd3, 0xb7, 0xf0, 0xf2, 0x88, 0x63, 0xec, 0xac, 0x74, 0x8c, 0xbf, 0x2b,
	0xb0, 0x97, 0x19, 0xaf, 0xe4, 0x1d, 0xf9, 0x47, 0x55, 0xee, 0x44, 0xd7, 0xdb, 0xcb, 0x13, 0xf9,
	0xa4, 0x36, 0xba, 0xc8, 0xe9, 0x3d, 0xa3, 0xbd, 0x02, 0xa7, 0xde, 0xc4, 0x71, 0xef, 0x7b, 0x4a,
	0xa7, 0xaf, 0xfd, 0xd0, 0xc8, 0xfc, 0x6f, 0xba, 0xe2, 0x4f, 0x37, 0x15, 0x6c, 0xb9, 0xfb, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0x2a, 0x59, 0xbd, 0x58, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PointsClient is the client API for Points service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PointsClient interface {
	// Gets a brand.
	GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Creates a brand.
	CreateBrand(ctx context.Context, in *CreateBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Updates the value of an existing brand.
	UpdateBrand(ctx context.Context, in *UpdateBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a point.
	GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error)
	// Updates the value of an existing point.
	UpdatePoint(ctx context.Context, in *UpdatePointRequest, opts ...grpc.CallOption) (*Point, error)
	// Deletes a point.
	DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a point source.
	GetPointSource(ctx context.Context, in *GetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error)
	// Creates a point source.
	CreatePointSource(ctx context.Context, in *CreatePointSourceRequest, opts ...grpc.CallOption) (*PointSource, error)
	// Updates the value of an existing point source.
	UpdatePointSource(ctx context.Context, in *UpdatePointSourceRequest, opts ...grpc.CallOption) (*PointSource, error)
	// Deletes a point source.
	DeletePointSource(ctx context.Context, in *DeletePointSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Associates point sources with a point.
	LinkPointSource(ctx context.Context, in *LinkPointSourceRequest, opts ...grpc.CallOption) (*LinkPointSourceResponse, error)
}

type pointsClient struct {
	cc *grpc.ClientConn
}

func NewPointsClient(cc *grpc.ClientConn) PointsClient {
	return &pointsClient{cc}
}

func (c *pointsClient) GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CreateBrand(ctx context.Context, in *CreateBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CreateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) UpdateBrand(ctx context.Context, in *UpdateBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/UpdateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) UpdatePoint(ctx context.Context, in *UpdatePointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/UpdatePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeletePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetPointSource(ctx context.Context, in *GetPointSourceRequest, opts ...grpc.CallOption) (*PointSource, error) {
	out := new(PointSource)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetPointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CreatePointSource(ctx context.Context, in *CreatePointSourceRequest, opts ...grpc.CallOption) (*PointSource, error) {
	out := new(PointSource)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CreatePointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) UpdatePointSource(ctx context.Context, in *UpdatePointSourceRequest, opts ...grpc.CallOption) (*PointSource, error) {
	out := new(PointSource)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/UpdatePointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeletePointSource(ctx context.Context, in *DeletePointSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeletePointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) LinkPointSource(ctx context.Context, in *LinkPointSourceRequest, opts ...grpc.CallOption) (*LinkPointSourceResponse, error) {
	out := new(LinkPointSourceResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/LinkPointSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointsServer is the server API for Points service.
type PointsServer interface {
	// Gets a brand.
	GetBrand(context.Context, *GetBrandRequest) (*Brand, error)
	// Creates a brand.
	CreateBrand(context.Context, *CreateBrandRequest) (*Brand, error)
	// Updates the value of an existing brand.
	UpdateBrand(context.Context, *UpdateBrandRequest) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(context.Context, *DeleteBrandRequest) (*empty.Empty, error)
	// Gets a point.
	GetPoint(context.Context, *GetPointRequest) (*Point, error)
	// Updates the value of an existing point.
	UpdatePoint(context.Context, *UpdatePointRequest) (*Point, error)
	// Deletes a point.
	DeletePoint(context.Context, *DeletePointRequest) (*empty.Empty, error)
	// Gets a point source.
	GetPointSource(context.Context, *GetPointSourceRequest) (*PointSource, error)
	// Creates a point source.
	CreatePointSource(context.Context, *CreatePointSourceRequest) (*PointSource, error)
	// Updates the value of an existing point source.
	UpdatePointSource(context.Context, *UpdatePointSourceRequest) (*PointSource, error)
	// Deletes a point source.
	DeletePointSource(context.Context, *DeletePointSourceRequest) (*empty.Empty, error)
	// Associates point sources with a point.
	LinkPointSource(context.Context, *LinkPointSourceRequest) (*LinkPointSourceResponse, error)
}

func RegisterPointsServer(s *grpc.Server, srv PointsServer) {
	s.RegisterService(&_Points_serviceDesc, srv)
}

func _Points_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetBrand(ctx, req.(*GetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CreateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CreateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CreateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CreateBrand(ctx, req.(*CreateBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_UpdateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).UpdateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/UpdateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).UpdateBrand(ctx, req.(*UpdateBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeleteBrand(ctx, req.(*DeleteBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetPoint(ctx, req.(*GetPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_UpdatePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).UpdatePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/UpdatePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).UpdatePoint(ctx, req.(*UpdatePointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeletePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeletePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeletePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeletePoint(ctx, req.(*DeletePointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetPointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetPointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetPointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetPointSource(ctx, req.(*GetPointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CreatePointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CreatePointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CreatePointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CreatePointSource(ctx, req.(*CreatePointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_UpdatePointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).UpdatePointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/UpdatePointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).UpdatePointSource(ctx, req.(*UpdatePointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeletePointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeletePointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeletePointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeletePointSource(ctx, req.(*DeletePointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_LinkPointSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkPointSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).LinkPointSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/LinkPointSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).LinkPointSource(ctx, req.(*LinkPointSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Points_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.points.v1.Points",
	HandlerType: (*PointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrand",
			Handler:    _Points_GetBrand_Handler,
		},
		{
			MethodName: "CreateBrand",
			Handler:    _Points_CreateBrand_Handler,
		},
		{
			MethodName: "UpdateBrand",
			Handler:    _Points_UpdateBrand_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _Points_DeleteBrand_Handler,
		},
		{
			MethodName: "GetPoint",
			Handler:    _Points_GetPoint_Handler,
		},
		{
			MethodName: "UpdatePoint",
			Handler:    _Points_UpdatePoint_Handler,
		},
		{
			MethodName: "DeletePoint",
			Handler:    _Points_DeletePoint_Handler,
		},
		{
			MethodName: "GetPointSource",
			Handler:    _Points_GetPointSource_Handler,
		},
		{
			MethodName: "CreatePointSource",
			Handler:    _Points_CreatePointSource_Handler,
		},
		{
			MethodName: "UpdatePointSource",
			Handler:    _Points_UpdatePointSource_Handler,
		},
		{
			MethodName: "DeletePointSource",
			Handler:    _Points_DeletePointSource_Handler,
		},
		{
			MethodName: "LinkPointSource",
			Handler:    _Points_LinkPointSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topos/points/v1/points.proto",
}
