// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topos/points/v1/points.proto

package points

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PolygonEncoding int32

const (
	PolygonEncoding_S2      PolygonEncoding = 0
	PolygonEncoding_GEOJSON PolygonEncoding = 1
)

var PolygonEncoding_name = map[int32]string{
	0: "S2",
	1: "GEOJSON",
}

var PolygonEncoding_value = map[string]int32{
	"S2":      0,
	"GEOJSON": 1,
}

func (x PolygonEncoding) String() string {
	return proto.EnumName(PolygonEncoding_name, int32(x))
}

func (PolygonEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{0}
}

type FeatureStats struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float64  `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Average              float64  `protobuf:"fixed64,3,opt,name=average,proto3" json:"average,omitempty"`
	Median               float64  `protobuf:"fixed64,4,opt,name=median,proto3" json:"median,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureStats) Reset()         { *m = FeatureStats{} }
func (m *FeatureStats) String() string { return proto.CompactTextString(m) }
func (*FeatureStats) ProtoMessage()    {}
func (*FeatureStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{0}
}

func (m *FeatureStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats.Unmarshal(m, b)
}
func (m *FeatureStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats.Marshal(b, m, deterministic)
}
func (m *FeatureStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats.Merge(m, src)
}
func (m *FeatureStats) XXX_Size() int {
	return xxx_messageInfo_FeatureStats.Size(m)
}
func (m *FeatureStats) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats proto.InternalMessageInfo

func (m *FeatureStats) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *FeatureStats) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *FeatureStats) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *FeatureStats) GetMedian() float64 {
	if m != nil {
		return m.Median
	}
	return 0
}

type Brand struct {
	// The name of the point brand. It must have the format `"brands/{brand}"`.
	// `{brand}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the brand.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The formatted, single-line address of the brand's headquarters.
	FormattedAddress string `protobuf:"bytes,3,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The email of the brand.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// The realestate email of the brand.
	RealestateEmail string `protobuf:"bytes,5,opt,name=realestate_email,json=realestateEmail,proto3" json:"realestate_email,omitempty"`
	// The phone number of the brand.
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The contacts for the brand.
	Contacts []*Brand_Contact `protobuf:"bytes,7,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// The [2017 NAICS
	// code](https://www.census.gov/cgi-bin/sssd/naics/naicsrch?chart=2017) of the
	// brand.
	Naics string `protobuf:"bytes,8,opt,name=naics,proto3" json:"naics,omitempty"`
	// The postal code of the brand's headquarters.
	PostalCode string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// The feature set statistics for this brand's locations.
	FeatureSetFeatureStats map[string]*FeatureStats `protobuf:"bytes,10,rep,name=feature_set_feature_stats,json=featureSetFeatureStats,proto3" json:"feature_set_feature_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The brand's location preferences by region.
	RegionPreferences map[string]*Brand_Preferences `protobuf:"bytes,11,rep,name=region_preferences,json=regionPreferences,proto3" json:"region_preferences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A list of brand tags.
	Tags []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	// Exclude the brand from results.
	Exclude bool `protobuf:"varint,13,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The creation timestamp of the brand.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of an brand.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TotalLocations       int64                `protobuf:"varint,16,opt,name=total_locations,json=totalLocations,proto3" json:"total_locations,omitempty"`
	StatesOfExpansion    []string             `protobuf:"bytes,17,rep,name=states_of_expansion,json=statesOfExpansion,proto3" json:"states_of_expansion,omitempty"`
	StatesOfOperation    []string             `protobuf:"bytes,18,rep,name=states_of_operation,json=statesOfOperation,proto3" json:"states_of_operation,omitempty"`
	Website              string               `protobuf:"bytes,19,opt,name=website,proto3" json:"website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Brand) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Brand) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Brand) GetRealestateEmail() string {
	if m != nil {
		return m.RealestateEmail
	}
	return ""
}

func (m *Brand) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Brand) GetContacts() []*Brand_Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Brand) GetNaics() string {
	if m != nil {
		return m.Naics
	}
	return ""
}

func (m *Brand) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Brand) GetFeatureSetFeatureStats() map[string]*FeatureStats {
	if m != nil {
		return m.FeatureSetFeatureStats
	}
	return nil
}

func (m *Brand) GetRegionPreferences() map[string]*Brand_Preferences {
	if m != nil {
		return m.RegionPreferences
	}
	return nil
}

func (m *Brand) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Brand) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Brand) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Brand) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Brand) GetTotalLocations() int64 {
	if m != nil {
		return m.TotalLocations
	}
	return 0
}

func (m *Brand) GetStatesOfExpansion() []string {
	if m != nil {
		return m.StatesOfExpansion
	}
	return nil
}

func (m *Brand) GetStatesOfOperation() []string {
	if m != nil {
		return m.StatesOfOperation
	}
	return nil
}

func (m *Brand) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

type Brand_Contact struct {
	// The full name of the contact.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The title of the contact.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The phonenumber of the contact.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// The phone number of the contact.
	PhoneNumber          string   `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Contact) Reset()         { *m = Brand_Contact{} }
func (m *Brand_Contact) String() string { return proto.CompactTextString(m) }
func (*Brand_Contact) ProtoMessage()    {}
func (*Brand_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1, 0}
}

func (m *Brand_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Contact.Unmarshal(m, b)
}
func (m *Brand_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Contact.Marshal(b, m, deterministic)
}
func (m *Brand_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Contact.Merge(m, src)
}
func (m *Brand_Contact) XXX_Size() int {
	return xxx_messageInfo_Brand_Contact.Size(m)
}
func (m *Brand_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Contact proto.InternalMessageInfo

func (m *Brand_Contact) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Brand_Contact) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Brand_Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Brand_Contact) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type Brand_Preferences struct {
	// The prefered square footage of the brand.
	PreferredGla string `protobuf:"bytes,1,opt,name=preferred_gla,json=preferredGla,proto3" json:"preferred_gla,omitempty"`
	// The percentage of locations where this brand shares a building.
	Inline float64 `protobuf:"fixed64,2,opt,name=inline,proto3" json:"inline,omitempty"`
	// The percentage of locations where this brand occupies a stand-alone
	// building.
	StandAlone           float64  `protobuf:"fixed64,3,opt,name=stand_alone,json=standAlone,proto3" json:"stand_alone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand_Preferences) Reset()         { *m = Brand_Preferences{} }
func (m *Brand_Preferences) String() string { return proto.CompactTextString(m) }
func (*Brand_Preferences) ProtoMessage()    {}
func (*Brand_Preferences) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{1, 2}
}

func (m *Brand_Preferences) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand_Preferences.Unmarshal(m, b)
}
func (m *Brand_Preferences) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand_Preferences.Marshal(b, m, deterministic)
}
func (m *Brand_Preferences) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand_Preferences.Merge(m, src)
}
func (m *Brand_Preferences) XXX_Size() int {
	return xxx_messageInfo_Brand_Preferences.Size(m)
}
func (m *Brand_Preferences) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand_Preferences.DiscardUnknown(m)
}

var xxx_messageInfo_Brand_Preferences proto.InternalMessageInfo

func (m *Brand_Preferences) GetPreferredGla() string {
	if m != nil {
		return m.PreferredGla
	}
	return ""
}

func (m *Brand_Preferences) GetInline() float64 {
	if m != nil {
		return m.Inline
	}
	return 0
}

func (m *Brand_Preferences) GetStandAlone() float64 {
	if m != nil {
		return m.StandAlone
	}
	return 0
}

type LatLng struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}
func (*LatLng) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{2}
}

func (m *LatLng) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLng.Unmarshal(m, b)
}
func (m *LatLng) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLng.Marshal(b, m, deterministic)
}
func (m *LatLng) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLng.Merge(m, src)
}
func (m *LatLng) XXX_Size() int {
	return xxx_messageInfo_LatLng.Size(m)
}
func (m *LatLng) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLng.DiscardUnknown(m)
}

var xxx_messageInfo_LatLng proto.InternalMessageInfo

func (m *LatLng) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LatLng) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Point struct {
	// The name of the point. It must have the format `"points/{point}"`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the point.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The geocoded point address.
	Location *LatLng `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// The formatted, single-line address.
	FormattedAddress string `protobuf:"bytes,5,opt,name=formatted_address,json=formattedAddress,proto3" json:"formatted_address,omitempty"`
	// The name of the point's brand if it has one.
	Brand string `protobuf:"bytes,7,opt,name=brand,proto3" json:"brand,omitempty"`
	// A list of point tags.
	Tags []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	// Count of points with this point's brand.
	LocationCount        int64    `protobuf:"varint,9,opt,name=location_count,json=locationCount,proto3" json:"location_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{3}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Point) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Point) GetLocation() *LatLng {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Point) GetFormattedAddress() string {
	if m != nil {
		return m.FormattedAddress
	}
	return ""
}

func (m *Point) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Point) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Point) GetLocationCount() int64 {
	if m != nil {
		return m.LocationCount
	}
	return 0
}

type Tag struct {
	// The name of the tag. It must have the format `"tags/{tag}"`. `{tag}`
	// must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the tag.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Exclude tag from results.
	Exclude bool `protobuf:"varint,3,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// The plural display name of the tag.
	PluralDisplayName string `protobuf:"bytes,4,opt,name=plural_display_name,json=pluralDisplayName,proto3" json:"plural_display_name,omitempty"`
	// Is the tag a category.
	IsCategory           bool     `protobuf:"varint,5,opt,name=is_category,json=isCategory,proto3" json:"is_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{4}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Tag) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Tag) GetPluralDisplayName() string {
	if m != nil {
		return m.PluralDisplayName
	}
	return ""
}

func (m *Tag) GetIsCategory() bool {
	if m != nil {
		return m.IsCategory
	}
	return false
}

type Region struct {
	// The name of the region. It must have the format
	// `"regionTypes/{region_type}/regions/{region}"`.
	// `{region}` must match the [regular
	// expression](https://github.com/google/re2/wiki/Syntax)
	// `^[a-z\d]+(-[a-z\d]+)*$`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The WKB-encoded region geometry.
	Geometry             []byte   `protobuf:"bytes,2,opt,name=geometry,proto3" json:"geometry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{5}
}

func (m *Region) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Region.Unmarshal(m, b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Region.Marshal(b, m, deterministic)
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return xxx_messageInfo_Region.Size(m)
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Region) GetGeometry() []byte {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type GetBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandRequest) Reset()         { *m = GetBrandRequest{} }
func (m *GetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandRequest) ProtoMessage()    {}
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{6}
}

func (m *GetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandRequest.Unmarshal(m, b)
}
func (m *GetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandRequest.Merge(m, src)
}
func (m *GetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandRequest.Size(m)
}
func (m *GetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandRequest proto.InternalMessageInfo

func (m *GetBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListBrandsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsRequest) Reset()         { *m = ListBrandsRequest{} }
func (m *ListBrandsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBrandsRequest) ProtoMessage()    {}
func (*ListBrandsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{7}
}

func (m *ListBrandsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsRequest.Unmarshal(m, b)
}
func (m *ListBrandsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsRequest.Marshal(b, m, deterministic)
}
func (m *ListBrandsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsRequest.Merge(m, src)
}
func (m *ListBrandsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBrandsRequest.Size(m)
}
func (m *ListBrandsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsRequest proto.InternalMessageInfo

func (m *ListBrandsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBrandsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListBrandsResponse struct {
	Brands []*Brand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandsResponse) Reset()         { *m = ListBrandsResponse{} }
func (m *ListBrandsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBrandsResponse) ProtoMessage()    {}
func (*ListBrandsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{8}
}

func (m *ListBrandsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandsResponse.Unmarshal(m, b)
}
func (m *ListBrandsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandsResponse.Marshal(b, m, deterministic)
}
func (m *ListBrandsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandsResponse.Merge(m, src)
}
func (m *ListBrandsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBrandsResponse.Size(m)
}
func (m *ListBrandsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandsResponse proto.InternalMessageInfo

func (m *ListBrandsResponse) GetBrands() []*Brand {
	if m != nil {
		return m.Brands
	}
	return nil
}

func (m *ListBrandsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetBrandRequest struct {
	Brand                *Brand   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBrandRequest) Reset()         { *m = SetBrandRequest{} }
func (m *SetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*SetBrandRequest) ProtoMessage()    {}
func (*SetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{9}
}

func (m *SetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBrandRequest.Unmarshal(m, b)
}
func (m *SetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBrandRequest.Marshal(b, m, deterministic)
}
func (m *SetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBrandRequest.Merge(m, src)
}
func (m *SetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_SetBrandRequest.Size(m)
}
func (m *SetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBrandRequest proto.InternalMessageInfo

func (m *SetBrandRequest) GetBrand() *Brand {
	if m != nil {
		return m.Brand
	}
	return nil
}

type DeleteBrandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBrandRequest) Reset()         { *m = DeleteBrandRequest{} }
func (m *DeleteBrandRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBrandRequest) ProtoMessage()    {}
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{10}
}

func (m *DeleteBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBrandRequest.Unmarshal(m, b)
}
func (m *DeleteBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBrandRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBrandRequest.Merge(m, src)
}
func (m *DeleteBrandRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBrandRequest.Size(m)
}
func (m *DeleteBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBrandRequest proto.InternalMessageInfo

func (m *DeleteBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPointRequest) Reset()         { *m = GetPointRequest{} }
func (m *GetPointRequest) String() string { return proto.CompactTextString(m) }
func (*GetPointRequest) ProtoMessage()    {}
func (*GetPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{11}
}

func (m *GetPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPointRequest.Unmarshal(m, b)
}
func (m *GetPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPointRequest.Marshal(b, m, deterministic)
}
func (m *GetPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPointRequest.Merge(m, src)
}
func (m *GetPointRequest) XXX_Size() int {
	return xxx_messageInfo_GetPointRequest.Size(m)
}
func (m *GetPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPointRequest proto.InternalMessageInfo

func (m *GetPointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetPointRequest struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPointRequest) Reset()         { *m = SetPointRequest{} }
func (m *SetPointRequest) String() string { return proto.CompactTextString(m) }
func (*SetPointRequest) ProtoMessage()    {}
func (*SetPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{12}
}

func (m *SetPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPointRequest.Unmarshal(m, b)
}
func (m *SetPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPointRequest.Marshal(b, m, deterministic)
}
func (m *SetPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPointRequest.Merge(m, src)
}
func (m *SetPointRequest) XXX_Size() int {
	return xxx_messageInfo_SetPointRequest.Size(m)
}
func (m *SetPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPointRequest proto.InternalMessageInfo

func (m *SetPointRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type DeletePointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePointRequest) Reset()         { *m = DeletePointRequest{} }
func (m *DeletePointRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePointRequest) ProtoMessage()    {}
func (*DeletePointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{13}
}

func (m *DeletePointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePointRequest.Unmarshal(m, b)
}
func (m *DeletePointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePointRequest.Marshal(b, m, deterministic)
}
func (m *DeletePointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePointRequest.Merge(m, src)
}
func (m *DeletePointRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePointRequest.Size(m)
}
func (m *DeletePointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePointRequest proto.InternalMessageInfo

func (m *DeletePointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SearchPointsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return points with a given brand.
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return points with the given tags.
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Return points within a region.
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPointsRequest) Reset()         { *m = SearchPointsRequest{} }
func (m *SearchPointsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPointsRequest) ProtoMessage()    {}
func (*SearchPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{14}
}

func (m *SearchPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPointsRequest.Unmarshal(m, b)
}
func (m *SearchPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPointsRequest.Marshal(b, m, deterministic)
}
func (m *SearchPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPointsRequest.Merge(m, src)
}
func (m *SearchPointsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPointsRequest.Size(m)
}
func (m *SearchPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPointsRequest proto.InternalMessageInfo

func (m *SearchPointsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchPointsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchPointsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *SearchPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *SearchPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type SearchPointsResponse struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPointsResponse) Reset()         { *m = SearchPointsResponse{} }
func (m *SearchPointsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchPointsResponse) ProtoMessage()    {}
func (*SearchPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{15}
}

func (m *SearchPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPointsResponse.Unmarshal(m, b)
}
func (m *SearchPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPointsResponse.Marshal(b, m, deterministic)
}
func (m *SearchPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPointsResponse.Merge(m, src)
}
func (m *SearchPointsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchPointsResponse.Size(m)
}
func (m *SearchPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPointsResponse proto.InternalMessageInfo

func (m *SearchPointsResponse) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *SearchPointsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type PolygonSearchPointsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return points with a given brand.
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return points with the given tags.
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// The polygon data's encoding.
	PolygonEncoding PolygonEncoding `protobuf:"varint,5,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonEncoding" json:"polygon_encoding,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonSearchPointsRequest) Reset()         { *m = PolygonSearchPointsRequest{} }
func (m *PolygonSearchPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonSearchPointsRequest) ProtoMessage()    {}
func (*PolygonSearchPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{16}
}

func (m *PolygonSearchPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonSearchPointsRequest.Unmarshal(m, b)
}
func (m *PolygonSearchPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonSearchPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonSearchPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonSearchPointsRequest.Merge(m, src)
}
func (m *PolygonSearchPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonSearchPointsRequest.Size(m)
}
func (m *PolygonSearchPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonSearchPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonSearchPointsRequest proto.InternalMessageInfo

func (m *PolygonSearchPointsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PolygonSearchPointsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *PolygonSearchPointsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PolygonSearchPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PolygonSearchPointsRequest) GetPolygonEncoding() PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonEncoding_S2
}

func (m *PolygonSearchPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonSearchPointsResponse struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonSearchPointsResponse) Reset()         { *m = PolygonSearchPointsResponse{} }
func (m *PolygonSearchPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonSearchPointsResponse) ProtoMessage()    {}
func (*PolygonSearchPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{17}
}

func (m *PolygonSearchPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonSearchPointsResponse.Unmarshal(m, b)
}
func (m *PolygonSearchPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonSearchPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonSearchPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonSearchPointsResponse.Merge(m, src)
}
func (m *PolygonSearchPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonSearchPointsResponse.Size(m)
}
func (m *PolygonSearchPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonSearchPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonSearchPointsResponse proto.InternalMessageInfo

func (m *PolygonSearchPointsResponse) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *PolygonSearchPointsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type RadiusSearchPointsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return points with a given brand.
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// Return points with the given tags.
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// An S2 leaf cell ID to use as the center of the area inclosed by the radius.
	Center *LatLng `protobuf:"bytes,5,opt,name=center,proto3" json:"center,omitempty"`
	// A radius in meters.
	Radius               float64  `protobuf:"fixed64,6,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusSearchPointsRequest) Reset()         { *m = RadiusSearchPointsRequest{} }
func (m *RadiusSearchPointsRequest) String() string { return proto.CompactTextString(m) }
func (*RadiusSearchPointsRequest) ProtoMessage()    {}
func (*RadiusSearchPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{18}
}

func (m *RadiusSearchPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusSearchPointsRequest.Unmarshal(m, b)
}
func (m *RadiusSearchPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusSearchPointsRequest.Marshal(b, m, deterministic)
}
func (m *RadiusSearchPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusSearchPointsRequest.Merge(m, src)
}
func (m *RadiusSearchPointsRequest) XXX_Size() int {
	return xxx_messageInfo_RadiusSearchPointsRequest.Size(m)
}
func (m *RadiusSearchPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusSearchPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusSearchPointsRequest proto.InternalMessageInfo

func (m *RadiusSearchPointsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *RadiusSearchPointsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *RadiusSearchPointsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *RadiusSearchPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *RadiusSearchPointsRequest) GetCenter() *LatLng {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *RadiusSearchPointsRequest) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type RadiusSearchPointsResponse struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusSearchPointsResponse) Reset()         { *m = RadiusSearchPointsResponse{} }
func (m *RadiusSearchPointsResponse) String() string { return proto.CompactTextString(m) }
func (*RadiusSearchPointsResponse) ProtoMessage()    {}
func (*RadiusSearchPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{19}
}

func (m *RadiusSearchPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusSearchPointsResponse.Unmarshal(m, b)
}
func (m *RadiusSearchPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusSearchPointsResponse.Marshal(b, m, deterministic)
}
func (m *RadiusSearchPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusSearchPointsResponse.Merge(m, src)
}
func (m *RadiusSearchPointsResponse) XXX_Size() int {
	return xxx_messageInfo_RadiusSearchPointsResponse.Size(m)
}
func (m *RadiusSearchPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusSearchPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusSearchPointsResponse proto.InternalMessageInfo

func (m *RadiusSearchPointsResponse) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *RadiusSearchPointsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagRequest) Reset()         { *m = GetTagRequest{} }
func (m *GetTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest) ProtoMessage()    {}
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{20}
}

func (m *GetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest.Unmarshal(m, b)
}
func (m *GetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest.Marshal(b, m, deterministic)
}
func (m *GetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest.Merge(m, src)
}
func (m *GetTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest.Size(m)
}
func (m *GetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest proto.InternalMessageInfo

func (m *GetTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetTagRequest struct {
	Tag                  *Tag     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTagRequest) Reset()         { *m = SetTagRequest{} }
func (m *SetTagRequest) String() string { return proto.CompactTextString(m) }
func (*SetTagRequest) ProtoMessage()    {}
func (*SetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{21}
}

func (m *SetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRequest.Unmarshal(m, b)
}
func (m *SetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRequest.Marshal(b, m, deterministic)
}
func (m *SetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRequest.Merge(m, src)
}
func (m *SetTagRequest) XXX_Size() int {
	return xxx_messageInfo_SetTagRequest.Size(m)
}
func (m *SetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRequest proto.InternalMessageInfo

func (m *SetTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type ListTagsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsRequest) Reset()         { *m = ListTagsRequest{} }
func (m *ListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest) ProtoMessage()    {}
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{22}
}

func (m *ListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest.Unmarshal(m, b)
}
func (m *ListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest.Merge(m, src)
}
func (m *ListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest.Size(m)
}
func (m *ListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest proto.InternalMessageInfo

func (m *ListTagsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTagsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListTagsResponse struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsResponse) Reset()         { *m = ListTagsResponse{} }
func (m *ListTagsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTagsResponse) ProtoMessage()    {}
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{23}
}

func (m *ListTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsResponse.Unmarshal(m, b)
}
func (m *ListTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsResponse.Marshal(b, m, deterministic)
}
func (m *ListTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsResponse.Merge(m, src)
}
func (m *ListTagsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTagsResponse.Size(m)
}
func (m *ListTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsResponse proto.InternalMessageInfo

func (m *ListTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListTagsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeleteTagRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{24}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CountBrandPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given brands.
	Brands               []string `protobuf:"bytes,2,rep,name=brands,proto3" json:"brands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountBrandPointsRequest) Reset()         { *m = CountBrandPointsRequest{} }
func (m *CountBrandPointsRequest) String() string { return proto.CompactTextString(m) }
func (*CountBrandPointsRequest) ProtoMessage()    {}
func (*CountBrandPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{25}
}

func (m *CountBrandPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountBrandPointsRequest.Unmarshal(m, b)
}
func (m *CountBrandPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountBrandPointsRequest.Marshal(b, m, deterministic)
}
func (m *CountBrandPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountBrandPointsRequest.Merge(m, src)
}
func (m *CountBrandPointsRequest) XXX_Size() int {
	return xxx_messageInfo_CountBrandPointsRequest.Size(m)
}
func (m *CountBrandPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountBrandPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountBrandPointsRequest proto.InternalMessageInfo

func (m *CountBrandPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CountBrandPointsRequest) GetBrands() []string {
	if m != nil {
		return m.Brands
	}
	return nil
}

type CountBrandPointsResponse struct {
	// Map of brand IDs to point counts.
	BrandPoints          map[string]int64 `protobuf:"bytes,1,rep,name=brand_points,json=brandPoints,proto3" json:"brand_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountBrandPointsResponse) Reset()         { *m = CountBrandPointsResponse{} }
func (m *CountBrandPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CountBrandPointsResponse) ProtoMessage()    {}
func (*CountBrandPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{26}
}

func (m *CountBrandPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountBrandPointsResponse.Unmarshal(m, b)
}
func (m *CountBrandPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountBrandPointsResponse.Marshal(b, m, deterministic)
}
func (m *CountBrandPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountBrandPointsResponse.Merge(m, src)
}
func (m *CountBrandPointsResponse) XXX_Size() int {
	return xxx_messageInfo_CountBrandPointsResponse.Size(m)
}
func (m *CountBrandPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountBrandPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountBrandPointsResponse proto.InternalMessageInfo

func (m *CountBrandPointsResponse) GetBrandPoints() map[string]int64 {
	if m != nil {
		return m.BrandPoints
	}
	return nil
}

type PolygonCountBrandPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given brands.
	Brands []string `protobuf:"bytes,2,rep,name=brands,proto3" json:"brands,omitempty"`
	// The polygon data's encoding.
	PolygonEncoding PolygonEncoding `protobuf:"varint,3,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonEncoding" json:"polygon_encoding,omitempty"`
	// A chunk of bytes of the encoded S2 polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonCountBrandPointsRequest) Reset()         { *m = PolygonCountBrandPointsRequest{} }
func (m *PolygonCountBrandPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonCountBrandPointsRequest) ProtoMessage()    {}
func (*PolygonCountBrandPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{27}
}

func (m *PolygonCountBrandPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Unmarshal(m, b)
}
func (m *PolygonCountBrandPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonCountBrandPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountBrandPointsRequest.Merge(m, src)
}
func (m *PolygonCountBrandPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonCountBrandPointsRequest.Size(m)
}
func (m *PolygonCountBrandPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountBrandPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountBrandPointsRequest proto.InternalMessageInfo

func (m *PolygonCountBrandPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PolygonCountBrandPointsRequest) GetBrands() []string {
	if m != nil {
		return m.Brands
	}
	return nil
}

func (m *PolygonCountBrandPointsRequest) GetPolygonEncoding() PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonEncoding_S2
}

func (m *PolygonCountBrandPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonCountBrandPointsResponse struct {
	// Map of brand IDs to point counts.
	BrandPoints          map[string]int64 `protobuf:"bytes,1,rep,name=brand_points,json=brandPoints,proto3" json:"brand_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PolygonCountBrandPointsResponse) Reset()         { *m = PolygonCountBrandPointsResponse{} }
func (m *PolygonCountBrandPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonCountBrandPointsResponse) ProtoMessage()    {}
func (*PolygonCountBrandPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{28}
}

func (m *PolygonCountBrandPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Unmarshal(m, b)
}
func (m *PolygonCountBrandPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonCountBrandPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountBrandPointsResponse.Merge(m, src)
}
func (m *PolygonCountBrandPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonCountBrandPointsResponse.Size(m)
}
func (m *PolygonCountBrandPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountBrandPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountBrandPointsResponse proto.InternalMessageInfo

func (m *PolygonCountBrandPointsResponse) GetBrandPoints() map[string]int64 {
	if m != nil {
		return m.BrandPoints
	}
	return nil
}

type CountTagPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given tags.
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTagPointsRequest) Reset()         { *m = CountTagPointsRequest{} }
func (m *CountTagPointsRequest) String() string { return proto.CompactTextString(m) }
func (*CountTagPointsRequest) ProtoMessage()    {}
func (*CountTagPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{29}
}

func (m *CountTagPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTagPointsRequest.Unmarshal(m, b)
}
func (m *CountTagPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTagPointsRequest.Marshal(b, m, deterministic)
}
func (m *CountTagPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTagPointsRequest.Merge(m, src)
}
func (m *CountTagPointsRequest) XXX_Size() int {
	return xxx_messageInfo_CountTagPointsRequest.Size(m)
}
func (m *CountTagPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTagPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountTagPointsRequest proto.InternalMessageInfo

func (m *CountTagPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CountTagPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CountTagPointsResponse struct {
	// Map of tag IDs to point counts.
	TagPoints            map[string]int64 `protobuf:"bytes,1,rep,name=tag_points,json=tagPoints,proto3" json:"tag_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountTagPointsResponse) Reset()         { *m = CountTagPointsResponse{} }
func (m *CountTagPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CountTagPointsResponse) ProtoMessage()    {}
func (*CountTagPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{30}
}

func (m *CountTagPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTagPointsResponse.Unmarshal(m, b)
}
func (m *CountTagPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTagPointsResponse.Marshal(b, m, deterministic)
}
func (m *CountTagPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTagPointsResponse.Merge(m, src)
}
func (m *CountTagPointsResponse) XXX_Size() int {
	return xxx_messageInfo_CountTagPointsResponse.Size(m)
}
func (m *CountTagPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTagPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountTagPointsResponse proto.InternalMessageInfo

func (m *CountTagPointsResponse) GetTagPoints() map[string]int64 {
	if m != nil {
		return m.TagPoints
	}
	return nil
}

type PolygonCountTagPointsRequest struct {
	// Count brand points within this region.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Count points for the given tags.
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// The polygon data's encoding.
	PolygonEncoding PolygonEncoding `protobuf:"varint,3,opt,name=polygon_encoding,json=polygonEncoding,proto3,enum=topos.points.v1.PolygonEncoding" json:"polygon_encoding,omitempty"`
	// A chunk of bytes of the encoded polygon.
	PolygonChunk         []byte   `protobuf:"bytes,15,opt,name=polygon_chunk,json=polygonChunk,proto3" json:"polygon_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolygonCountTagPointsRequest) Reset()         { *m = PolygonCountTagPointsRequest{} }
func (m *PolygonCountTagPointsRequest) String() string { return proto.CompactTextString(m) }
func (*PolygonCountTagPointsRequest) ProtoMessage()    {}
func (*PolygonCountTagPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{31}
}

func (m *PolygonCountTagPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Unmarshal(m, b)
}
func (m *PolygonCountTagPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Marshal(b, m, deterministic)
}
func (m *PolygonCountTagPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountTagPointsRequest.Merge(m, src)
}
func (m *PolygonCountTagPointsRequest) XXX_Size() int {
	return xxx_messageInfo_PolygonCountTagPointsRequest.Size(m)
}
func (m *PolygonCountTagPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountTagPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountTagPointsRequest proto.InternalMessageInfo

func (m *PolygonCountTagPointsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PolygonCountTagPointsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PolygonCountTagPointsRequest) GetPolygonEncoding() PolygonEncoding {
	if m != nil {
		return m.PolygonEncoding
	}
	return PolygonEncoding_S2
}

func (m *PolygonCountTagPointsRequest) GetPolygonChunk() []byte {
	if m != nil {
		return m.PolygonChunk
	}
	return nil
}

type PolygonCountTagPointsResponse struct {
	// Map of tag IDs to point counts.
	TagPoints            map[string]int64 `protobuf:"bytes,1,rep,name=tag_points,json=tagPoints,proto3" json:"tag_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PolygonCountTagPointsResponse) Reset()         { *m = PolygonCountTagPointsResponse{} }
func (m *PolygonCountTagPointsResponse) String() string { return proto.CompactTextString(m) }
func (*PolygonCountTagPointsResponse) ProtoMessage()    {}
func (*PolygonCountTagPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{32}
}

func (m *PolygonCountTagPointsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Unmarshal(m, b)
}
func (m *PolygonCountTagPointsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Marshal(b, m, deterministic)
}
func (m *PolygonCountTagPointsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolygonCountTagPointsResponse.Merge(m, src)
}
func (m *PolygonCountTagPointsResponse) XXX_Size() int {
	return xxx_messageInfo_PolygonCountTagPointsResponse.Size(m)
}
func (m *PolygonCountTagPointsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolygonCountTagPointsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolygonCountTagPointsResponse proto.InternalMessageInfo

func (m *PolygonCountTagPointsResponse) GetTagPoints() map[string]int64 {
	if m != nil {
		return m.TagPoints
	}
	return nil
}

type SearchRegionsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return regions of the given type.
	RegionType string `protobuf:"bytes,3,opt,name=region_type,json=regionType,proto3" json:"region_type,omitempty"`
	// Return regions that intersect with locations of the given brand.
	Brand                string   `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionsRequest) Reset()         { *m = SearchRegionsRequest{} }
func (m *SearchRegionsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRegionsRequest) ProtoMessage()    {}
func (*SearchRegionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{33}
}

func (m *SearchRegionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionsRequest.Unmarshal(m, b)
}
func (m *SearchRegionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionsRequest.Marshal(b, m, deterministic)
}
func (m *SearchRegionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionsRequest.Merge(m, src)
}
func (m *SearchRegionsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRegionsRequest.Size(m)
}
func (m *SearchRegionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionsRequest proto.InternalMessageInfo

func (m *SearchRegionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRegionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchRegionsRequest) GetRegionType() string {
	if m != nil {
		return m.RegionType
	}
	return ""
}

func (m *SearchRegionsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

type SearchRegionsResponse struct {
	Regions []*Region `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the search.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRegionsResponse) Reset()         { *m = SearchRegionsResponse{} }
func (m *SearchRegionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRegionsResponse) ProtoMessage()    {}
func (*SearchRegionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58bd33bd76af5b35, []int{34}
}

func (m *SearchRegionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRegionsResponse.Unmarshal(m, b)
}
func (m *SearchRegionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRegionsResponse.Marshal(b, m, deterministic)
}
func (m *SearchRegionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRegionsResponse.Merge(m, src)
}
func (m *SearchRegionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRegionsResponse.Size(m)
}
func (m *SearchRegionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRegionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRegionsResponse proto.InternalMessageInfo

func (m *SearchRegionsResponse) GetRegions() []*Region {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *SearchRegionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("topos.points.v1.PolygonEncoding", PolygonEncoding_name, PolygonEncoding_value)
	proto.RegisterType((*FeatureStats)(nil), "topos.points.v1.FeatureStats")
	proto.RegisterType((*Brand)(nil), "topos.points.v1.Brand")
	proto.RegisterMapType((map[string]*FeatureStats)(nil), "topos.points.v1.Brand.FeatureSetFeatureStatsEntry")
	proto.RegisterMapType((map[string]*Brand_Preferences)(nil), "topos.points.v1.Brand.RegionPreferencesEntry")
	proto.RegisterType((*Brand_Contact)(nil), "topos.points.v1.Brand.Contact")
	proto.RegisterType((*Brand_Preferences)(nil), "topos.points.v1.Brand.Preferences")
	proto.RegisterType((*LatLng)(nil), "topos.points.v1.LatLng")
	proto.RegisterType((*Point)(nil), "topos.points.v1.Point")
	proto.RegisterType((*Tag)(nil), "topos.points.v1.Tag")
	proto.RegisterType((*Region)(nil), "topos.points.v1.Region")
	proto.RegisterType((*GetBrandRequest)(nil), "topos.points.v1.GetBrandRequest")
	proto.RegisterType((*ListBrandsRequest)(nil), "topos.points.v1.ListBrandsRequest")
	proto.RegisterType((*ListBrandsResponse)(nil), "topos.points.v1.ListBrandsResponse")
	proto.RegisterType((*SetBrandRequest)(nil), "topos.points.v1.SetBrandRequest")
	proto.RegisterType((*DeleteBrandRequest)(nil), "topos.points.v1.DeleteBrandRequest")
	proto.RegisterType((*GetPointRequest)(nil), "topos.points.v1.GetPointRequest")
	proto.RegisterType((*SetPointRequest)(nil), "topos.points.v1.SetPointRequest")
	proto.RegisterType((*DeletePointRequest)(nil), "topos.points.v1.DeletePointRequest")
	proto.RegisterType((*SearchPointsRequest)(nil), "topos.points.v1.SearchPointsRequest")
	proto.RegisterType((*SearchPointsResponse)(nil), "topos.points.v1.SearchPointsResponse")
	proto.RegisterType((*PolygonSearchPointsRequest)(nil), "topos.points.v1.PolygonSearchPointsRequest")
	proto.RegisterType((*PolygonSearchPointsResponse)(nil), "topos.points.v1.PolygonSearchPointsResponse")
	proto.RegisterType((*RadiusSearchPointsRequest)(nil), "topos.points.v1.RadiusSearchPointsRequest")
	proto.RegisterType((*RadiusSearchPointsResponse)(nil), "topos.points.v1.RadiusSearchPointsResponse")
	proto.RegisterType((*GetTagRequest)(nil), "topos.points.v1.GetTagRequest")
	proto.RegisterType((*SetTagRequest)(nil), "topos.points.v1.SetTagRequest")
	proto.RegisterType((*ListTagsRequest)(nil), "topos.points.v1.ListTagsRequest")
	proto.RegisterType((*ListTagsResponse)(nil), "topos.points.v1.ListTagsResponse")
	proto.RegisterType((*DeleteTagRequest)(nil), "topos.points.v1.DeleteTagRequest")
	proto.RegisterType((*CountBrandPointsRequest)(nil), "topos.points.v1.CountBrandPointsRequest")
	proto.RegisterType((*CountBrandPointsResponse)(nil), "topos.points.v1.CountBrandPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.CountBrandPointsResponse.BrandPointsEntry")
	proto.RegisterType((*PolygonCountBrandPointsRequest)(nil), "topos.points.v1.PolygonCountBrandPointsRequest")
	proto.RegisterType((*PolygonCountBrandPointsResponse)(nil), "topos.points.v1.PolygonCountBrandPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.PolygonCountBrandPointsResponse.BrandPointsEntry")
	proto.RegisterType((*CountTagPointsRequest)(nil), "topos.points.v1.CountTagPointsRequest")
	proto.RegisterType((*CountTagPointsResponse)(nil), "topos.points.v1.CountTagPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.CountTagPointsResponse.TagPointsEntry")
	proto.RegisterType((*PolygonCountTagPointsRequest)(nil), "topos.points.v1.PolygonCountTagPointsRequest")
	proto.RegisterType((*PolygonCountTagPointsResponse)(nil), "topos.points.v1.PolygonCountTagPointsResponse")
	proto.RegisterMapType((map[string]int64)(nil), "topos.points.v1.PolygonCountTagPointsResponse.TagPointsEntry")
	proto.RegisterType((*SearchRegionsRequest)(nil), "topos.points.v1.SearchRegionsRequest")
	proto.RegisterType((*SearchRegionsResponse)(nil), "topos.points.v1.SearchRegionsResponse")
}

func init() { proto.RegisterFile("topos/points/v1/points.proto", fileDescriptor_58bd33bd76af5b35) }

var fileDescriptor_58bd33bd76af5b35 = []byte{
	// 2116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xcf, 0x73, 0x1b, 0x49,
	0xf5, 0xff, 0x8e, 0x15, 0xcb, 0xf2, 0x93, 0x6c, 0xc9, 0xed, 0x44, 0x99, 0x8c, 0xe3, 0xd8, 0x9e,
	0x6c, 0xbc, 0x5a, 0x27, 0x2b, 0x7d, 0xe3, 0x54, 0x41, 0x4a, 0xcb, 0x42, 0x25, 0x5e, 0x93, 0x02,
	0x42, 0x9c, 0x1a, 0x99, 0x03, 0xd4, 0x52, 0x53, 0x6d, 0xa9, 0x3d, 0x9e, 0xca, 0x68, 0x66, 0x98,
	0x69, 0x19, 0x6b, 0xa9, 0x1c, 0xe0, 0xc6, 0x89, 0x2a, 0xf6, 0x42, 0x15, 0x47, 0x0e, 0x9c, 0xf8,
	0x03, 0x28, 0x38, 0x71, 0xa1, 0x8a, 0x2b, 0x7f, 0x00, 0x17, 0xfe, 0x01, 0xaa, 0xf8, 0x03, 0xa8,
	0x7e, 0xdd, 0x23, 0x8d, 0xa4, 0x19, 0x5b, 0x59, 0x12, 0x72, 0x53, 0xbf, 0xfe, 0x4c, 0xbf, 0xcf,
	0xfb, 0xd9, 0xaf, 0x6d, 0xb8, 0xcd, 0x83, 0x30, 0x88, 0x5b, 0x61, 0xe0, 0xfa, 0x3c, 0x6e, 0x9d,
	0x3f, 0x54, 0xbf, 0x9a, 0x61, 0x14, 0xf0, 0x80, 0x54, 0x71, 0xb7, 0xa9, 0x64, 0xe7, 0x0f, 0x8d,
	0xdb, 0x4e, 0x10, 0x38, 0x1e, 0x6b, 0xd1, 0xd0, 0x6d, 0x51, 0xdf, 0x0f, 0x38, 0xe5, 0x6e, 0xe0,
	0x2b, 0xb8, 0xb1, 0xa1, 0x76, 0x71, 0x75, 0x32, 0x38, 0x6d, 0xb1, 0x7e, 0xc8, 0x87, 0x6a, 0x73,
	0x6b, 0x7a, 0x93, 0xbb, 0x7d, 0x16, 0x73, 0xda, 0x0f, 0x25, 0xc0, 0xec, 0x41, 0xe5, 0xdb, 0x8c,
	0xf2, 0x41, 0xc4, 0x3a, 0x9c, 0xf2, 0x98, 0xd4, 0xa0, 0xd0, 0x77, 0x7d, 0x5d, 0xdb, 0xd6, 0x1a,
	0x9a, 0x25, 0x7e, 0xa2, 0x84, 0x5e, 0xe8, 0x0b, 0x4a, 0x42, 0x2f, 0x88, 0x0e, 0x4b, 0xf4, 0x9c,
	0x45, 0xd4, 0x61, 0x7a, 0x01, 0xa5, 0xc9, 0x92, 0xd4, 0xa1, 0xd8, 0x67, 0x3d, 0x97, 0xfa, 0xfa,
	0x35, 0xdc, 0x50, 0x2b, 0xf3, 0xd7, 0x00, 0x8b, 0x4f, 0x23, 0xea, 0xf7, 0x08, 0x81, 0x6b, 0x3e,
	0xed, 0x33, 0x54, 0xb0, 0x6c, 0xe1, 0x6f, 0xb2, 0x03, 0x95, 0x9e, 0x1b, 0x87, 0x1e, 0x1d, 0xda,
	0xb8, 0xb7, 0x80, 0x7b, 0x65, 0x25, 0x7b, 0x21, 0x20, 0xf7, 0x61, 0xed, 0x34, 0x88, 0xfa, 0x94,
	0x73, 0xd6, 0xb3, 0x69, 0xaf, 0x17, 0xb1, 0x38, 0x46, 0xe5, 0xcb, 0x56, 0x6d, 0xb4, 0xf1, 0x44,
	0xca, 0xc9, 0x75, 0x58, 0x64, 0x7d, 0xea, 0x7a, 0x48, 0x62, 0xd9, 0x92, 0x0b, 0xf2, 0x11, 0xd4,
	0x22, 0x46, 0x3d, 0x61, 0x3d, 0x67, 0xb6, 0x04, 0x2c, 0x22, 0xa0, 0x3a, 0x96, 0x1f, 0x22, 0x74,
	0x07, 0x2a, 0xe1, 0x59, 0xe0, 0x33, 0xdb, 0x1f, 0xf4, 0x4f, 0x58, 0xa4, 0x17, 0x25, 0x21, 0x94,
	0xbd, 0x40, 0x11, 0x69, 0x43, 0xa9, 0x1b, 0xf8, 0x9c, 0x76, 0x79, 0xac, 0x2f, 0x6d, 0x17, 0x1a,
	0xe5, 0xfd, 0x3b, 0xcd, 0xa9, 0xb8, 0x35, 0xd1, 0xe2, 0xe6, 0x81, 0x84, 0x59, 0x23, 0xbc, 0xe0,
	0xe7, 0x53, 0xb7, 0x1b, 0xeb, 0x25, 0xc9, 0x0f, 0x17, 0x64, 0x0b, 0xca, 0x61, 0x10, 0x73, 0xea,
	0xd9, 0xdd, 0xa0, 0xc7, 0xf4, 0x65, 0xdc, 0x03, 0x29, 0x3a, 0x08, 0x7a, 0x8c, 0xf4, 0xe1, 0xd6,
	0xa9, 0x0c, 0x95, 0x1d, 0x33, 0x6e, 0x8f, 0x7e, 0x8b, 0xb8, 0xe9, 0x80, 0x1c, 0xf6, 0x73, 0x38,
	0x24, 0x21, 0x66, 0x3c, 0x1d, 0xec, 0x43, 0x9f, 0x47, 0x43, 0xab, 0x7e, 0x9a, 0xb9, 0x49, 0x3e,
	0x07, 0x12, 0x31, 0xc7, 0x0d, 0x7c, 0x3b, 0x8c, 0xd8, 0x29, 0x8b, 0x98, 0xdf, 0x65, 0xb1, 0x5e,
	0x46, 0x3d, 0x1f, 0xe7, 0xe8, 0xb1, 0xf0, 0x83, 0x97, 0x63, 0xbc, 0x54, 0xb1, 0x16, 0x4d, 0xcb,
	0x45, 0x1e, 0x70, 0xea, 0xc4, 0x7a, 0x65, 0xbb, 0x20, 0xf2, 0x40, 0xfc, 0x16, 0x79, 0xc5, 0x2e,
	0xba, 0xde, 0xa0, 0xc7, 0xf4, 0x95, 0x6d, 0xad, 0x51, 0xb2, 0x92, 0x25, 0xf9, 0x04, 0xca, 0xdd,
	0x88, 0x89, 0xb8, 0x89, 0xfc, 0xd5, 0x57, 0xb7, 0xb5, 0x46, 0x79, 0xdf, 0x68, 0xca, 0xe4, 0x6e,
	0x26, 0xc9, 0xdd, 0x3c, 0x4e, 0x92, 0xdb, 0x02, 0x09, 0x17, 0x02, 0xf1, 0xf1, 0x20, 0xec, 0x8d,
	0x3e, 0xae, 0x5e, 0xfd, 0xb1, 0x84, 0xe3, 0xc7, 0x1f, 0x42, 0x95, 0x07, 0x22, 0x28, 0x5e, 0xd0,
	0x95, 0x65, 0xa7, 0xd7, 0xb6, 0xb5, 0x46, 0xc1, 0x5a, 0x45, 0xf1, 0xf3, 0x44, 0x4a, 0x9a, 0xb0,
	0x8e, 0x19, 0x14, 0xdb, 0xc1, 0xa9, 0xcd, 0x2e, 0x42, 0xea, 0xc7, 0x6e, 0xe0, 0xeb, 0x6b, 0x68,
	0xdf, 0x9a, 0xdc, 0x3a, 0x3a, 0x3d, 0x4c, 0x36, 0x26, 0xf1, 0x41, 0xc8, 0x22, 0x3c, 0x47, 0x27,
	0x93, 0xf8, 0xa3, 0x64, 0x43, 0x38, 0xe7, 0xa7, 0xec, 0x24, 0x76, 0x39, 0xd3, 0xd7, 0x31, 0x35,
	0x92, 0xa5, 0x31, 0x80, 0x25, 0x95, 0x63, 0x64, 0x03, 0x96, 0x4f, 0x07, 0x9e, 0x67, 0xa7, 0x4a,
	0xac, 0x24, 0x04, 0x58, 0x43, 0xd7, 0x61, 0x91, 0xbb, 0xdc, 0x4b, 0xea, 0x4b, 0x2e, 0xc6, 0xc5,
	0x52, 0x48, 0x17, 0xcb, 0x74, 0x05, 0x5c, 0x9b, 0xa9, 0x00, 0xe3, 0x0c, 0x36, 0x2e, 0x49, 0x2b,
	0xd1, 0x36, 0x5e, 0xb1, 0xa1, 0x22, 0x21, 0x7e, 0x92, 0x47, 0xb0, 0x78, 0x4e, 0xbd, 0x81, 0xd4,
	0x5f, 0xde, 0xdf, 0x9c, 0xc9, 0xa1, 0xf4, 0x21, 0x96, 0xc4, 0xb6, 0x17, 0x1e, 0x6b, 0xc6, 0x2b,
	0x28, 0xa7, 0x53, 0xe7, 0x2e, 0xac, 0xc8, 0x8c, 0x8c, 0x58, 0xcf, 0x76, 0x3c, 0xaa, 0x74, 0x54,
	0x46, 0xc2, 0x67, 0x1e, 0x15, 0x9d, 0xc8, 0xf5, 0x3d, 0xd7, 0x67, 0xaa, 0x71, 0xa9, 0x95, 0xa8,
	0xb2, 0x98, 0x53, 0xbf, 0x67, 0x53, 0x2f, 0xf0, 0x93, 0xfe, 0x05, 0x28, 0x7a, 0x22, 0x24, 0xc6,
	0x19, 0xd4, 0xb3, 0xb3, 0x38, 0xc3, 0xa2, 0xc7, 0x93, 0x16, 0x99, 0x39, 0x55, 0x91, 0x3a, 0x29,
	0x65, 0x96, 0xf9, 0x14, 0x8a, 0xcf, 0x29, 0x7f, 0xee, 0x3b, 0xc4, 0x80, 0x92, 0x47, 0xb9, 0xcb,
	0x45, 0xe6, 0xcb, 0xce, 0x3b, 0x5a, 0x93, 0xdb, 0xb0, 0xec, 0x05, 0xbe, 0x23, 0x37, 0xa5, 0x2d,
	0x63, 0x81, 0xf9, 0x2f, 0x0d, 0x16, 0x5f, 0x0a, 0x75, 0x5f, 0xb5, 0xb1, 0x3e, 0x82, 0x52, 0x92,
	0xd9, 0x18, 0xe4, 0xf2, 0xfe, 0xcd, 0x19, 0x2b, 0x24, 0x4b, 0x6b, 0x04, 0xcc, 0xee, 0xc6, 0x8b,
	0xf9, 0xdd, 0xf8, 0x44, 0xb8, 0x41, 0x5f, 0x92, 0x09, 0x76, 0x92, 0xdc, 0x03, 0x58, 0xff, 0xa5,
	0x54, 0xfd, 0xdf, 0x83, 0xd5, 0x44, 0x85, 0xdd, 0x0d, 0x06, 0x3e, 0xc7, 0x26, 0x58, 0xb0, 0x56,
	0x12, 0xe9, 0x81, 0x10, 0x9a, 0xbf, 0xd7, 0xa0, 0x70, 0x4c, 0x9d, 0xaf, 0x6a, 0x71, 0xaa, 0xcb,
	0x14, 0x26, 0xbb, 0x4c, 0x13, 0xd6, 0x43, 0x6f, 0x10, 0x51, 0xcf, 0x9e, 0x38, 0x43, 0xe6, 0xfe,
	0x9a, 0xdc, 0xfa, 0x2c, 0x75, 0xd2, 0x16, 0x94, 0xdd, 0xd8, 0xee, 0x52, 0xce, 0x9c, 0x20, 0x1a,
	0xa2, 0x03, 0x4a, 0x16, 0xb8, 0xf1, 0x81, 0x92, 0x98, 0x8f, 0xa1, 0x28, 0x73, 0x29, 0x93, 0xab,
	0x01, 0x25, 0x87, 0x05, 0x7d, 0xc6, 0xa3, 0x21, 0xf2, 0xac, 0x58, 0xa3, 0xb5, 0x79, 0x0f, 0xaa,
	0xcf, 0x18, 0xc7, 0xf4, 0xb1, 0xd8, 0x4f, 0x06, 0x2c, 0xce, 0x0c, 0xb0, 0x79, 0x04, 0x6b, 0xcf,
	0xdd, 0x58, 0xe2, 0xe2, 0x04, 0xb8, 0x01, 0xcb, 0x21, 0x75, 0x98, 0x1d, 0xbb, 0x5f, 0x48, 0xf4,
	0xa2, 0x55, 0x12, 0x82, 0x8e, 0xfb, 0x05, 0x23, 0x9b, 0x00, 0xb8, 0xc9, 0x83, 0x57, 0xcc, 0x57,
	0xee, 0x41, 0xf8, 0xb1, 0x10, 0x98, 0x1e, 0x90, 0xf4, 0x81, 0x71, 0x18, 0xf8, 0xb1, 0x70, 0x4c,
	0x11, 0xa3, 0x16, 0xeb, 0x1a, 0xb6, 0xff, 0x7a, 0x76, 0xa2, 0x5b, 0x0a, 0x45, 0x76, 0xa1, 0xea,
	0xb3, 0x0b, 0x6e, 0xcf, 0x68, 0x5a, 0x11, 0xe2, 0x97, 0x23, 0x6d, 0xdf, 0x82, 0x6a, 0x67, 0xca,
	0xca, 0x07, 0x49, 0xb6, 0x68, 0x98, 0x8c, 0x79, 0x9a, 0x24, 0xc8, 0x6c, 0x00, 0xf9, 0x8c, 0x79,
	0x8c, 0xb3, 0x2b, 0x3d, 0x25, 0x1d, 0x8a, 0xa5, 0x72, 0x19, 0x4c, 0x32, 0x9a, 0x80, 0x3d, 0x80,
	0x45, 0xd4, 0x9e, 0xcb, 0x48, 0xa2, 0x25, 0x68, 0xcc, 0xe8, 0x4a, 0x55, 0x5f, 0x6a, 0xb0, 0xde,
	0x61, 0x34, 0xea, 0x9e, 0x21, 0xf4, 0x6d, 0x84, 0x6f, 0x5c, 0x6b, 0x85, 0xac, 0x5a, 0xbb, 0x96,
	0xaa, 0xb5, 0x3a, 0x14, 0xe5, 0xa5, 0xac, 0xea, 0x56, 0xad, 0x4c, 0x1f, 0xae, 0x4f, 0x92, 0x1a,
	0xa7, 0x80, 0xb4, 0x38, 0x37, 0x05, 0xa4, 0xc1, 0x0a, 0x35, 0x77, 0x0a, 0xfc, 0x5b, 0x03, 0xe3,
	0x65, 0xe0, 0x0d, 0x9d, 0xc0, 0x7f, 0x7f, 0xce, 0xf8, 0x1e, 0xd4, 0x42, 0xc9, 0xc1, 0x66, 0x7e,
	0x37, 0xe8, 0xb9, 0xbe, 0x83, 0x6e, 0x59, 0xdd, 0xdf, 0xce, 0x30, 0x13, 0x81, 0x87, 0x0a, 0x67,
	0x55, 0xc3, 0x49, 0x01, 0x5e, 0x4f, 0xea, 0xb0, 0xee, 0xd9, 0xc0, 0x7f, 0x85, 0x03, 0x47, 0xc5,
	0xaa, 0x28, 0xe1, 0x81, 0x90, 0x99, 0x03, 0xd8, 0xc8, 0xb4, 0xfa, 0x1d, 0x7b, 0xfb, 0x6f, 0x1a,
	0xdc, 0xb2, 0x68, 0xcf, 0x1d, 0xc4, 0xef, 0xcf, 0xd9, 0x2d, 0x28, 0x76, 0x99, 0xcf, 0x59, 0x84,
	0x2e, 0xbe, 0xe4, 0xbe, 0x51, 0x30, 0x4c, 0x55, 0xe4, 0x8c, 0x73, 0xb8, 0x66, 0xa9, 0x95, 0xc9,
	0xc1, 0xc8, 0xb2, 0xe5, 0x1d, 0xbb, 0xf0, 0x2e, 0xac, 0x3c, 0x63, 0xfc, 0x98, 0x3a, 0x97, 0xd5,
	0xf6, 0xd7, 0x61, 0xa5, 0x33, 0x01, 0xda, 0x85, 0x02, 0xa7, 0x8e, 0x6a, 0x21, 0xd7, 0x67, 0xa8,
	0x08, 0xa4, 0x00, 0x98, 0xdf, 0x87, 0xaa, 0xe8, 0xbf, 0xc7, 0xd4, 0x79, 0x2b, 0xed, 0xbc, 0x07,
	0xb5, 0xf1, 0x71, 0xca, 0x31, 0x0d, 0x15, 0x13, 0xe9, 0x96, 0x6c, 0x2e, 0x32, 0x52, 0xf3, 0xba,
	0x64, 0x17, 0x6a, 0xb2, 0xe7, 0x5d, 0xe1, 0x95, 0xef, 0xc0, 0x4d, 0xbc, 0xc1, 0xb1, 0x59, 0x4f,
	0xa6, 0xde, 0xb8, 0x1d, 0x69, 0xe9, 0x76, 0x24, 0xe4, 0xea, 0xe6, 0x59, 0xc0, 0x14, 0x52, 0x2b,
	0xf3, 0x8f, 0x1a, 0xe8, 0xb3, 0x67, 0x29, 0x0b, 0x7f, 0x0c, 0x15, 0x84, 0xd9, 0x13, 0x09, 0xd0,
	0x9e, 0xb1, 0x34, 0xef, 0x80, 0x66, 0x4a, 0x26, 0x1f, 0x30, 0xe5, 0x93, 0xb1, 0xc4, 0xf8, 0x26,
	0xd4, 0xa6, 0x01, 0x19, 0xb3, 0xe1, 0xf5, 0xf4, 0x6c, 0x58, 0x48, 0xcf, 0x7d, 0x7f, 0xd1, 0xe0,
	0x8e, 0x2a, 0xfe, 0xb7, 0xe4, 0x8e, 0xcc, 0x06, 0x56, 0x78, 0xa7, 0x0d, 0xec, 0xaf, 0x1a, 0x6c,
	0xe5, 0x1a, 0xa1, 0xe2, 0xd0, 0xcb, 0x8c, 0xc3, 0x93, 0x3c, 0x46, 0xef, 0x29, 0x1c, 0x07, 0x70,
	0x03, 0x35, 0x1f, 0x53, 0x67, 0xbe, 0x20, 0x24, 0x4d, 0x6d, 0x61, 0xdc, 0xd4, 0xcc, 0x3f, 0x68,
	0x50, 0x9f, 0x3e, 0x45, 0x79, 0xe1, 0x07, 0x00, 0x9c, 0x3a, 0x93, 0x3e, 0xf8, 0x5a, 0x76, 0x2e,
	0xce, 0x7c, 0xdc, 0x1c, 0x49, 0xa4, 0xe1, 0xcb, 0x3c, 0x59, 0x1b, 0xdf, 0x80, 0xd5, 0xc9, 0xcd,
	0x37, 0x32, 0xfa, 0xcf, 0x1a, 0xdc, 0x4e, 0xbb, 0xfd, 0xbf, 0x31, 0xfe, 0x3d, 0x64, 0xdf, 0x9f,
	0x34, 0xd8, 0xcc, 0xa1, 0xaf, 0xbc, 0xfe, 0x79, 0x86, 0xd7, 0x3f, 0xbd, 0x34, 0xf3, 0xfe, 0x77,
	0xce, 0xff, 0xa5, 0x96, 0x0c, 0x59, 0xf2, 0x75, 0xf0, 0x56, 0x2e, 0xe0, 0x2d, 0x28, 0xab, 0x3f,
	0xd7, 0xf0, 0x61, 0xc8, 0xd4, 0x35, 0x0c, 0x52, 0x74, 0x3c, 0x0c, 0xd9, 0xf8, 0x86, 0xbe, 0x96,
	0xba, 0xa1, 0xcd, 0x08, 0x6e, 0x4c, 0x51, 0x51, 0x0e, 0x7c, 0x08, 0x4b, 0xf2, 0xe3, 0xc4, 0x7b,
	0xb3, 0xf7, 0xb4, 0xfc, 0xc4, 0x4a, 0x70, 0xf3, 0xde, 0x17, 0x7b, 0xbb, 0x50, 0x9d, 0x4a, 0x03,
	0x52, 0x84, 0x85, 0xce, 0x7e, 0xed, 0xff, 0x48, 0x19, 0x96, 0x9e, 0x1d, 0x1e, 0x7d, 0xb7, 0x73,
	0xf4, 0xa2, 0xa6, 0xed, 0xff, 0x63, 0x0d, 0x8a, 0xd2, 0xc7, 0x84, 0x42, 0x29, 0x79, 0x0f, 0x91,
	0xd9, 0xa4, 0x9a, 0x7a, 0x2a, 0x19, 0x39, 0xaf, 0x06, 0x73, 0xe3, 0x17, 0x7f, 0xff, 0xe7, 0x97,
	0x0b, 0x37, 0xc8, 0x7a, 0xeb, 0xfc, 0x61, 0xeb, 0x67, 0xe2, 0x4e, 0xfa, 0x54, 0x36, 0xd0, 0xd6,
	0xde, 0x6b, 0xe2, 0x02, 0x8c, 0x9f, 0x3e, 0x64, 0xf6, 0x2d, 0x3f, 0xf3, 0xd0, 0x32, 0xee, 0x5e,
	0x8a, 0x91, 0x7e, 0x34, 0x09, 0xea, 0xac, 0x10, 0x10, 0x3a, 0x55, 0xbb, 0x8e, 0xa0, 0xd4, 0xc9,
	0xb7, 0xa6, 0x33, 0xa7, 0x35, 0x0f, 0xf0, 0xe4, 0x5d, 0x73, 0x13, 0xad, 0xc1, 0xa3, 0x9b, 0x93,
	0x36, 0xb5, 0x63, 0xc6, 0xdb, 0x6a, 0x14, 0x73, 0xa0, 0x9c, 0x7a, 0x2a, 0x91, 0x59, 0xee, 0xb3,
	0x0f, 0x29, 0xa3, 0x3e, 0xf3, 0x47, 0xb2, 0xc3, 0x7e, 0xc8, 0x87, 0x89, 0x1f, 0xf7, 0x32, 0xfd,
	0xf8, 0x43, 0x28, 0xca, 0x01, 0x89, 0xdc, 0xc9, 0x0a, 0xd4, 0x78, 0x46, 0x30, 0x32, 0x67, 0x0f,
	0xf3, 0x16, 0x1e, 0xbe, 0x4e, 0xd6, 0xc6, 0x87, 0x8b, 0x2e, 0x23, 0x8e, 0xa6, 0x50, 0x4a, 0xc6,
	0x99, 0x0c, 0xbf, 0x4d, 0x0d, 0x4e, 0xc6, 0xce, 0x25, 0x08, 0x15, 0x9c, 0x1a, 0xea, 0x02, 0x52,
	0x12, 0xba, 0xb0, 0x97, 0x9d, 0x42, 0xb1, 0x93, 0xc7, 0xbe, 0x33, 0x07, 0xfb, 0x5d, 0x3c, 0x71,
	0xdb, 0xbc, 0x85, 0xec, 0x39, 0x75, 0x9a, 0x69, 0x0b, 0x30, 0x20, 0x62, 0xd0, 0x23, 0x14, 0x96,
	0x47, 0x33, 0x13, 0xd9, 0xc9, 0x09, 0x46, 0x4a, 0x5b, 0x5e, 0x28, 0x94, 0xb7, 0xf6, 0xb2, 0xbd,
	0x95, 0x3c, 0x79, 0xb3, 0x6b, 0x26, 0xfd, 0x44, 0x35, 0x72, 0xe6, 0xe3, 0xac, 0x9a, 0x51, 0xff,
	0xb7, 0xd8, 0x7b, 0x4d, 0xce, 0xa1, 0x92, 0x1e, 0xbe, 0xc9, 0x07, 0x19, 0x3e, 0x9b, 0x79, 0x67,
	0x18, 0xf7, 0xae, 0x40, 0xa9, 0xe0, 0x4c, 0x24, 0x82, 0xc4, 0xb6, 0x63, 0x04, 0x92, 0xdf, 0x68,
	0xb0, 0x9e, 0xf1, 0x7e, 0x22, 0xf7, 0xf3, 0x3a, 0x7c, 0x16, 0x8d, 0x07, 0xf3, 0x81, 0x15, 0x9b,
	0x0f, 0x90, 0xcd, 0x1d, 0x19, 0x58, 0xc5, 0x26, 0xb9, 0xa8, 0x24, 0xab, 0xb6, 0xb6, 0xd7, 0xd0,
	0xc8, 0xaf, 0x34, 0x20, 0xb3, 0xcf, 0x12, 0xb2, 0x37, 0xdb, 0x3d, 0xf3, 0xde, 0x61, 0xc6, 0xfd,
	0xb9, 0xb0, 0x8a, 0xd7, 0x36, 0xf2, 0x32, 0x88, 0x9e, 0xe2, 0x25, 0x1f, 0x48, 0x8a, 0x16, 0xf1,
	0xb1, 0xdb, 0xe4, 0xe5, 0x41, 0x67, 0xce, 0x3c, 0x68, 0xa0, 0x1e, 0xd3, 0x90, 0x89, 0x8d, 0xbb,
	0xcd, 0xc9, 0x6c, 0x68, 0xcb, 0x3f, 0x81, 0x8c, 0x3b, 0x8d, 0x54, 0x99, 0xd7, 0x69, 0xa6, 0xb4,
	0xce, 0xdd, 0x69, 0xc6, 0xd9, 0xf7, 0x73, 0x0d, 0x6a, 0xd3, 0x43, 0x23, 0x69, 0xcc, 0x31, 0xe6,
	0x4b, 0x9d, 0x1f, 0xcd, 0xfd, 0x20, 0x30, 0x75, 0xa4, 0x41, 0x48, 0x6d, 0xdc, 0xc4, 0xdb, 0xf8,
	0x17, 0x4a, 0xf2, 0x3b, 0x0d, 0x6e, 0xe6, 0xcc, 0xaf, 0xa4, 0x35, 0xff, 0xa4, 0x2b, 0x19, 0xfd,
	0xff, 0x9b, 0x8e, 0xc6, 0xe6, 0x5d, 0x24, 0xb6, 0x69, 0xea, 0x29, 0x62, 0xa3, 0xf1, 0x49, 0x7c,
	0x24, 0x93, 0x72, 0x08, 0xab, 0x93, 0x33, 0x0e, 0xd9, 0xbd, 0x72, 0x02, 0x95, 0x94, 0x3e, 0x9c,
	0x73, 0x52, 0x35, 0xeb, 0xc8, 0xa4, 0x46, 0x56, 0x93, 0x56, 0xaa, 0x1c, 0xf4, 0x5b, 0x0d, 0x6e,
	0x64, 0x8e, 0x59, 0xe4, 0xe3, 0x79, 0xc7, 0x31, 0xc9, 0xa4, 0xf9, 0x66, 0xd3, 0x9b, 0xb9, 0x83,
	0x84, 0x36, 0xcc, 0xfa, 0x88, 0x50, 0x86, 0x63, 0x5e, 0x8b, 0x87, 0x7a, 0x6a, 0xfc, 0x21, 0x79,
	0xbd, 0x69, 0x72, 0x52, 0x33, 0x76, 0xaf, 0x82, 0x29, 0x12, 0x9b, 0x48, 0xe2, 0xa6, 0x49, 0x04,
	0x09, 0x35, 0x27, 0xb5, 0x47, 0xed, 0xe2, 0xa9, 0xfe, 0xa3, 0xfa, 0xd4, 0xbf, 0x82, 0x3f, 0x91,
	0xbf, 0x4e, 0x8a, 0x58, 0x08, 0x8f, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x3c, 0xac, 0x08,
	0x2b, 0x1e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PointsClient is the client API for Points service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PointsClient interface {
	// Gets a brand.
	GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Lists brands.
	ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error)
	// Sets a brand.
	SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a tag.
	GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Lists tags.
	ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error)
	// Sets a tag.
	SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Deletes a tag.
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets a point.
	GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error)
	// Search points.
	SearchPoints(ctx context.Context, in *SearchPointsRequest, opts ...grpc.CallOption) (*SearchPointsResponse, error)
	// Search points.
	PolygonSearchPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonSearchPointsClient, error)
	// Search points.
	RadiusSearchPoints(ctx context.Context, in *RadiusSearchPointsRequest, opts ...grpc.CallOption) (*RadiusSearchPointsResponse, error)
	// Sets a point.
	SetPoint(ctx context.Context, in *SetPointRequest, opts ...grpc.CallOption) (*Point, error)
	// Deletes a point.
	DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CountBrandPoints(ctx context.Context, in *CountBrandPointsRequest, opts ...grpc.CallOption) (*CountBrandPointsResponse, error)
	PolygonCountBrandPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountBrandPointsClient, error)
	CountTagPoints(ctx context.Context, in *CountTagPointsRequest, opts ...grpc.CallOption) (*CountTagPointsResponse, error)
	PolygonCountTagPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountTagPointsClient, error)
	SearchRegions(ctx context.Context, in *SearchRegionsRequest, opts ...grpc.CallOption) (*SearchRegionsResponse, error)
}

type pointsClient struct {
	cc *grpc.ClientConn
}

func NewPointsClient(cc *grpc.ClientConn) PointsClient {
	return &pointsClient{cc}
}

func (c *pointsClient) GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) ListBrands(ctx context.Context, in *ListBrandsRequest, opts ...grpc.CallOption) (*ListBrandsResponse, error) {
	out := new(ListBrandsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/ListBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetBrand(ctx context.Context, in *SetBrandRequest, opts ...grpc.CallOption) (*Brand, error) {
	out := new(Brand)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error) {
	out := new(ListTagsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) GetPoint(ctx context.Context, in *GetPointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/GetPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SearchPoints(ctx context.Context, in *SearchPointsRequest, opts ...grpc.CallOption) (*SearchPointsResponse, error) {
	out := new(SearchPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonSearchPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonSearchPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[0], "/topos.points.v1.Points/PolygonSearchPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonSearchPointsClient{stream}
	return x, nil
}

type Points_PolygonSearchPointsClient interface {
	Send(*PolygonSearchPointsRequest) error
	CloseAndRecv() (*PolygonSearchPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonSearchPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonSearchPointsClient) Send(m *PolygonSearchPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonSearchPointsClient) CloseAndRecv() (*PolygonSearchPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonSearchPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) RadiusSearchPoints(ctx context.Context, in *RadiusSearchPointsRequest, opts ...grpc.CallOption) (*RadiusSearchPointsResponse, error) {
	out := new(RadiusSearchPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/RadiusSearchPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) SetPoint(ctx context.Context, in *SetPointRequest, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SetPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) DeletePoint(ctx context.Context, in *DeletePointRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/DeletePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) CountBrandPoints(ctx context.Context, in *CountBrandPointsRequest, opts ...grpc.CallOption) (*CountBrandPointsResponse, error) {
	out := new(CountBrandPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CountBrandPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonCountBrandPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountBrandPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[1], "/topos.points.v1.Points/PolygonCountBrandPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonCountBrandPointsClient{stream}
	return x, nil
}

type Points_PolygonCountBrandPointsClient interface {
	Send(*PolygonCountBrandPointsRequest) error
	CloseAndRecv() (*PolygonCountBrandPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonCountBrandPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonCountBrandPointsClient) Send(m *PolygonCountBrandPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonCountBrandPointsClient) CloseAndRecv() (*PolygonCountBrandPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonCountBrandPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) CountTagPoints(ctx context.Context, in *CountTagPointsRequest, opts ...grpc.CallOption) (*CountTagPointsResponse, error) {
	out := new(CountTagPointsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/CountTagPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsClient) PolygonCountTagPoints(ctx context.Context, opts ...grpc.CallOption) (Points_PolygonCountTagPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Points_serviceDesc.Streams[2], "/topos.points.v1.Points/PolygonCountTagPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &pointsPolygonCountTagPointsClient{stream}
	return x, nil
}

type Points_PolygonCountTagPointsClient interface {
	Send(*PolygonCountTagPointsRequest) error
	CloseAndRecv() (*PolygonCountTagPointsResponse, error)
	grpc.ClientStream
}

type pointsPolygonCountTagPointsClient struct {
	grpc.ClientStream
}

func (x *pointsPolygonCountTagPointsClient) Send(m *PolygonCountTagPointsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pointsPolygonCountTagPointsClient) CloseAndRecv() (*PolygonCountTagPointsResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PolygonCountTagPointsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pointsClient) SearchRegions(ctx context.Context, in *SearchRegionsRequest, opts ...grpc.CallOption) (*SearchRegionsResponse, error) {
	out := new(SearchRegionsResponse)
	err := c.cc.Invoke(ctx, "/topos.points.v1.Points/SearchRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointsServer is the server API for Points service.
type PointsServer interface {
	// Gets a brand.
	GetBrand(context.Context, *GetBrandRequest) (*Brand, error)
	// Lists brands.
	ListBrands(context.Context, *ListBrandsRequest) (*ListBrandsResponse, error)
	// Sets a brand.
	SetBrand(context.Context, *SetBrandRequest) (*Brand, error)
	// Deletes a brand.
	DeleteBrand(context.Context, *DeleteBrandRequest) (*empty.Empty, error)
	// Gets a tag.
	GetTag(context.Context, *GetTagRequest) (*Tag, error)
	// Lists tags.
	ListTags(context.Context, *ListTagsRequest) (*ListTagsResponse, error)
	// Sets a tag.
	SetTag(context.Context, *SetTagRequest) (*Tag, error)
	// Deletes a tag.
	DeleteTag(context.Context, *DeleteTagRequest) (*empty.Empty, error)
	// Gets a point.
	GetPoint(context.Context, *GetPointRequest) (*Point, error)
	// Search points.
	SearchPoints(context.Context, *SearchPointsRequest) (*SearchPointsResponse, error)
	// Search points.
	PolygonSearchPoints(Points_PolygonSearchPointsServer) error
	// Search points.
	RadiusSearchPoints(context.Context, *RadiusSearchPointsRequest) (*RadiusSearchPointsResponse, error)
	// Sets a point.
	SetPoint(context.Context, *SetPointRequest) (*Point, error)
	// Deletes a point.
	DeletePoint(context.Context, *DeletePointRequest) (*empty.Empty, error)
	CountBrandPoints(context.Context, *CountBrandPointsRequest) (*CountBrandPointsResponse, error)
	PolygonCountBrandPoints(Points_PolygonCountBrandPointsServer) error
	CountTagPoints(context.Context, *CountTagPointsRequest) (*CountTagPointsResponse, error)
	PolygonCountTagPoints(Points_PolygonCountTagPointsServer) error
	SearchRegions(context.Context, *SearchRegionsRequest) (*SearchRegionsResponse, error)
}

// UnimplementedPointsServer can be embedded to have forward compatible implementations.
type UnimplementedPointsServer struct {
}

func (*UnimplementedPointsServer) GetBrand(ctx context.Context, req *GetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedPointsServer) ListBrands(ctx context.Context, req *ListBrandsRequest) (*ListBrandsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBrands not implemented")
}
func (*UnimplementedPointsServer) SetBrand(ctx context.Context, req *SetBrandRequest) (*Brand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBrand not implemented")
}
func (*UnimplementedPointsServer) DeleteBrand(ctx context.Context, req *DeleteBrandRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrand not implemented")
}
func (*UnimplementedPointsServer) GetTag(ctx context.Context, req *GetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}
func (*UnimplementedPointsServer) ListTags(ctx context.Context, req *ListTagsRequest) (*ListTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedPointsServer) SetTag(ctx context.Context, req *SetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedPointsServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedPointsServer) GetPoint(ctx context.Context, req *GetPointRequest) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoint not implemented")
}
func (*UnimplementedPointsServer) SearchPoints(ctx context.Context, req *SearchPointsRequest) (*SearchPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonSearchPoints(srv Points_PolygonSearchPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonSearchPoints not implemented")
}
func (*UnimplementedPointsServer) RadiusSearchPoints(ctx context.Context, req *RadiusSearchPointsRequest) (*RadiusSearchPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RadiusSearchPoints not implemented")
}
func (*UnimplementedPointsServer) SetPoint(ctx context.Context, req *SetPointRequest) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPoint not implemented")
}
func (*UnimplementedPointsServer) DeletePoint(ctx context.Context, req *DeletePointRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoint not implemented")
}
func (*UnimplementedPointsServer) CountBrandPoints(ctx context.Context, req *CountBrandPointsRequest) (*CountBrandPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountBrandPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonCountBrandPoints(srv Points_PolygonCountBrandPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonCountBrandPoints not implemented")
}
func (*UnimplementedPointsServer) CountTagPoints(ctx context.Context, req *CountTagPointsRequest) (*CountTagPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTagPoints not implemented")
}
func (*UnimplementedPointsServer) PolygonCountTagPoints(srv Points_PolygonCountTagPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PolygonCountTagPoints not implemented")
}
func (*UnimplementedPointsServer) SearchRegions(ctx context.Context, req *SearchRegionsRequest) (*SearchRegionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchRegions not implemented")
}

func RegisterPointsServer(s *grpc.Server, srv PointsServer) {
	s.RegisterService(&_Points_serviceDesc, srv)
}

func _Points_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetBrand(ctx, req.(*GetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_ListBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBrandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).ListBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/ListBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).ListBrands(ctx, req.(*ListBrandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetBrand(ctx, req.(*SetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeleteBrand(ctx, req.(*DeleteBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetTag(ctx, req.(*GetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).ListTags(ctx, req.(*ListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetTag(ctx, req.(*SetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_GetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).GetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/GetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).GetPoint(ctx, req.(*GetPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SearchPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchPoints(ctx, req.(*SearchPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonSearchPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonSearchPoints(&pointsPolygonSearchPointsServer{stream})
}

type Points_PolygonSearchPointsServer interface {
	SendAndClose(*PolygonSearchPointsResponse) error
	Recv() (*PolygonSearchPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonSearchPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonSearchPointsServer) SendAndClose(m *PolygonSearchPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonSearchPointsServer) Recv() (*PolygonSearchPointsRequest, error) {
	m := new(PolygonSearchPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_RadiusSearchPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RadiusSearchPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).RadiusSearchPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/RadiusSearchPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).RadiusSearchPoints(ctx, req.(*RadiusSearchPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_SetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SetPoint(ctx, req.(*SetPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_DeletePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).DeletePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/DeletePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).DeletePoint(ctx, req.(*DeletePointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_CountBrandPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountBrandPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CountBrandPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CountBrandPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CountBrandPoints(ctx, req.(*CountBrandPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonCountBrandPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonCountBrandPoints(&pointsPolygonCountBrandPointsServer{stream})
}

type Points_PolygonCountBrandPointsServer interface {
	SendAndClose(*PolygonCountBrandPointsResponse) error
	Recv() (*PolygonCountBrandPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonCountBrandPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonCountBrandPointsServer) SendAndClose(m *PolygonCountBrandPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonCountBrandPointsServer) Recv() (*PolygonCountBrandPointsRequest, error) {
	m := new(PolygonCountBrandPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_CountTagPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTagPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).CountTagPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/CountTagPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).CountTagPoints(ctx, req.(*CountTagPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Points_PolygonCountTagPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PointsServer).PolygonCountTagPoints(&pointsPolygonCountTagPointsServer{stream})
}

type Points_PolygonCountTagPointsServer interface {
	SendAndClose(*PolygonCountTagPointsResponse) error
	Recv() (*PolygonCountTagPointsRequest, error)
	grpc.ServerStream
}

type pointsPolygonCountTagPointsServer struct {
	grpc.ServerStream
}

func (x *pointsPolygonCountTagPointsServer) SendAndClose(m *PolygonCountTagPointsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pointsPolygonCountTagPointsServer) Recv() (*PolygonCountTagPointsRequest, error) {
	m := new(PolygonCountTagPointsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Points_SearchRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsServer).SearchRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topos.points.v1.Points/SearchRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsServer).SearchRegions(ctx, req.(*SearchRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Points_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topos.points.v1.Points",
	HandlerType: (*PointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrand",
			Handler:    _Points_GetBrand_Handler,
		},
		{
			MethodName: "ListBrands",
			Handler:    _Points_ListBrands_Handler,
		},
		{
			MethodName: "SetBrand",
			Handler:    _Points_SetBrand_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _Points_DeleteBrand_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _Points_GetTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _Points_ListTags_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _Points_SetTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _Points_DeleteTag_Handler,
		},
		{
			MethodName: "GetPoint",
			Handler:    _Points_GetPoint_Handler,
		},
		{
			MethodName: "SearchPoints",
			Handler:    _Points_SearchPoints_Handler,
		},
		{
			MethodName: "RadiusSearchPoints",
			Handler:    _Points_RadiusSearchPoints_Handler,
		},
		{
			MethodName: "SetPoint",
			Handler:    _Points_SetPoint_Handler,
		},
		{
			MethodName: "DeletePoint",
			Handler:    _Points_DeletePoint_Handler,
		},
		{
			MethodName: "CountBrandPoints",
			Handler:    _Points_CountBrandPoints_Handler,
		},
		{
			MethodName: "CountTagPoints",
			Handler:    _Points_CountTagPoints_Handler,
		},
		{
			MethodName: "SearchRegions",
			Handler:    _Points_SearchRegions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PolygonSearchPoints",
			Handler:       _Points_PolygonSearchPoints_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PolygonCountBrandPoints",
			Handler:       _Points_PolygonCountBrandPoints_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PolygonCountTagPoints",
			Handler:       _Points_PolygonCountTagPoints_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "topos/points/v1/points.proto",
}
