syntax = "proto3";

package topos.timeseries.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service TimeSeries {
  // Gets value for a time series bin.
  rpc GetTimeSeriesBin(GetTimeSeriesBinRequest) returns (TimeSeriesBin) {
    option (google.api.http) = {
      post : "/v1/time-series-bin"
      body : "*"
    };
  }

  // Gets a number of time series feature values.
  rpc GetTimeSeriesBinBulk(GetTimeSeriesBinBulkRequest)
    returns (GetTimeSeriesBinBulkResponse) {
    option (google.api.http) = {
      post : "/v1/time-series/bulk"
      body : "*"
    };
  }

  // Lists features.
  rpc ListTimeSeriesFeatures(ListTimeSeriesFeaturesRequest)
    returns (ListTimeSeriesFeaturesResponse) {
    option (google.api.http) = {
      get : "/v1/time-series-features"
    };
  }

  // Sets a time series feature value.
  rpc SetTimeSeriesBin(SetTimeSeriesBinRequest) returns (TimeSeriesBin) {
    option (google.api.http) = {
      post : "/v1/{bin.region_id=bin/*}:set"
      body : "bin"
    };
  }

  // Sets a time series feature.
  rpc SetTimeSeriesFeature(SetTimeSeriesFeatureRequest)
    returns (TimeSeriesFeature) {
    option (google.api.http) = {
      post : "/v1/{feature.name=bin/*}:set"
      body : "feature"
    };
  }

  // Deletes a time series bin.
  rpc DeleteTimeSeriesBin(DeleteTimeSeriesBinRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/v1/{bin.region_id=bin/*}:delete"
      body : "bin"
    };
  }

  rpc DeleteTimeSeriesFeature(DeleteTimeSeriesFeatureRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/{name=feature/*}"
    };
  }

}

enum Day {
  MON = 0;
  TUES = 1;
  WED = 2;
  THU = 3;
  FRI = 4;
  SAT = 5;
  SUN = 6;
}

message TimeSeriesFeature {
  string name = 1;
  string display_name = 2;
  string description = 3;
  string source = 4;
  int64 sampling_interval = 5;
}

message TimeSeriesBin {
  string region_id = 1;
  string feature_name = 2;
  Day day = 3;
  string start_time = 4;
  int64 value = 6;
}

message TimeSeriesValues{
  repeated int64 values = 1;
}

message GetTimeSeriesBinRequest {
  string region_name = 1;
  string feature_name = 2;
  Day day = 3;
  string start_time = 4;
  string end_time = 5;
}

message GetTimeSeriesBinBulkRequest {
  string feature_name = 1;
  repeated string region_names = 2;
  Day day = 3;
  string start_time = 4;
  string end_time = 5;
}

message GetTimeSeriesBinBulkResponse {
  map<string, TimeSeriesValues> time_series = 1;
}

message SetTimeSeriesFeatureRequest { TimeSeriesFeature feature = 1; }

message SetTimeSeriesBinRequest { TimeSeriesBin bin = 1; }

message DeleteTimeSeriesBinRequest { TimeSeriesBin bin = 1; }

message DeleteTimeSeriesFeatureRequest { string name = 1; }

message ListTimeSeriesFeaturesRequest {
  // The maximum number of items to return.
  int32 page_size = 1;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

message ListTimeSeriesFeaturesResponse {
  repeated TimeSeriesFeature features = 1;

  // Token to retrieve the next page of results, or empty if there are no more
  // results in the list.
  string next_page_token = 2;
}

